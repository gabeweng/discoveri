/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/about"],{

/***/ "./node_modules/@builder.io/react/dist/builder-react.es5.js":
/*!******************************************************************!*\
  !*** ./node_modules/@builder.io/react/dist/builder-react.es5.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Builder: function() { return /* reexport safe */ _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder; },\n/* harmony export */   BuilderAsyncRequestsContext: function() { return /* binding */ BuilderAsyncRequestsContext; },\n/* harmony export */   BuilderBlock: function() { return /* binding */ BuilderBlock; },\n/* harmony export */   BuilderBlockComponent: function() { return /* binding */ BuilderBlock$1; },\n/* harmony export */   BuilderBlocks: function() { return /* binding */ BuilderBlocks; },\n/* harmony export */   BuilderComponent: function() { return /* binding */ BuilderComponent; },\n/* harmony export */   BuilderContent: function() { return /* binding */ BuilderContent; },\n/* harmony export */   BuilderMetaContext: function() { return /* binding */ BuilderMetaContext; },\n/* harmony export */   BuilderPage: function() { return /* binding */ BuilderComponent; },\n/* harmony export */   BuilderStoreContext: function() { return /* binding */ BuilderStoreContext; },\n/* harmony export */   Button: function() { return /* binding */ Button; },\n/* harmony export */   Columns: function() { return /* binding */ Columns; },\n/* harmony export */   CustomCode: function() { return /* binding */ CustomCode; },\n/* harmony export */   Dropzone: function() { return /* binding */ Slot; },\n/* harmony export */   Embed: function() { return /* binding */ Embed; },\n/* harmony export */   Form: function() { return /* binding */ Form; },\n/* harmony export */   FormInput: function() { return /* binding */ FormInput; },\n/* harmony export */   FormSelect: function() { return /* binding */ FormSelect; },\n/* harmony export */   FormSubmitButton: function() { return /* binding */ FormSubmitButton; },\n/* harmony export */   Fragment: function() { return /* binding */ Fragment; },\n/* harmony export */   Image: function() { return /* binding */ Image; },\n/* harmony export */   Img: function() { return /* binding */ Img; },\n/* harmony export */   Label: function() { return /* binding */ Label; },\n/* harmony export */   Mutation: function() { return /* binding */ Mutation; },\n/* harmony export */   RawText: function() { return /* binding */ RawText; },\n/* harmony export */   RenderContent: function() { return /* binding */ BuilderComponent; },\n/* harmony export */   Router: function() { return /* binding */ Router; },\n/* harmony export */   Section: function() { return /* binding */ Section; },\n/* harmony export */   StateProvider: function() { return /* binding */ StateProvider; },\n/* harmony export */   Symbol: function() { return /* binding */ Symbol$1; },\n/* harmony export */   Text: function() { return /* binding */ Text; },\n/* harmony export */   TextArea: function() { return /* binding */ TextArea; },\n/* harmony export */   Video: function() { return /* binding */ Video; },\n/* harmony export */   builder: function() { return /* reexport safe */ _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder; },\n/* harmony export */   \"default\": function() { return /* reexport safe */ _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder; },\n/* harmony export */   getSrcSet: function() { return /* binding */ getSrcSet; },\n/* harmony export */   noWrap: function() { return /* binding */ noWrap; },\n/* harmony export */   onChange: function() { return /* binding */ onChange; },\n/* harmony export */   stringToFunction: function() { return /* binding */ stringToFunction; },\n/* harmony export */   updateMetadata: function() { return /* binding */ updateMetadata; },\n/* harmony export */   useIsPreviewing: function() { return /* binding */ useIsPreviewing; },\n/* harmony export */   withBuilder: function() { return /* binding */ withBuilder; },\n/* harmony export */   withChildren: function() { return /* binding */ withChildren; }\n/* harmony export */ });\n/* harmony import */ var _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @builder.io/sdk */ \"./node_modules/@builder.io/sdk/dist/index.esm.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var hash_sum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! hash-sum */ \"./node_modules/hash-sum/hash-sum.js\");\n/* harmony import */ var hash_sum__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(hash_sum__WEBPACK_IMPORTED_MODULE_4__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\nvar version=\"3.0.8-1\",_a;\"undefined\"!=typeof window&&(null===(_a=window.parent)||void 0===_a||_a.postMessage({type:\"builder.isReactSdk\",data:{value:!0,supportsPatchUpdates:\"v4\",supportsCustomBreakpoints:!0,priorVersion:version}},\"*\"));var extendStatics=function(e,t){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)};function __extends(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function n(){this.constructor=e}extendStatics(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var __assign=function(){return(__assign=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};function __decorate(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a}function __metadata(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function __awaiter(e,t,n,i){return new(n||(n=Promise))((function(r,o){function a(e){try{l(i.next(e))}catch(e){o(e)}}function s(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}l((i=i.apply(e,t||[])).next())}))}function __generator(e,t){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(s){return function(l){return function(s){if(n)throw new TypeError(\"Generator is already executing.\");for(;o&&(o=0,s[0]&&(a=0)),a;)try{if(n=1,i&&(r=2&s[0]?i.return:s[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,s[1])).done)return r;switch(i=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,i=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){a.label=s[1];break}if(6===s[0]&&a.label<r[1]){a.label=r[1],r=s;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(s);break}r[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(e,a)}catch(e){s=[6,e],i=0}finally{n=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}}function __spreadArray(e,t,n){if(n||2===arguments.length)for(var i,r=0,o=t.length;r<o;r++)!i&&r in t||(i||(i=Array.prototype.slice.call(t,0,r)),i[r]=t[r]);return e.concat(i||Array.prototype.slice.call(t))}var fastClone=function(e){return JSON.parse(JSON.stringify(e))},sizeNames=[\"xsmall\",\"small\",\"medium\",\"large\"],sizes={xsmall:{min:0,default:0,max:0},small:{min:320,default:321,max:640},medium:{min:641,default:642,max:991},large:{min:990,default:991,max:1200},getWidthForSize:function(e){return this[e].default},getSizeForWidth:function(e){for(var t=0,n=sizeNames;t<n.length;t++){var i=n[t];if(e<=this[i].max)return i}return\"large\"}},getSizesForBreakpoints=function(e){var t=e.small,n=e.medium,i=__assign(__assign({},sizes),fastClone(sizes));if(!t||!n)return i;var r=Math.floor(t/2);i.small={max:t,min:r,default:r+1};var o=i.small.max+1;i.medium={max:n,min:o,default:o+1};var a=i.medium.max+1;return i.large={max:2e3,min:a,default:a+1},i},set=function(e,t,n){if(Object(e)!==e)return e;var i=Array.isArray(t)?t:t.toString().match(/[^.[\\]]+/g);return i.slice(0,-1).reduce((function(e,t,n){return Object(e[t])===e[t]?e[t]:e[t]=Math.abs(Number(i[n+1]))>>0==+i[n+1]?[]:{}}),e)[i[i.length-1]]=n,e},noop=function(){return null},safeDynamicRequire;if(\"function\"==typeof(null===globalThis||void 0===globalThis?void 0:globalThis.require)||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer&&\"function\"==\"function\")try{safeDynamicRequire=eval(\"require\")}catch(e){safeDynamicRequire=(null===globalThis||void 0===globalThis?void 0:globalThis.require)?globalThis.require:noop}function isDebug(){return Boolean(\"undefined\"!=typeof process&&void 0!==process.env&&process.env.DEBUG)}null!=safeDynamicRequire||(safeDynamicRequire=noop);var fnCache={},api=function(e){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder};function stringToFunction(e,t,n,i){if(void 0===t&&(t=!0),!e||!e.trim())return function(){};var r=e+\":\"+t;if(fnCache[r])return fnCache[r];var o=t&&!(e.includes(\";\")||e.includes(\" return \")||e.trim().startsWith(\"return \"))||e.trim().startsWith(\"builder.run\"),a=function(){};try{_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(a=new Function(\"state\",\"event\",\"block\",\"builder\",\"Device\",\"update\",\"Builder\",\"context\",\"\\n          var names = [\\n            'state',\\n            'event',\\n            'block',\\n            'builder',\\n            'Device',\\n            'update',\\n            'Builder',\\n            'context'\\n          ];\\n          var rootState = state;\\n          if (typeof Proxy !== 'undefined') {\\n            rootState = new Proxy(rootState, {\\n              set: function () {\\n                return false;\\n              },\\n              get: function (target, key) {\\n                if (names.includes(key)) {\\n                  return undefined;\\n                }\\n                return target[key];\\n              }\\n            });\\n          }\\n          /* Alias */\\n          var ctx = context;\\n          var log = console.log.bind(console);\\n          with (rootState) {\\n            \".concat(o?\"return (\".concat(e,\");\"):e,\";\\n          }\\n        \")))}catch(t){n&&n.push(t);var s=t&&t.message;s&&\"string\"==typeof s&&i&&-1===i.indexOf(s)&&i.push(s),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&console.warn(\"Function compile error in \".concat(e),t)}var l=function(){for(var t=[],i=0;i<arguments.length;i++)t[i]=arguments[i];try{if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser)return a.apply(void 0,t);var r=getIsolateContext(),s=r.global;s.setSync(\"global\",s.derefInto()),s.setSync(\"log\",(function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];isDebug()&&console.log.apply(console,e)}));var l=safeDynamicRequire(\"isolated-vm\");return r.evalClosureSync(makeFn(e,o),t.map((function(e,t){return\"object\"==typeof e?new l.Reference(t===indexOfBuilderInstance?__assign(__assign({},e),{getUserAttributes:function(){return e.getUserAttributes(\"\")}}):e):null})))}catch(t){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser?console.warn(\"Builder custom code error:\",t.message||t,\"in\",e,t.stack||t):isDebug()&&console.debug(\"Builder custom code error:\",t.message||t,\"in\",e,t.stack||t),n&&n.push(t),null}};return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(fnCache[r]=l),l}var indexOfBuilderInstance=3,makeFn=function(e,t){return\"\\n  const refToProxy = (obj) => {\\n  if (typeof obj !== 'object' || obj === null) {\\n    return obj;\\n  }\\n  return new Proxy({}, {\\n      get(target, key) {\\n          const val = obj.getSync(key);\\n          if (typeof val?.getSync === 'function') {\\n              return refToProxy(val);\\n          }\\n          return val;\\n      },\\n      set(target, key, value) {\\n          obj.setSync(key, value);\\n      },\\n      deleteProperty(target, key) {\\n          obj.deleteSync(key);\\n      }\\n    })\\n}\\n\".concat([\"state\",\"event\",\"block\",\"builder\",\"Device\",\"update\",\"Builder\",\"context\"].map((function(e,t){return\"var \".concat(e,\" = refToProxy($\").concat(t,\");\")})).join(\"\\n\")).concat(\"\\nvar ctx = context;\\n\".concat(t?\"return (\".concat(e,\");\"):e,\";\\n\"))},getIsolateContext=function(){if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.serverContext)return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.serverContext;var e=new(safeDynamicRequire(\"isolated-vm\").Isolate)({memoryLimit:128});return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.setServerContext(e.createContextSync()),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.serverContext},isPromise=function(e){return\"function\"==typeof e.then},isRequestInfo=function(e){return!isPromise(e)},BuilderAsyncRequestsContext=react__WEBPACK_IMPORTED_MODULE_2___default().createContext({requests:[],errors:[],logs:[]}),BuilderStoreContext=react__WEBPACK_IMPORTED_MODULE_2___default().createContext({state:{},rootState:{},content:{},context:{},update:function(e){return null}}),applyPatchWithMinimalMutationChain=function(e,t,n){if(void 0===n&&(n=!1),Object(e)!==e)return e;var i=t.path,r=t.op,o=t.value,a=i.split(/\\//);\"\"===a[0]&&a.shift();for(var s=n?e:__assign({},e),l=s,u=0;u<a.length;u++){var d=u===a.length-1,c=a[u];if(d){if(\"replace\"===r)l[c]=o;else if(\"add\"===r){var p=Number(c);Array.isArray(l)?\"-\"===c?l.push(o):l.splice(p,0,o):l[c]=o}else if(\"remove\"===r){p=Number(c);Array.isArray(l)?l.splice(p,1):delete l[c]}}else{var f=a[u+1],m=Object(l[c])===l[c]?l[c]:String(Number(f))===f?[]:{};l=l[c]=Array.isArray(m)?__spreadArray([],m,!0):__assign({},m)}}return s},htmlEscape=function(e){return e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\")},blockToHtmlString=function(e){var t;return\"<\".concat(htmlEscape(e.tagName||\"div\"),' \\n    class=\"builder-block ').concat(e.id,\" \").concat(e.class||\"\",'\"\\n    builder-id=\"').concat(e.id,'\"\\n  ').concat(Object.keys(e.properties||{}).map((function(t){return\"\".concat(htmlEscape(t),'=\"').concat(htmlEscape(e.properties[t]),'\"')})).join(\" \"),\"\\n  >\").concat(\"Text\"===(null===(t=null==e?void 0:e.component)||void 0===t?void 0:t.name)?e.component.options.text:e.children?e.children.map((function(e){return blockToHtmlString(e)})).join(\"\"):\"\",\"</\").concat(e.tagName||\"div\",\">\").replace(/\\s+/g,\" \")},Link=function(e){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderStoreContext.Consumer,null,(function(t){return t.renderLink?t.renderLink(e):react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"a\",__assign({},e))}))},camelCaseToKebabCase=function(e){return e?e.replace(/([A-Z])/g,(function(e){return\"-\".concat(e[0].toLowerCase())})):\"\"},kebabCaseToCamelCase=function(e){return void 0===e&&(e=\"\"),e.replace(/-([a-z])/g,(function(e){return e[1].toUpperCase()}))},Device={desktop:0,tablet:1,mobile:2},voidElements=new Set([\"area\",\"base\",\"br\",\"col\",\"embed\",\"hr\",\"img\",\"input\",\"link\",\"meta\",\"param\",\"source\",\"track\",\"wbr\",\"textarea\"]),last=function(e){return e[e.length-1]};function omit$1(e,t){for(var n=Object.assign({},e),i=0,r=t;i<r.length;i++){delete n[r[i]]}return n}var cssCase=function(e){if(!e)return e;var t=camelCaseToKebabCase(e);return e[0]===e[0].toUpperCase()&&(t=\"-\"+t),t};function capitalize(e){if(e)return e[0].toUpperCase()+e.slice(1)}var BuilderBlock$1=function(_super){function BuilderBlock(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.state={hasError:!1,updates:0},_this.privateState={state:{},rootState:{},context:{},update:function(){}},_this.onWindowMessage=function(event){var message=event.data;if(message)switch(message.type){case\"builder.selectionChange\":var data=message.data;if(!data)break;var selection=data.selection,id=_this.block&&_this.block.id;id&&Array.isArray(selection)&&selection.indexOf(id)>-1&&setTimeout((function(){window.$block=_this,window.$blocks||(window.$blocks=[]),window.$blocks.push(_this)}));break;case\"builder.patchUpdates\":var data=message.data;if(!data||!data.data)break;var patches=data.data[_this.block.id];if(!patches)return;location.href.includes(\"builder.debug=true\")&&eval(\"debugger\");for(var _i=0,patches_1=patches;_i<patches_1.length;_i++){var patch=patches_1[_i];applyPatchWithMinimalMutationChain(_this.props.block,patch,!0)}_this.setState({updates:_this.state.updates+1})}},_this}return __extends(BuilderBlock,_super),Object.defineProperty(BuilderBlock.prototype,\"store\",{get:function(){return this.privateState},enumerable:!1,configurable:!0}),BuilderBlock.getDerivedStateFromError=function(e){return{hasError:!0}},BuilderBlock.prototype.componentDidCatch=function(e,t){console.error(\"Builder block error:\",e,t)},BuilderBlock.prototype.stringToFunction=function(e,t){return void 0===t&&(t=!0),stringToFunction(e,t,this._errors,this._logs)},Object.defineProperty(BuilderBlock.prototype,\"block\",{get:function(){return this.props.block},enumerable:!1,configurable:!0}),Object.defineProperty(BuilderBlock.prototype,\"emotionCss\",{get:function(){var e,t,n,i,r,o=this.block;if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer){var a=o.animations&&o.animations[0];if(a&&\"hover\"!==a.trigger){var s=a&&a.steps&&a.steps[0],l=s&&s.styles;l&&(r=l)}}var u=sizeNames.slice().reverse(),d=this.block,c={};if(d.responsiveStyles)for(var p=0,f=u;p<f.length;p++){var m=f[p];if(\"large\"===m)this.props.emailMode||(c[\"&.builder-block\"]=Object.assign({},d.responsiveStyles[m],r));else{var h=getSizesForBreakpoints((null===(t=null===(e=this.privateState.context.builderContent)||void 0===e?void 0:e.meta)||void 0===t?void 0:t.breakpoints)||{});c[\"@media only screen and (max-width: \".concat(h[m].max,\"px)\")]={\"&.builder-block\":d.responsiveStyles[m]}}}var g=o.animations&&o.animations.find((function(e){return\"hover\"===e.trigger}));return g&&(c[\":hover\"]=(null===(i=null===(n=g.steps)||void 0===n?void 0:n[1])||void 0===i?void 0:i.styles)||{},c.transition=\"all \".concat(g.duration,\"s \").concat(camelCaseToKebabCase(g.easing)),g.delay&&(c.transitionDelay=g.delay+\"s\")),c},enumerable:!1,configurable:!0}),BuilderBlock.prototype.eval=function(e){return this.stringToFunction(e)(this.privateState.state,void 0,this.block,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder,Device,this.privateState.update,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,this.privateState.context)},BuilderBlock.prototype.componentWillUnmount=function(){_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&removeEventListener(\"message\",this.onWindowMessage)},BuilderBlock.prototype.componentDidMount=function(){var e,t=this,n=this.block,i=n&&n.animations;if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&addEventListener(\"message\",this.onWindowMessage),i){var r={animations:fastClone(i)};if(n.bindings)for(var o in n.bindings)if((null===(e=o.trim)||void 0===e?void 0:e.call(o))&&o.startsWith(\"animations.\")){var a=this.stringToFunction(n.bindings[o]);void 0!==a&&set(r,o,a(this.privateState.state,null,n,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder,null,null,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,this.privateState.context))}_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.animator.bindAnimations(r.animations.filter((function(e){return\"hover\"!==e.trigger})).map((function(e){return __assign(__assign({},e),{elementId:t.block.id})})))}},BuilderBlock.prototype.getElement=function(e,t){var n,i,r,o,a,s=this;void 0===e&&(e=0),void 0===t&&(t=this.privateState.state);var l=this.props;l.child,l.fieldName;var u,d=this.block,c=(d.tagName||\"div\").toLowerCase();if(\"template\"===c){var p=d.children?d.children.map((function(e){return blockToHtmlString(e)})).join(\" \"):\"\";return console.debug(\"template html\",p),(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"template\",__assign({},d.properties,{dangerouslySetInnerHTML:{__html:p}}))}var f=d.component&&(d.component.name||d.component.component),m=null;d.component&&!d.component.class&&(d.component&&d.component.tag?u=d.component.tag:(m=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.components.find((function(e){return e.name===f}))||null)&&m.class?u=m.class:m&&m.tag?u=m.tag:(null==f?void 0:f.startsWith(\"Builder:\"))?console.warn(\"Missing @builder.io/widgets installation, please install and import @builder.io/widgets to use \".concat(f.split(\":\")[1],\" in your content, more info here: https://github.com/BuilderIO/builder/tree/main/packages/widgets\")):f&&console.warn(\"Missing registration for \".concat(f,\", have you included the registration in your bundle?\")));var h=__assign(__assign({},d.properties),{style:{}});if(h=__assign(__assign({},h.properties),h),d.component&&(h.component=fastClone(d.component)),d.bindings)for(var g in d.bindings)if(null===(i=g.trim)||void 0===i?void 0:i.call(g)){var v=this.stringToFunction(d.bindings[g]);set(h,g,v(t,null,d,api(),Device,null,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,this.privateState.context))}if(h.hide)return null;if(delete h.hide,(\"show\"in h||d.bindings&&d.bindings.show)&&!h.show)return null;if(delete h.show,d.actions){var b=function(e){if(!(null===(r=e.trim)||void 0===r?void 0:r.call(e)))return\"continue\";var n=d.actions[e];h[\"on\"+capitalize(e)]=function(e){var i=t;return\"undefined\"!=typeof Proxy&&(i=new Proxy(t,{set:function(e,t,n){return e[t]=n,s.privateState.rootState[t]=n,!0}})),s.stringToFunction(n,!1)(i,e,s.block,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder,Device,s.privateState.update,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,s.privateState.context)}};for(var g in d.actions)b(g)}var y=(h.component||h.options)&&__assign(__assign({},h.options),h.component.options||h.component.data),_=voidElements.has(c),x=m&&(m.fragment||m.noWrap),S=(null===(o=h.attr)||void 0===o?void 0:o.style)||(\"string\"==typeof h.style?h.style:\"\")||\"\";if(\"string\"==typeof S){\"object\"!=typeof h.style&&(h.style={});for(var B=0,k=S.split(\";\");B<k.length;B++){var C=k[B].split(\":\");if(!C.length)return;g=C[0],v=C[1];g&&(C.length>2&&(v=C.slice(1).join(\":\")),h.style[kebabCaseToCamelCase(g)]=v)}}var w=__assign(__assign(__assign({},omit$1(h,[\"class\",\"component\",\"attr\"])),((n={})[\"string\"!=typeof c||c.includes(\"-\")?\"class\":\"className\"]=\"builder-block \".concat(this.id).concat(d.class?\" \".concat(d.class):\"\").concat(!d.component||[\"Image\",\"Video\",\"Banner\"].indexOf(f)>-1?\"\":\" builder-has-component\")+(h.class?\" \"+h.class:\"\")+(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&(null===(a=this.privateState.state._spacer)||void 0===a?void 0:a.parent)===d.id?\" builder-spacer-parent\":\"\"),n.key=this.id+e,n[\"builder-id\"]=this.id,n)),0!==e&&{\"builder-index\":e});_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&(w[\"builder-inline-styles\"]=h.attr&&h.attr.style?Object.keys(h.style).reduce((function(e,t){return(e?\"\".concat(e,\";\"):\"\")+\"\".concat(cssCase(t),\":\").concat(h.style[t],\";\")}),\"\"):\"\"),(w.properties&&w.properties.href||w.href)&&\"div\"===c&&(c=\"a\"),\"a\"===c&&(c=Link);var R=d.children||w.children||[];return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(_emotion_core__WEBPACK_IMPORTED_MODULE_1__.ClassNames,null,(function(e){var t=e.css;if(e.cx,!s.props.emailMode){var n=\" \"+t(s.emotionCss);w.class&&(w.class+=n),w.className&&(w.className+=n)}return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderAsyncRequestsContext.Consumer,null,(function(e){return s._asyncRequests=e&&e.requests,s._errors=e&&e.errors,s._logs=e&&e.logs,_?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(c,__assign({},w)):u&&(x||s.props.emailMode)?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(u,__assign({},y,{attributes:w,builderBlock:d,builderState:s.privateState})):(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(c,__assign({},w),u&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(u,__assign({builderState:s.privateState,builderBlock:d},y)),d.text||h.text?h.text:!u&&R&&Array.isArray(R)&&R.length?R.map((function(e,t){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlock,{key:(s.id||\"\")+t,block:e,index:t,size:s.props.size,fieldName:s.props.fieldName,child:s.props.child,emailMode:s.props.emailMode})})):null)}))})))},Object.defineProperty(BuilderBlock.prototype,\"id\",{get:function(){var e=this.block;return e.id.startsWith(\"builder\")?e.id:\"builder-\"+e.id},enumerable:!1,configurable:!0}),BuilderBlock.prototype.contents=function(e){var t=this,n=this.block;if(this.privateState=e,n.repeat&&n.repeat.collection){var i=n.repeat.collection,r=last((i||\"\").trim().split(\"(\")[0].trim().split(\".\")),o=n.repeat.itemName||(r?r+\"Item\":\"item\"),a=this.stringToFunction(i)(e.state,null,n,api(),Device,null,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,this.privateState.context);return Array.isArray(a)?a.map((function(n,i){var r,a=__assign(__assign({},e.state),((r={$index:i,$item:n})[o]=n,r[\"$\".concat(o,\"Index\")]=i,r));return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Provider,{key:i,value:__assign(__assign({},e),{state:a})},t.getElement(i,a))})):null}return this.getElement()},BuilderBlock.prototype.render=function(){var e=this;return this.state.hasError?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\",{css:{display:\"inline-block\",padding:5,color:\"#999\",fontSize:11,fontStyle:\"italic\"}},\"Builder block error :( Check console for details\"):(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Consumer,null,(function(t){return e.contents(t)}))},BuilderBlock}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),BuilderBlocks=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.onClickEmptyBlocks=function(){var e;_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isIframe&&t.noBlocks&&(null===(e=window.parent)||void 0===e||e.postMessage({type:\"builder.clickEmptyBlocks\",data:{parentElementId:t.parentId,dataPath:t.path}},\"*\"))},t.onHoverEmptyBlocks=function(){var e;_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&t.noBlocks&&(null===(e=window.parent)||void 0===e||e.postMessage({type:\"builder.hoverEmptyBlocks\",data:{parentElementId:t.parentId,dataPath:t.path}},\"*\"))},t}return __extends(t,e),Object.defineProperty(t.prototype,\"isRoot\",{get:function(){return!this.props.child},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"noBlocks\",{get:function(){var e=this.props.blocks;return!(e&&e.length)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"path\",{get:function(){var e=this.props.dataPath||\"\";return e.trim()&&(e.startsWith(\"this.\")?e=e.replace(\"this.\",\"\"):e.startsWith(\"component.options.\")||(e=\"component.options.\"+e)),e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"parentId\",{get:function(){return this.props.parentElementId?this.props.parentElementId:this.props.parent&&this.props.parent.id},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e=this,t=this.props.blocks,n=this.props.emailMode?\"span\":\"div\";return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(n,__assign({className:\"builder-blocks\"+(this.noBlocks?\" no-blocks\":\"\")+(this.props.child?\" builder-blocks-child\":\"\")+(this.props.className?\" \"+this.props.className:\"\"),\"builder-type\":\"blocks\",\"builder-path\":_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isIframe?this.path:void 0,\"builder-parent-id\":this.parentId,css:__assign(__assign({},!this.props.emailMode&&{display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\"}),this.props.style),onClick:function(){e.noBlocks&&e.onClickEmptyBlocks()}},_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&{onMouseEnter:function(){return e.onHoverEmptyBlocks()}}),t&&Array.isArray(t)&&t.map((function(t,n){return t&&\"@builder.io/sdk:Element\"===t[\"@type\"]?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlock$1,{key:t.id,block:t,index:n,fieldName:e.props.fieldName,child:e.props.child,emailMode:e.props.emailMode}):t}))||t)},t.renderInto=function(e,n,i){if(void 0===n&&(n={}),e){var r=null;return\"string\"==typeof e?r=document.querySelector(e):e instanceof Element&&(r=e),react_dom__WEBPACK_IMPORTED_MODULE_3__.render((0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Provider,{value:i},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(t,__assign({},n))),r)}},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),NoWrap=function(e){return e.children};function getData(e){if(void 0!==(null==e?void 0:e.data)){var t=e.data,n=t.blocks,i=t.blocksString,r=Array.isArray(n)||\"string\"==typeof i,o=__assign(__assign({},e.data),r&&{blocks:n||JSON.parse(i)});return delete o.blocksString,o}}var variantsScript=function(e,t){return\"\\n(function() {\\n  if (window.builderNoTrack || !navigator.cookieEnabled) {\\n    return;\\n  }\\n\\n  var variants = \".concat(e,\";\\n  function removeVariants() {\\n    variants.forEach(function (template) {\\n      document.querySelector('template[data-template-variant-id=\\\"' + template.id + '\\\"]').remove();\\n    });\\n    document.getElementById('variants-script-\").concat(t,'\\').remove();\\n  }\\n\\n  if (typeof document.createElement(\"template\").content === \\'undefined\\') {\\n    removeVariants();\\n    return ;\\n  }\\n\\n  function setCookie(name,value,days) {\\n    var expires = \"\";\\n    if (days) {\\n        var date = new Date();\\n        date.setTime(date.getTime() + (days*24*60*60*1000));\\n        expires = \"; expires=\" + date.toUTCString();\\n    }\\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\" + \"; Secure; SameSite=None\";\\n  }\\n\\n  function getCookie(name) {\\n    var nameEQ = name + \"=\";\\n    var ca = document.cookie.split(\\';\\');\\n    for(var i=0;i < ca.length;i++) {\\n        var c = ca[i];\\n        while (c.charAt(0)==\\' \\') c = c.substring(1,c.length);\\n        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\\n    }\\n    return null;\\n  }\\n  var cookieName = \\'builder.tests.').concat(t,\"';\\n  var variantInCookie = getCookie(cookieName);\\n  var availableIDs = variants.map(function(vr) { return vr.id }).concat('\").concat(t,\"');\\n  var variantId;\\n  if (availableIDs.indexOf(variantInCookie) > -1) {\\n    variantId = variantInCookie;\\n  }\\n  if (!variantId) {\\n    var n = 0;\\n    var random = Math.random();\\n    for (var i = 0; i < variants.length; i++) {\\n      var variant = variants[i];\\n      var testRatio = variant.testRatio;\\n      n += testRatio;\\n      if (random < n) {\\n        setCookie(cookieName, variant.id);\\n        variantId = variant.id;\\n        break;\\n      }\\n    }\\n    if (!variantId) {\\n      variantId = \\\"\").concat(t,'\";\\n      setCookie(cookieName, \"').concat(t,'\");\\n    }\\n  }\\n  if (variantId && variantId !== \"').concat(t,\"\\\") {\\n    var winningTemplate = document.querySelector('template[data-template-variant-id=\\\"' + variantId + '\\\"]');\\n    if (winningTemplate) {\\n      var parentNode = winningTemplate.parentNode;\\n      var newParent = parentNode.cloneNode(false);\\n      newParent.appendChild(winningTemplate.content.firstChild);\\n      parentNode.parentNode.replaceChild(newParent, parentNode);\\n    }\\n  } else if (variants.length > 0) {\\n    removeVariants();\\n  }\\n})()\").replace(/\\s+/g,\" \")},VariantsProvider=function(e){var t=e.initialContent,n=e.children;if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.canTrack)return n([t]);if(!Boolean(Object.keys((null==t?void 0:t.variations)||{}).length))return n([t]);var i=Object.keys(t.variations).map((function(e){return __assign(__assign({id:e},t.variations[e]),{data:getData(t.variations[e])})})),r=__spreadArray(__spreadArray([],i,!0),[t],!1);if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer){var o=JSON.stringify(Object.keys(t.variations||{}).map((function(e){return{id:e,testRatio:t.variations[e].testRatio}})));return react__WEBPACK_IMPORTED_MODULE_2__.createElement(react__WEBPACK_IMPORTED_MODULE_2__.Fragment,null,n(r,(function(){return react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"script\",{id:\"variants-script-\".concat(t.id),dangerouslySetInnerHTML:{__html:variantsScript(o,t.id)}})})))}var a=\"builder.tests.\".concat(t.id),s=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.getCookie(a);if(!s&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser)for(var l=0,u=Math.random(),d=0;d<i.length;d++){var c=i[d];if(u<(l+=c.testRatio)){_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.setCookie(a,c.id),s=c.id;break}}return s||(s=t.id,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.setCookie(a,s)),n([r.find((function(e){return e.id===s}))])},BuilderContent=function(_super){function BuilderContent(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.ref=null,_this.state={loading:!_this.props.content,data:getContentWithInfo(_this.props.content),updates:1},_this.onWindowMessage=function(event){var _a,_b,message=event.data;if(message)switch(message.type){case\"builder.patchUpdates\":if(null===(_a=_this.props.options)||void 0===_a?void 0:_a.noEditorUpdates)return;var data=message.data;if(!data||!data.data)break;var patches=data.data[null===(_b=_this.state.data)||void 0===_b?void 0:_b.id];if(!patches||!patches.length)return;location.href.includes(\"builder.debug=true\")&&eval(\"debugger\");for(var newData=_this.state.data,_i=0,patches_1=patches;_i<patches_1.length;_i++){var patch=patches_1[_i];newData=applyPatchWithMinimalMutationChain(newData,patch,!1)}_this.setState({updates:_this.state.updates+1,data:newData}),_this.props.contentLoaded&&_this.props.contentLoaded(newData.data,newData)}},_this.subscriptions=new _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Subscription,_this.firstLoad=!0,_this.clicked=!1,_this.trackedImpression=!1,_this.intersectionObserver=null,_this.onClick=function(e){var t=e.nativeEvent,n=_this.data;n&&(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.autoTrack&&_this.builder.trackInteraction(n.id,_this.renderedVariantId,_this.clicked,t,{content:n}),_this.clicked||(_this.clicked=!0))},_this}return __extends(BuilderContent,_super),Object.defineProperty(BuilderContent.prototype,\"builder\",{get:function(){return this.props.builder||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder},enumerable:!1,configurable:!0}),Object.defineProperty(BuilderContent.prototype,\"name\",{get:function(){var e=this.props;return\"model\"in e?e.model:e.modelName},enumerable:!1,configurable:!0}),Object.defineProperty(BuilderContent.prototype,\"renderedVariantId\",{get:function(){var e,t,n=this.props.isStatic?this.builder.getCookie(\"builder.tests.\".concat(null===(e=this.data)||void 0===e?void 0:e.id)):null===(t=this.data)||void 0===t?void 0:t.variationId;if(null!==n)return n},enumerable:!1,configurable:!0}),Object.defineProperty(BuilderContent.prototype,\"options\",{get:function(){var e,t,n=__assign({},this.props.options||{});return n.key||!(null===(e=this.props.content)||void 0===e?void 0:e.id)||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing||(n.key=this.props.content.id),!this.props.content||(null===(t=n.initialContent)||void 0===t?void 0:t.length)||!this.props.inline&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing||(n.initialContent=[this.props.content]),n},enumerable:!1,configurable:!0}),Object.defineProperty(BuilderContent.prototype,\"data\",{get:function(){var e=(this.props.inline||!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser||this.firstLoad)&&this.options.initialContent&&this.options.initialContent[0]||this.state.data;return getContentWithInfo(e)},enumerable:!1,configurable:!0}),BuilderContent.prototype.componentDidMount=function(){var e,t;if(!this.props.inline||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing)this.subscribeToContent();else if(this.props.inline&&(null===(t=null===(e=this.options)||void 0===e?void 0:e.initialContent)||void 0===t?void 0:t.length)){var n=this.options.initialContent[0];(null==n?void 0:n.id)&&this.builder.trackImpression(n.id,this.renderedVariantId,void 0,{content:n})}_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&addEventListener(\"message\",this.onWindowMessage)},BuilderContent.prototype.subscribeToContent=function(){var e=this;\"_inline\"!==this.name&&this.subscriptions.add(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.queueGetContent(this.name,this.options).subscribe((function(t){var n=t&&t[0];e.setState({data:n,loading:!1});var i=(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.editingModel||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.previewingModel)===e.name;if(!e.props.inline&&e.props.content&&e.firstLoad&&i&&(e.firstLoad=!1,e.subscriptions.unsubscribe(),e.subscribeToContent()),n&&e.firstLoad&&(e.firstLoad=!1,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.autoTrack&&!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing)){var r=!1;if(\"function\"==typeof IntersectionObserver&&e.ref)try{(e.intersectionObserver=new IntersectionObserver((function(t,i){t.forEach((function(t){t.intersectionRatio>0&&!e.trackedImpression&&(e.builder.trackImpression(n.id,e.renderedVariantId,void 0,{content:e.data}),e.data,e.trackedImpression=!0,e.ref&&i.unobserve(e.ref))}))}))).observe(e.ref),r=!0}catch(e){console.warn(\"Could not bind intersection observer\")}r||(e.trackedImpression=!0,e.builder.trackImpression(n.id,e.renderedVariantId,void 0,{content:n}))}e.props.contentLoaded&&e.props.contentLoaded(n&&n.data,n)}),(function(t){e.props.contentError&&(e.props.contentError(t),e.setState({loading:!1}))})))},BuilderContent.prototype.componentWillUnmount=function(){_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&removeEventListener(\"message\",this.onWindowMessage),this.subscriptions.unsubscribe(),this.intersectionObserver&&this.ref&&this.intersectionObserver.unobserve(this.ref)},BuilderContent.prototype.render=function(){var e=this;if(this.props.dataOnly)return null;var t=this.state.loading,n=this.data,i=this.props.dataOnly?NoWrap:\"div\";return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(VariantsProvider,{initialContent:n},(function(r,o){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,r.map((function(a,s){var l=s===r.length-1?(react__WEBPACK_IMPORTED_MODULE_2___default().Fragment):\"template\";return react__WEBPACK_IMPORTED_MODULE_2___default().createElement((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),{key:String((null==a?void 0:a.id)+s)},\"template\"!==l&&(null==o?void 0:o()),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(l,__assign({key:String((null==a?void 0:a.id)+s)},\"template\"===l&&{\"data-template-variant-id\":null==a?void 0:a.id}),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(i,__assign({},0===s&&!e.props.dataOnly&&{ref:function(t){return e.ref=t}},{className:\"builder-content\",onClick:e.onClick,\"builder-content-id\":null==a?void 0:a.id,\"builder-model\":e.name}),e.props.children(null==a?void 0:a.data,!e.props.inline&&t,n))))})))}))},BuilderContent}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),getContentWithInfo=function(e){var t;if(e){var n=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.getCookie(\"builder.tests.\".concat(e.id)),i=n===e.id?e:null===(t=e.variations)||void 0===t?void 0:t[n],r=(null==i?void 0:i.name)||((null==i?void 0:i.id)===e.id?\"Default variation\":\"\");return __assign(__assign({},e),{variationId:n,testVariationId:n,testVariationName:r})}return null};function unwrapExports(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}function createCommonjsModule(e,t){return e(t={exports:{}},t.exports),t.exports}var onChange_1=createCommonjsModule((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Symbol(\"target\"),i=Symbol(\"unsubscribe\"),r=function(e,t){return t&&t.toString&&(e&&(e+=\".\"),e+=t.toString()),e},o=function(e){return Array.isArray(e)?e.slice():Object.assign({},e)},a=function(e,t,a){if(\"undefined\"==typeof Proxy)return e;void 0===a&&(a={});var s,l,u=Symbol(\"ProxyTarget\"),d=!1,c=!1,p=!1,f=a.equals||Object.is,m=new WeakMap,h=new WeakMap,g=new WeakMap,v=function(e,n,i,a){if(!p)if(d){if(d&&l&&void 0!==i&&void 0!==a&&\"length\"!==n){var u=l;e!==s&&function(e,t){for(var n;e;)-1===(n=e.indexOf(\".\"))&&(n=e.length),t(e.slice(0,n)),e=e.slice(n+1)}(e=e.replace(s,\"\").slice(1),(function(e){u[e]=o(u[e]),u=u[e]})),u[n]=i}c=!0}else t(r(e,n),a,i)},b=function(e,t){var n=m?m.get(e):void 0;n&&n.delete(t)},y=function(e,t){if(p)return e;h.set(e,t);var n=g.get(e);return void 0===n&&(n=new Proxy(e,x),g.set(e,n)),n},_=function(e){return p||!0===a.ignoreSymbols&&\"symbol\"==typeof e},x={get:function(e,t,o){if(t===u||t===n)return e;if(t===i&&\"\"===h.get(e))return function(e){return p=!0,m=null,h=null,g=null,e}(e);var s=Reflect.get(e,t,o);if(function(e){return null===e||\"object\"!=typeof e&&\"function\"!=typeof e}(s)||function(e){return e instanceof RegExp||e instanceof Number}(s)||\"constructor\"===t||!0===a.isShallow)return s;var l=function(e,t){var n=m?m.get(e):void 0;if(n)return n;n=new Map,m.set(e,n);var i=n.get(t);return i||(i=Reflect.getOwnPropertyDescriptor(e,t),n.set(t,i)),i}(e,t);if(l&&!l.configurable){if(l.set&&!l.get)return;if(!1===l.writable)return s}return y(s,r(h.get(e),t))},set:function(e,t,n,i){n&&void 0!==n[u]&&(n=n[u]);var r=_(t),o=r?null:Reflect.get(e,t,i),a=Reflect.set(e[u]||e,t,n);return r||f(o,n)||v(h.get(e),t,o,n),a},defineProperty:function(e,t,n){var i=Reflect.defineProperty(e,t,n);return _(t)||(b(e,t),v(h.get(e),t,void 0,n.value)),i},deleteProperty:function(e,t){if(!Reflect.has(e,t))return!0;var n=_(t),i=n?null:Reflect.get(e,t),r=Reflect.deleteProperty(e,t);return n||(b(e,t),v(h.get(e),t,i)),r},apply:function(e,t,n){var i=t instanceof Date;if(i&&(t=t[u]),!d){d=!0,i&&(l=t.valueOf()),(Array.isArray(t)||\"[object Object]\"===toString.call(t))&&(l=o(t[u])),s=(s=h.get(e)).slice(0,Math.max(s.lastIndexOf(\".\"),0));var r=Reflect.apply(e,t,n);return d=!1,(c||i&&!f(l,t.valueOf()))&&(v(s,\"\",l,t[u]||t),l=null,c=!1),r}return Reflect.apply(e,t,n)}},S=y(e,\"\");return t=t.bind(S),S};a.target=function(e){return e[n]||e},a.unsubscribe=function(e){return e[i]||e},e.exports=a,t.default=a})),onChange=unwrapExports(onChange_1),nextTick=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick;function debounceNextTick(e,t,n){return void 0===t&&\"function\"==typeof e?debounceNextTickImpl(e):{configurable:!0,enumerable:n.enumerable,get:function(){return Object.defineProperty(this,t,{configurable:!0,enumerable:n.enumerable,value:debounceNextTickImpl(n.value)}),this[t]}}}function debounceNextTickImpl(e){var t=null,n=null;return function(){var e=t;if(t=[].slice.call(arguments),n=this,null!==e)return;nextTick(i)};function i(){e.apply(n,t),t=null,n=null}}function throttle(e,t,n){var i,r,o;void 0===n&&(n={});var a=null,s=0,l=function(){s=!1===n.leading?0:Date.now(),a=null,o=e.apply(i,r),a||(i=r=null)};return function(){var u=Date.now();s||!1!==n.leading||(s=u);var d=t-(u-s);return i=this,r=arguments,d<=0||d>t?(a&&(clearTimeout(a),a=null),s=u,o=e.apply(i,r),a||(i=r=null)):a||!1===n.trailing||(a=setTimeout(l,d)),o}}var BuilderMetaContext=react__WEBPACK_IMPORTED_MODULE_2___default().createContext({emailMode:!1,ampMode:!1,isServer:!1}),tryEval=function(e,t,n){void 0===t&&(t={});var i=e;if(\"string\"==typeof i&&i.trim()){var r=!(i.includes(\";\")||i.includes(\" return \")),o=function(){};try{_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(o=new Function(\"state\",\"var rootState = state;\\n        if (typeof Proxy !== 'undefined') {\\n          rootState = new Proxy(rootState, {\\n            set: function () {\\n              return false;\\n            },\\n            get: function (target, key) {\\n              if (key === 'state') {\\n                return state;\\n              }\\n              return target[key]\\n            }\\n          });\\n        }\\n        with (rootState) {\\n          \".concat(r?\"return (\".concat(e,\");\"):e,\";\\n        }\")))}catch(e){_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&console.warn(\"Could not compile javascript\",e)}try{return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser?o(t||{}):new(0,safeDynamicRequire(\"vm2\").VM)({sandbox:__assign(__assign({},t),{state:t})}).run(i.replace(/(^|;)return /,\"$1\"))}catch(t){n&&n.push(t),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser?console.warn(\"Builder custom code error:\",t.message,\"in\",e,t.stack):isDebug()&&console.debug(\"Builder custom code error:\",t.message,\"in\",e,t.stack)}}};function toError(e){return e instanceof Error?e:new Error(String(e))}function getBuilderPixel(e){return{id:\"builder-pixel-\"+Math.random().toString(36).split(\".\")[1],\"@type\":\"@builder.io/sdk:Element\",tagName:\"img\",properties:{role:\"presentation\",\"aria-hidden\":\"true\",src:\"https://cdn.builder.io/api/v1/pixel?apiKey=\".concat(e)},responsiveStyles:{large:{height:\"0\",width:\"0\",display:\"inline-block\",opacity:\"0\",overflow:\"hidden\",pointerEvents:\"none\"}}}}function pick(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var i={};return t.forEach((function(t){i[t]=e[t]})),i}function omit(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var i=__assign({},e);return t.forEach((function(e){delete i[e]})),i}var wrapComponent=function(e){return function(t){var n,i=t.builderTag||\"div\",r=[\"children\"].concat((null===(n=e.inputs)||void 0===n?void 0:n.map((function(e){return e.name})))||[]),o=omit.apply(void 0,__spreadArray(__spreadArray([t],r,!1),[\"attributes\"],!1)),a=t;return e.noWrap?react__WEBPACK_IMPORTED_MODULE_2___default().createElement(e.class,__assign({attributes:o},a)):react__WEBPACK_IMPORTED_MODULE_2___default().createElement(i,__assign({},o),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(e.class,__assign({},a)))}},size$1=function(e){return Object.keys(e).length};function debounce(e,t,n){var i;return void 0===n&&(n=!1),function(){var r=this,o=arguments;clearTimeout(i),i=setTimeout((function(){i=null,n||e.apply(r,o)}),t),n&&!i&&e.apply(r,o)}}var fontsLoaded=new Set,fetch$1;globalThis.fetch&&(fetch$1=globalThis.fetch),null!=fetch$1||(fetch$1=__webpack_require__(/*! node-fetch */ \"./node_modules/node-fetch/browser.js\"));var sizeMap={desktop:\"large\",tablet:\"medium\",mobile:\"small\"},fetchCache={};function searchToObject$1(e){var t=(e.search||\"\").substring(1).split(\"&\"),n={};for(var i in t)if(t[i]&&\"string\"==typeof t[i]){var r=t[i].split(\"=\");n[decodeURIComponent(r[0])]=decodeURIComponent(r[1])}return n}var BuilderComponent=function(e){function t(t){var n,i,r=this;(r=e.call(this,t)||this).subscriptions=new _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Subscription,r.onStateChange=new _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(null),r.asServer=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer,r.contentRef=null,r.styleRef=null,r.rootState=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer?{}:onChange({},(function(){return r.updateState()})),r.lastJsCode=\"\",r.lastHttpRequests={},r.httpSubscriptionPerKey={},r.firstLoad=!0,r.ref=null,r.messageListener=function(e){var t,n=e.data;switch(n.type){case\"builder.configureSdk\":var i=n.data;if(!i.contentId||i.contentId!==(null===(t=r.useContent)||void 0===t?void 0:t.id))return;r.sizes=getSizesForBreakpoints(i.breakpoints||{}),r.setState({state:Object.assign(r.rootState,{deviceSize:r.deviceSizeState,device:r.device}),updates:(r.state&&r.state.updates||0)+1,breakpoints:i.breakpoints});break;case\"builder.updateSpacer\":var o=n.data;r.rootState._spacer,r.updateState((function(e){e._spacer=o}));break;case\"builder.resetState\":var a=n.data,s=a.state;if(a.model===r.name){for(var l in r.rootState)\"function\"!=typeof r.rootState[l]&&delete r.rootState[l];Object.assign(r.rootState,s),r.setState(__assign(__assign({},r.state),{state:r.rootState,updates:(r.state&&r.state.updates||0)+1}))}break;case\"builder.resetSymbolState\":var u=n.data.state,d=(s=u.state,u.model,u.id);if(r.props.builderBlock&&r.props.builderBlock===d){for(var l in r.rootState)delete r.rootState[l];Object.assign(r.rootState,s),r.setState(__assign(__assign({},r.state),{state:r.rootState,updates:(r.state&&r.state.updates||0)+1}))}}},r.resizeFn=function(){var e=r.deviceSizeState;e!==r.state.state.deviceSize&&r.setState(__assign(__assign({},r.state),{updates:(r.state&&r.state.updates||0)+1,state:Object.assign(r.rootState,__assign(__assign({},r.state.state),{deviceSize:e}))}))},r.resizeListener=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing?throttle(r.resizeFn,200):debounce(r.resizeFn,400),r.mounted=!1,r.updateState=function(e){var t=r.rootState;e&&e(t),r.mounted?r.setState({update:r.updateState,state:t,updates:(r.state&&r.state.updates||0)+1}):r.state=__assign(__assign({},r.state),{update:r.updateState,state:t,updates:(r.state&&r.state.updates||0)+1}),r.notifyStateChange()},r.onContentLoaded=function(e,t){if(\"page\"===r.name&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&e){var n=e.title,i=e.pageTitle,o=e.description,a=e.pageDescription;if((n||i)&&(document.title=n||i),o||a){var s=document.querySelector('meta[name=\"description\"]');s||((s=document.createElement(\"meta\")).setAttribute(\"name\",\"description\"),document.head.appendChild(s)),s.setAttribute(\"content\",o||a)}}if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&r.notifyStateChange(),r.props.contentLoaded&&r.props.contentLoaded(e,t),e&&e.inputs&&Array.isArray(e.inputs)&&e.inputs.length&&(e.state||(e.state={}),e.inputs.forEach((function(t){t&&t.name&&void 0!==t.defaultValue&&void 0===e.state[t.name]&&(e.state[t.name]=t.defaultValue)}))),e&&e.state){var l=__assign(__assign({},r.state),{updates:(r.state&&r.state.updates||0)+1,state:Object.assign(r.rootState,__assign(__assign(__assign(__assign({},r.state.state),{location:r.locationState,deviceSize:r.deviceSizeState,device:r.device}),e.state),r.externalState))});r.mounted?r.setState(l):r.state=l}if(e&&e.jsCode&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&!r.options.codegen){var u=!1;if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&(r.lastJsCode===e.jsCode?u=!0:r.lastJsCode=e.jsCode),!u){var d=r.state.state;try{new Function(\"data\",\"ref\",\"state\",\"update\",\"element\",\"Builder\",\"builder\",\"context\",e.jsCode)(e,r,d,r.state.update,r.ref,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder,r.state.context)}catch(t){var c=toError(t);_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser?console.warn(\"Builder custom code error:\",c.message,\"in\",e.jsCode,c.stack):isDebug()&&console.debug(\"Builder custom code error:\",c.message,\"in\",e.jsCode,c.stack)}}}if(e&&e.httpRequests&&!r.props.noAsync&&!(u=!1)){var p=function(t){var n=e.httpRequests[t];if(n&&(!r.data[t]||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing))if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser){var i=r.evalExpression(n);if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&r.lastHttpRequests[t]===i)return\"continue\";r.lastHttpRequests[t]=i;var o=n.match(/builder\\.io\\/api\\/v2\\/([^\\/\\?]+)/i);o&&o[1],r.handleRequest(t,i);var a=r.httpSubscriptionPerKey[t];a&&a.unsubscribe();var s=r.httpSubscriptionPerKey[t]=r.onStateChange.subscribe((function(){var e=r.evalExpression(n);e!==i&&(r.handleRequest(t,e),r.lastHttpRequests[t]=e)}));r.subscriptions.add(s)}else r.handleRequest(t,r.evalExpression(n))};for(var f in e.httpRequests)p(f)}};var o=r.inlinedContent;o&&o.content&&(o=o.content),r.sizes=getSizesForBreakpoints((null===(n=null==o?void 0:o.meta)||void 0===n?void 0:n.breakpoints)||{});var a=null===(i=r.inlinedContent)||void 0===i?void 0:i.data;if(a&&Array.isArray(a.inputs)&&a.inputs.length>0&&(a.state||(a.state={}),a.inputs.forEach((function(e){e&&e.name&&void 0!==e.defaultValue&&void 0===a.state[e.name]&&(a.state[e.name]=e.defaultValue)}))),r.state={context:__assign(__assign({},t.context),{apiKey:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.apiKey||r.props.apiKey}),state:Object.assign(r.rootState,__assign(__assign(__assign(__assign({},r.inlinedContent&&r.inlinedContent.data&&r.inlinedContent.data.state),{isBrowser:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser,isServer:!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser,_hydrate:t.hydrate,location:r.locationState,deviceSize:r.deviceSizeState,device:r.device}),r.getHtmlData()),t.data)),updates:0,key:0,update:r.updateState},_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser){var s=r.props.apiKey;if(s&&s!==r.builder.apiKey&&(r.builder.apiKey=s),r.inlinedContent){var l=r.inlinedContent.content||r.inlinedContent;r.onContentLoaded(null==l?void 0:l.data,getContentWithInfo(l))}}return r}return __extends(t,e),Object.defineProperty(t.prototype,\"options\",{get:function(){return __assign(__assign({},t.defaults),this.props)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"name\",{get:function(){return this.props.model||this.props.modelName||this.props.name},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"element\",{get:function(){return this.ref},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"inlinedContent\",{get:function(){if(!this.isPreviewing||this.props.inlineContent)return this.props.content},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"builder\",{get:function(){return this.props.builder||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder},enumerable:!1,configurable:!0}),t.prototype.getHtmlData=function(){var e=this.inlinedContent&&this.inlinedContent.id||this.props.entry,t=e&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&document.querySelector('script[data-builder-json=\"'.concat(e,'\"],script[data-builder-state=\"').concat(e,'\"]'));if(t)try{return JSON.parse(t.innerText)}catch(e){console.warn(\"Could not parse Builder.io HTML data transfer\",e,t.innerText)}return{}},Object.defineProperty(t.prototype,\"device\",{get:function(){return this.builder.getUserAttributes().device||\"desktop\"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"locationState\",{get:function(){return __assign(__assign({},pick(this.location,\"pathname\",\"hostname\",\"search\",\"host\")),{path:this.location.pathname&&this.location.pathname.split(\"/\").slice(1)||\"\",query:searchToObject$1(this.location)})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"deviceSizeState\",{get:function(){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser?this.sizes.getSizeForWidth(window.innerWidth):sizeMap[this.device]||\"large\"},enumerable:!1,configurable:!0}),t.renderInto=function(e,n,i,r){if(void 0===n&&(n={}),void 0===i&&(i=!0),void 0===r&&(r=!1),console.debug(\"BuilderPage.renderInto\",e,n,i,this),e){var o=null;if(\"string\"==typeof e?o=document.querySelector(e):e instanceof Element&&(o=e),o){var a=o.classList.contains(\"builder-hydrated\");if(!a||r){o.classList.add(\"builder-hydrated\");var s=i&&o.innerHTML.includes(\"builder-block\");if(!o.classList.contains(\"builder-component\")){var l=o.querySelector(\".builder-api-styles\")||(o.previousElementSibling&&o.previousElementSibling.matches(\".builder-api-styles\")?o.previousElementSibling:null),u=\"\";if(l)l.innerHTML.replace(/\\/\\*start:([^\\*]+?)\\*\\/([\\s\\S]*?)\\/\\*end:([^\\*]+?)\\*\\//g,(function(e,t,n){var i=null;try{i=document.querySelector('[data-emotion-css=\"'.concat(t,'\"]'))}catch(e){console.warn(e)}return i?i.innerHTML=n:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||(u+=e),e})),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick((function(){l.innerHTML=u}));var d=o.querySelector(\".builder-component\");d?o=d:s=!1}location.search.includes(\"builder.debug=true\")&&console.debug(\"hydrate\",s,o);var c=o;if(!a){var p=document.createElement(\"div\");o.insertAdjacentElement(\"beforebegin\",p),p.appendChild(o),c=p}if((_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&location.search.includes(\"builder.preview=\"))&&(s=!1),s&&o){var f=react_dom__WEBPACK_IMPORTED_MODULE_3__.render(react__WEBPACK_IMPORTED_MODULE_2___default().createElement(t,__assign({},n)),c,c.builderRootRef);return c.builderRootRef=f,f}var m=react_dom__WEBPACK_IMPORTED_MODULE_3__.render(react__WEBPACK_IMPORTED_MODULE_2___default().createElement(t,__assign({},n)),c,c.builderRootRef);return c.builderRootRef=m,m}console.debug(\"Tried to hydrate multiple times\")}}},t.prototype.componentDidMount=function(){var e,t=this;this.mounted=!0,this.asServer&&(this.asServer=!1,this.updateState((function(e){e.isBrowser=!0,e.isServer=!1}))),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isIframe&&(null===(e=window.parent)||void 0===e||e.postMessage({type:\"builder.sdkInjected\",data:{modelName:this.name}},\"*\")),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(window.addEventListener(\"resize\",this.resizeListener),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&window.addEventListener(\"message\",this.messageListener),(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing)&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick((function(){t.firstLoad=!1,t.reload()})),setTimeout((function(){window.dispatchEvent(new CustomEvent(\"builder:component:load\",{detail:{ref:t}}))})))},Object.defineProperty(t.prototype,\"isPreviewing\",{get:function(){return(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing&&!this.firstLoad)&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.previewingModel===this.name},enumerable:!1,configurable:!0}),t.prototype.notifyStateChange=function(){if(!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer&&this&&this.state){var e=this.state.state;this.props.onStateChange&&this.props.onStateChange(e),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&window.dispatchEvent(new CustomEvent(\"builder:component:stateChange\",{detail:{state:e,ref:this}})),this.onStateChange.next(e)}},t.prototype.processStateFromApi=function(e){return e},Object.defineProperty(t.prototype,\"location\",{get:function(){return this.props.location||(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser?location:{})},enumerable:!1,configurable:!0}),t.prototype.getCssFromFont=function(e,t){var n=e.family+(e.kind&&!e.kind.includes(\"#\")?\", \"+e.kind:\"\"),i=n.split(\",\")[0],r=e.fileUrl?e.fileUrl:e.files&&e.files.regular,o=\"\";if(r&&n&&i&&(o+='\\n@font-face {\\n  font-family: \"'.concat(n,'\";\\n  src: local(\"').concat(i,\"\\\"), url('\").concat(r,\"') format('woff2');\\n  font-display: fallback;\\n  font-weight: 400;\\n}\\n        \").trim()),e.files)for(var a in e.files){if(String(Number(a))===a){var s=e.files[a];s&&s!==r&&(o+='\\n@font-face {\\n  font-family: \"'.concat(n,\"\\\";\\n  src: url('\").concat(s,\"') format('woff2');\\n  font-display: fallback;\\n  font-weight: \").concat(a,\";\\n}\\n          \").trim())}}return o},t.prototype.componentWillUnmount=function(){this.unsubscribe(),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(window.removeEventListener(\"resize\",this.resizeListener),window.removeEventListener(\"message\",this.messageListener))},t.prototype.getFontCss=function(e){var t=this;return this.builder.allowCustomFonts&&(null==e?void 0:e.customFonts)&&e.customFonts.length&&e.customFonts.map((function(n){return t.getCssFromFont(n,e)})).join(\" \")||\"\"},t.prototype.ensureFontsLoaded=function(e){if(this.builder.allowCustomFonts&&(null==e?void 0:e.customFonts)&&Array.isArray(e.customFonts))for(var t=0,n=e.customFonts;t<n.length;t++){var i=n[t],r=i.fileUrl?i.fileUrl:i.files&&i.files.regular;if(!fontsLoaded.has(r)){var o=this.getCssFromFont(i,e);if(fontsLoaded.add(r),!o)continue;var a=document.createElement(\"style\");a.className=\"builder-custom-font\",a.setAttribute(\"data-builder-custom-font\",r),a.innerHTML=o,document.head.appendChild(a)}}},t.prototype.getCss=function(e){var t,n=null===(t=this.useContent)||void 0===t?void 0:t.id,i=(null==e?void 0:e.cssCode)||\"\";return n&&(i=i.replace(/&/g,\".builder-component-\".concat(n))),i+this.getFontCss(e)},Object.defineProperty(t.prototype,\"data\",{get:function(){var e,t=__assign(__assign(__assign({},this.inlinedContent&&(null===(e=this.inlinedContent.data)||void 0===e?void 0:e.state)),this.externalState),this.state.state);return Object.assign(this.rootState,t),t},enumerable:!1,configurable:!0}),t.prototype.componentDidUpdate=function(e){var t=this;this.props.data&&e.data!==this.props.data&&this.state.update((function(e){Object.assign(e,t.externalState)})),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&this.inlinedContent&&e.content!==this.inlinedContent&&this.onContentLoaded(this.inlinedContent.data,this.inlinedContent)},t.prototype.checkStyles=function(e){if(this.styleRef){var t=this.getCss(e);this.styleRef.innerHTML!==t&&(this.styleRef.innerHTML=t)}},t.prototype.reload=function(){this.setState({key:this.state.key+1})},Object.defineProperty(t.prototype,\"content\",{get:function(){var e=this.inlinedContent;return e&&e.content&&(e=__assign(__assign({},e),{data:e.content})),e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"externalState\",{get:function(){return __assign(__assign({},this.props.data),this.props.locale?{locale:this.props.locale}:{})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"useContent\",{get:function(){return this.content||this.state.context.builderContent},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e,t=this,n=this.content,i=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&this.externalState&&size$1(this.externalState)&&hash_sum__WEBPACK_IMPORTED_MODULE_4___default()(this.externalState),r=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing?this.name:this.props.entry;r&&!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&i&&i.length<300&&(r+=\":\"+i);var o=this.props.dataOnly?(react__WEBPACK_IMPORTED_MODULE_2___default().Fragment):\"div\",a=null===(e=this.useContent)||void 0===e?void 0:e.id;return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(o,{onClick:function(e){!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||t.props.isChild||t.props.stopClickPropagationWhenEditing||e.stopPropagation()},className:\"builder-component \".concat(a?\"builder-component-\".concat(a):\"\"),\"data-name\":this.name,\"data-source\":\"Rendered by Builder.io\",key:this.state.key,ref:function(e){return t.ref=e}},react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderMetaContext.Consumer,null,(function(e){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderMetaContext.Provider,{value:\"boolean\"==typeof t.props.ampMode?__assign(__assign({},e),{ampMode:t.props.ampMode}):e},react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderAsyncRequestsContext.Consumer,null,(function(e){var i;return t._asyncRequests=e&&e.requests,t._errors=e&&e.errors,t._logs=e&&e.logs,react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderContent,{isStatic:t.props.isStatic||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isStatic,key:(null===(i=t.inlinedContent)||void 0===i?void 0:i.id)||(\"content\"in t.props&&!t.isPreviewing?\"null-content-prop\":\"no-content-prop\"),builder:t.builder,ref:function(e){return t.contentRef=e},contentLoaded:function(e,n){return t.onContentLoaded(e,n)},options:__assign(__assign(__assign(__assign(__assign(__assign({key:r,entry:t.props.entry},n&&{initialContent:[n]}),!n&&\"content\"in t.props&&!t.isPreviewing&&{initialContent:[]}),t.props.url&&{url:t.props.url}),t.props.options),t.props.locale?{locale:t.props.locale}:{}),t.options.codegen&&{format:\"react\"}),inline:t.props.inlineContent||!t.isPreviewing&&\"content\"in t.props,contentError:t.props.contentError,modelName:t.name||\"page\"},(function(e,n,i){var r;if(t.props.dataOnly)return null;i&&i.id&&(t.state.breakpoints&&(i.meta=i.meta||{},i.meta.breakpoints=t.state.breakpoints),t.state.context.builderContent=i),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick((function(){t.checkStyles(e)}));var o=t.options.codegen;if(o&&!t.Component&&(null==e?void 0:e.blocksJs)){var a=Array.from(new Set(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.components.map((function(e){return e.name})))),s=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.components.slice().reverse(),l=a.map((function(e){return s.find((function(t){return t.class&&t.name===e}))})),u=a.map((function(e){return(e||\"\").replace(/[^\\w]+/gi,\"\")})),d=l.map((function(e){return wrapComponent(e)}));t.Component=(new(Function.bind.apply(Function,__spreadArray(__spreadArray([void 0,\"jsx\",\"_css\",\"Builder\",\"builder\",\"React\",\"useBuilderState\"],u,!1),[e.blocksJs],!1)))).apply(void 0,__spreadArray([_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.css,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder,(react__WEBPACK_IMPORTED_MODULE_2___default()),function(e){var t=react__WEBPACK_IMPORTED_MODULE_2___default().useState(0)[1];return react__WEBPACK_IMPORTED_MODULE_2___default().useState((function(){return onChange(e,(function(){t((function(e){return e+1}))}))}))[0]}],d,!1))}var c=(null==e?void 0:e.blocks)||[],p=c.find((function(e){var t;return null===(t=e.id)||void 0===t?void 0:t.startsWith(\"builder-pixel\")}));return e&&!p&&c.length>0&&c.push(getBuilderPixel(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.apiKey)),e?react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\",__assign({\"data-builder-component\":t.name,\"data-builder-content-id\":i.id},t.isPreviewing?{\"data-builder-variation-id\":i.testVariationId||i.variationId||i.id}:{}),!o&&t.getCss(e)&&react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"style\",{ref:function(e){return t.styleRef=e},className:\"builder-custom-styles\",dangerouslySetInnerHTML:{__html:t.getCss(e)}}),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderStoreContext.Provider,{value:__assign(__assign({},t.state),{rootState:t.rootState,state:t.data,content:i,renderLink:t.props.renderLink})},o&&t.Component?react__WEBPACK_IMPORTED_MODULE_2___default().createElement(t.Component,{data:t.data,context:t.state.context}):react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlocks,{key:String(!!(null===(r=null==e?void 0:e.blocks)||void 0===r?void 0:r.length)),emailMode:t.props.emailMode,fieldName:\"blocks\",blocks:c}))):n?react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\",{\"data-builder-component\":t.name,className:\"builder-loading\"},t.props.children):react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\",{\"data-builder-component\":t.name,className:\"builder-no-content\"})}))})))})))},t.prototype.evalExpression=function(e){var t=this,n=this.data;return String(e).replace(/{{([^}]+)}}/g,(function(e,i){return tryEval(i,n,t._errors)}))},t.prototype.handleRequest=function(e,t){return __awaiter(this,void 0,void 0,(function(){var n,i,r,o,a=this;return __generator(this,(function(s){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isIframe&&fetchCache[t]?(this.updateState((function(n){n[e]=fetchCache[t]})),[2,fetchCache[t]]):(n=function(){return __awaiter(a,void 0,void 0,(function(){var n,i,r,o;return __generator(this,(function(a){switch(a.label){case 0:n=Date.now(),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser||console.time(\"Fetch \"+t),a.label=1;case 1:return a.trys.push([1,4,5,6]),[4,fetch$1(t)];case 2:return[4,a.sent().json()];case 3:return i=a.sent(),[3,6];case 4:return r=a.sent(),o=toError(r),this._errors&&this._errors.push(o),this._logs&&this._logs.push(\"Fetch to \".concat(t,\" errored in \").concat(Date.now()-n,\"ms\")),[2];case 5:return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser||(console.timeEnd(\"Fetch \"+t),this._logs&&this._logs.push(\"Fetched \".concat(t,\" in \").concat(Date.now()-n,\"ms\"))),[7];case 6:return i&&(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isIframe&&(fetchCache[t]=i),this.updateState((function(t){t[e]=i}))),[2,i]}}))}))},(i=this._asyncRequests&&this._asyncRequests.find((function(e){return isRequestInfo(e)&&e.url===t})))?((r=i.promise).then((function(t){t&&a.updateState((function(n){n[e]=t}))})),[2,r]):(o=n(),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick((function(){a._asyncRequests&&a._asyncRequests.push(o)})),[2,o]))}))}))},t.prototype.unsubscribe=function(){this.subscriptions&&(this.subscriptions.unsubscribe(),this.subscriptions=new _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Subscription)},t.prototype.handleBuilderRequest=function(e,t){var n=this,i=tryEval(t,this.data,this._errors);this.subscriptions&&this.unsubscribe(),i&&this.subscriptions.add(this.builder.queueGetContent(i.model,i).subscribe((function(t){t&&n.updateState((function(n){n[e]=t}))})))},t.defaults={codegen:Boolean(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&location.href.includes(\"builder.codegen=true\"))},__decorate([debounceNextTick,__metadata(\"design:type\",Function),__metadata(\"design:paramtypes\",[]),__metadata(\"design:returntype\",void 0)],t.prototype,\"notifyStateChange\",null),t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component));function BuilderBlock(e){return e.type=\"react\",_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.Component(e)}function updateMetadata(e,t){var n=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.components.find((function(t){return\"string\"==typeof e?t.name===e:t.class===t}))||null,i=t(n);n&&i?_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(i.class||n.class,i):n&&!i||!n&&i&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(i.class,i)}function withBuilder(e,t){return BuilderBlock(t)(e),e}var withChildren=function(e){var t=react__WEBPACK_IMPORTED_MODULE_2___default().forwardRef((function(t,n){var i=t.children||t.builderBlock&&t.builderBlock.children&&t.builderBlock.children.map((function(e){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlock$1,{key:e.id,block:e})}));return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(e,__assign({},t,{ref:n}),i)}));return t.builderOptions={canHaveChildren:!0},t},noWrap=function(e){var t=react__WEBPACK_IMPORTED_MODULE_2___default().forwardRef((function(t,n){var i=__assign(__assign({},t),t.attributes);return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(e,__assign({},i,{ref:n}))}));return t.builderOptions={noWrap:!0},t},iconUrl=\"https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-text_fields-24px%20(1).svg?alt=media&token=12177b73-0ee3-42ca-98c6-0dd003de1929\",TextComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.textRef=null,t}return __extends(t,e),t.prototype.componentDidUpdate=function(e){this.allowTextEdit&&(!this.textRef||\"true\"===this.textRef.contentEditable&&this.textRef===document.activeElement||this.props.text!==e.text&&(this.textRef.innerHTML=this.props.text))},t.prototype.componentDidMount=function(){this.textRef&&(this.textRef.innerHTML=this.props.text)},t.prototype.evalExpression=function(e,t){return String(e).replace(/{{([^}]+)}}/g,(function(e,n){return tryEval(n,t)}))},Object.defineProperty(t.prototype,\"allowTextEdit\",{get:function(){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&location.search.includes(\"builder.allowTextEdit=true\")&&!(this.props.builderBlock&&this.props.builderBlock.bindings&&(this.props.builderBlock.bindings[\"component.options.text\"]||this.props.builderBlock.bindings[\"options.text\"]||this.props.builderBlock.bindings.text))},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e=this,t=this.allowTextEdit,n={outline:\"none\",\"& p:first-of-type, & .builder-paragraph:first-of-type\":{margin:0},\"& > p, & .builder-paragraph\":{color:\"inherit\",lineHeight:\"inherit\",letterSpacing:\"inherit\",fontWeight:\"inherit\",fontSize:\"inherit\",textAlign:\"inherit\",fontFamily:\"inherit\"}};return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Consumer,null,(function(i){var r;return(null===(r=i.content.meta)||void 0===r?void 0:r.rtlMode)&&(n.direction=\"rtl\"),(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\",__assign({ref:function(t){e.textRef=t},contentEditable:t||void 0,onInput:function(n){var i;t&&(null===(i=window.parent)||void 0===i||i.postMessage({type:\"builder.textEdited\",data:{id:e.props.builderBlock&&e.props.builderBlock.id,value:n.currentTarget.innerHTML}},\"*\"))},onKeyDown:function(n){t&&e.textRef&&27===n.which&&document.activeElement===e.textRef&&e.textRef.blur()},onFocus:function(n){var i;t&&(null===(i=window.parent)||void 0===i||i.postMessage({type:\"builder.textFocused\",data:{id:e.props.builderBlock&&e.props.builderBlock.id}},\"*\"))},onBlur:function(n){var i;t&&(null===(i=window.parent)||void 0===i||i.postMessage({type:\"builder.textBlurred\",data:{id:e.props.builderBlock&&e.props.builderBlock.id}},\"*\"))},css:n,className:\"builder-text\"},!t&&{dangerouslySetInnerHTML:{__html:e.evalExpression(e.props.text||e.props.content||\"\",i.state)}})))}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Text=withBuilder(TextComponent,{name:\"Text\",static:!0,image:iconUrl,inputs:[{name:\"text\",type:\"html\",required:!0,autoFocus:!0,bubble:!0,defaultValue:\"Enter some text...\"}],defaultStyles:{lineHeight:\"normal\",height:\"auto\",textAlign:\"center\"}});function Slot(e){var t=e.name,n=(0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(BuilderStoreContext),i=!n.context.symbolId;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",__assign({css:{pointerEvents:\"auto\"}},i&&{\"builder-slot\":t}),(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlocks,{child:!0,parentElementId:n.context.symbolId,dataPath:\"symbol.data.\".concat(t),blocks:n.state[t]||[]}))}_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(Slot,{name:\"Slot\",description:\"Allow child blocks to be inserted into this content when used as a Symbol\",docsLink:\"https://www.builder.io/c/docs/symbols-with-blocks\",image:\"https://cdn.builder.io/api/v1/image/assets%2FYJIGb4i01jvw0SRdL5Bt%2F3aad6de36eae43b59b52c85190fdef56\",inputs:[{name:\"name\",type:\"string\",required:!0,defaultValue:\"children\"}]});var FragmentComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){return this.props.builderBlock&&this.props.builderBlock.children&&this.props.builderBlock.children.map((function(e,t){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlock$1,{block:e,key:e.id,index:t})}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Fragment=withBuilder(FragmentComponent,{name:\"Core:Fragment\",canHaveChildren:!0,noWrap:!0,static:!0,hideFromInsertMenu:!0}),DEFAULT_ASPECT_RATIO$2=.7004048582995948,defaultBlocks=[{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\",flexShrink:\"0\",position:\"relative\",marginTop:\"30px\",textAlign:\"center\",lineHeight:\"normal\",height:\"auto\",minHeight:\"20px\",minWidth:\"20px\",overflow:\"hidden\"}},component:{name:\"Image\",options:{image:\"https://builder.io/api/v1/image/assets%2Fpwgjf0RoYWbdnJSbpBAjXNRMe9F2%2Ffb27a7c790324294af8be1c35fe30f4d\",backgroundPosition:\"center\",backgroundSize:\"cover\",aspectRatio:DEFAULT_ASPECT_RATIO$2}}},{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\",flexShrink:\"0\",position:\"relative\",marginTop:\"30px\",textAlign:\"center\",lineHeight:\"normal\",height:\"auto\"}},component:{name:\"Text\",options:{text:\"<p>Enter some text...</p>\"}}}],ColumnsComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),Object.defineProperty(t.prototype,\"columns\",{get:function(){return this.props.columns||[]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"gutterSize\",{get:function(){return\"number\"==typeof this.props.space?this.props.space||0:20},enumerable:!1,configurable:!0}),t.prototype.getWidth=function(e){return this.columns[e]&&this.columns[e].width||100/this.columns.length},t.prototype.getColumnWidth=function(e){var t=this.columns,n=this.gutterSize*(t.length-1)/t.length;return\"calc(\".concat(this.getWidth(e),\"% - \").concat(n,\"px)\")},t.prototype.render=function(){var e,t,n,i,r=this,o=this.columns,a=this.gutterSize,s=(null===(i=null===(n=null===(t=this.props.builderState)||void 0===t?void 0:t.context.builderContent)||void 0===n?void 0:n.meta)||void 0===i?void 0:i.breakpoints)||{},l=getSizesForBreakpoints(s);return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{className:\"builder-columns\",css:__assign({display:\"flex\"},\"never\"!==this.props.stackColumnsAt&&(e={},e[\"@media (max-width: \".concat(\"tablet\"!==this.props.stackColumnsAt?l.small.max:l.medium.max,\"px)\")]={flexDirection:this.props.reverseColumnsWhenStacked?\"column-reverse\":\"column\",alignItems:\"stretch\"},e))},o.map((function(e,t){var n,i,o=e.link?Link:\"div\";return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),{key:t},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(o,__assign({className:\"builder-column\"},e.link?{href:e.link}:null,{css:__assign((n={display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\",lineHeight:\"normal\"},n[\"& > .builder-blocks\"]={flexGrow:1},n.width=r.getColumnWidth(t),n.marginLeft=0===t?0:a,n),\"never\"!==r.props.stackColumnsAt&&(i={},i[\"@media (max-width: \".concat(\"tablet\"!==r.props.stackColumnsAt?l.small.max:l.medium.max,\"px)\")]={width:\"100%\",marginLeft:0},i))}),(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlocks,{key:t,child:!0,parentElementId:r.props.builderBlock&&r.props.builderBlock.id,blocks:e.blocks,dataPath:\"component.options.columns.\".concat(t,\".blocks\")})))}))))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Columns=withBuilder(ColumnsComponent,{name:\"Columns\",static:!0,inputs:[{name:\"columns\",type:\"array\",broadcast:!0,subFields:[{name:\"blocks\",type:\"array\",hideFromUI:!0,defaultValue:defaultBlocks},{name:\"width\",type:\"number\",hideFromUI:!0,helperText:\"Width %, e.g. set to 50 to fill half of the space\"},{name:\"link\",type:\"url\",helperText:\"Optionally set a url that clicking this column will link to\"}],defaultValue:[{blocks:defaultBlocks},{blocks:defaultBlocks}],onChange:function(e){function t(){n.forEach((function(e){e.delete(\"width\")}))}var n=e.get(\"columns\");Array.isArray(n)&&(!n.find((function(e){return e.get(\"width\")}))||(n.find((function(e){return!e.get(\"width\")}))||100!==n.reduce((function(e,t){return e+t.get(\"width\")}),0))&&t())}},{name:\"space\",type:\"number\",defaultValue:20,helperText:\"Size of gap between columns\",advanced:!0},{name:\"stackColumnsAt\",type:\"string\",defaultValue:\"tablet\",helperText:\"Convert horizontal columns to vertical at what device size\",enum:[\"tablet\",\"mobile\",\"never\"],advanced:!0},{name:\"reverseColumnsWhenStacked\",type:\"boolean\",defaultValue:!1,helperText:\"When stacking columns for mobile devices, reverse the ordering\",advanced:!0}]}),EmbedComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.elementRef=null,t.scriptsInserted=new Set,t.scriptsRun=new Set,t}return __extends(t,e),t.prototype.componentDidUpdate=function(e){this.props.content!==e.content&&this.findAndRunScripts()},t.prototype.componentDidMount=function(){this.findAndRunScripts()},t.prototype.findAndRunScripts=function(){if(this.elementRef&&\"undefined\"!=typeof window)for(var e=this.elementRef.getElementsByTagName(\"script\"),t=0;t<e.length;t++){var n=e[t];if(n.src){if(this.scriptsInserted.has(n.src))continue;this.scriptsInserted.add(n.src);var i=document.createElement(\"script\");i.async=!0,i.src=n.src,document.head.appendChild(i)}else{if(this.scriptsRun.has(n.innerText))continue;this.scriptsRun.add(n.innerText);try{new Function(n.innerText)()}catch(e){console.warn(\"Builder custom code component error:\",e)}}}},Object.defineProperty(t.prototype,\"content\",{get:function(){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer?(this.props.content||\"\").replace(/<script[\\s\\S]*?<\\/script>/g,\"\"):this.props.content},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e=this;return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\",{ref:function(t){return e.elementRef=t},className:\"builder-embed\",dangerouslySetInnerHTML:{__html:this.content}})},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Embed=withBuilder(EmbedComponent,{name:\"Embed\",static:!0,inputs:[{name:\"url\",type:\"url\",required:!0,defaultValue:\"\",helperText:\"e.g. enter a youtube url, google map, etc\",onChange:function(e){var t=e.get(\"url\");if(t){e.set(\"content\",\"Loading...\");return fetch(\"https://iframe.ly/api/iframely?url=\".concat(t,\"&api_key=\").concat(\"ae0e60e78201a3f2b0de4b\")).then((function(e){return e.json()})).then((function(n){e.get(\"url\")===t&&(n.html?e.set(\"content\",n.html):e.set(\"content\",\"Invalid url, please try another\"))})).catch((function(t){e.set(\"content\",\"There was an error embedding this URL, please try again or another URL\")}))}e.delete(\"content\")}},{name:\"content\",type:\"html\",defaultValue:'<div style=\"padding: 20px; text-align: center\">(Choose an embed URL)<div>',hideFromUI:!0}]}),globalReplaceNodes={}||null,isShopify$1=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&\"Shopify\"in window;if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&globalReplaceNodes){var customCodeQuerySelector_1=\".builder-custom-code\";try{var allCustomCodeElements_1=Array.from(document.querySelectorAll(customCodeQuerySelector_1)),builderTemplates=document.querySelectorAll(\"template[data-template-variant-id]\");builderTemplates.length&&Array.from(builderTemplates).forEach((function(e){var t=e.content.querySelectorAll(customCodeQuerySelector_1);t.length&&(allCustomCodeElements_1=allCustomCodeElements_1.concat(Array.from(t)))})),allCustomCodeElements_1.forEach((function(e){var t=e.parentElement,n=t&&t.getAttribute(\"builder-id\");n&&(globalReplaceNodes[n]=globalReplaceNodes[n]||[],globalReplaceNodes[n].push(isShopify$1?e:e.cloneNode(!0)))}))}catch(e){console.error(\"Builder replace nodes error:\",e)}}var CustomCodeComponent=function(e){function t(t){var n,i=this;if((i=e.call(this,t)||this).elementRef=null,i.originalRef=null,i.scriptsInserted=new Set,i.scriptsRun=new Set,i.firstLoad=!0,i.replaceNodes=!1,i.state={hydrated:!1},_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser){var r=null===(n=i.props.builderBlock)||void 0===n?void 0:n.id;if(i.replaceNodes=Boolean(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(t.replaceNodes||isShopify$1)&&r&&(null==globalReplaceNodes?void 0:globalReplaceNodes[r])),i.firstLoad&&i.props.builderBlock)if(r&&(null==globalReplaceNodes?void 0:globalReplaceNodes[r])){var o=globalReplaceNodes[r].shift()||null;i.originalRef=o,0===globalReplaceNodes[r].length&&delete globalReplaceNodes[r]}else if(i.replaceNodes){var a=document.querySelectorAll(\".\".concat(i.props.builderBlock.id,\" .builder-custom-code\"));if(1===a.length){var s=a[0];i.originalRef=s,i.originalRef.remove()}}}return i}return __extends(t,e),Object.defineProperty(t.prototype,\"noReactRender\",{get:function(){var e;return Boolean(isShopify$1&&(null===(e=this.props.code)||void 0===e?void 0:e.match(/{[{%]/g)))},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"isHydrating\",{get:function(){return!isShopify$1&&this.originalRef},enumerable:!1,configurable:!0}),t.prototype.componentDidUpdate=function(e){this.props.code!==e.code&&this.findAndRunScripts()},t.prototype.componentDidMount=function(){var e=this;this.firstLoad=!1,this.replaceNodes||(this.isHydrating?(this.setState({hydrated:!0}),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick((function(){return e.findAndRunScripts()}))):this.findAndRunScripts()),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&this.replaceNodes&&this.originalRef&&this.elementRef&&this.elementRef.appendChild(this.originalRef)},t.prototype.findAndRunScripts=function(){if(this.elementRef&&\"undefined\"!=typeof window)for(var e=this.elementRef.getElementsByTagName(\"script\"),t=0;t<e.length;t++){var n=e[t];if(n.src){if(this.scriptsInserted.has(n.src))continue;this.scriptsInserted.add(n.src);var i=document.createElement(\"script\");i.async=!0,i.src=n.src,document.head.appendChild(i)}else if(!n.type||[\"text/javascript\",\"application/javascript\",\"application/ecmascript\"].includes(n.type)){if(this.scriptsRun.has(n.innerText))continue;try{this.scriptsRun.add(n.innerText),new Function(n.innerText)()}catch(e){console.warn(\"Builder custom code component error:\",e)}}}},Object.defineProperty(t.prototype,\"code\",{get:function(){return(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer||this.isHydrating&&this.firstLoad)&&this.props.scriptsClientOnly?(this.props.code||\"\").replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\"\"):this.props.code},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e=this;return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\",__assign({ref:function(t){return e.elementRef=t},className:\"builder-custom-code\"},!this.replaceNodes&&!this.noReactRender&&{dangerouslySetInnerHTML:{__html:this.code}}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),CustomCode=withBuilder(CustomCodeComponent,{name:\"Custom Code\",static:!0,requiredPermissions:[\"editCode\"],inputs:[{name:\"code\",type:\"html\",required:!0,defaultValue:\"<p>Hello there, I am custom HTML code!</p>\",code:!0},__assign({name:\"replaceNodes\",type:\"boolean\",helperText:\"Preserve server rendered dom nodes\",advanced:!0},isShopify$1&&{defaultValue:!0}),__assign({name:\"scriptsClientOnly\",type:\"boolean\",helperText:\"Only print and run scripts on the client. Important when scripts influence DOM that could be replaced when client loads\",advanced:!0},!isShopify$1&&{defaultValue:!0})]});function removeProtocol(e){return e.replace(/http(s)?:/,\"\")}function isElementInViewport(e){var t=e.getBoundingClientRect();return t.top>=0&&t.left>=0&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&t.right<=(window.innerWidth||document.documentElement.clientWidth)}function getShopifyImageUrl(e,t){if(!e||!(null==e?void 0:e.match(/cdn\\.shopify\\.com/))||!t)return e;if(\"master\"===t)return removeProtocol(e);var n=e.match(/(_\\d+x(\\d+)?)?(\\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\\?v=\\d+)?)/i);if(n){var i=e.split(n[0]),r=n[3],o=t.match(\"x\")?t:\"\".concat(t,\"x\");return removeProtocol(\"\".concat(i[0],\"_\").concat(o).concat(r))}return null}var DEFAULT_ASPECT_RATIO$1=.7041;function updateQueryParam(e,t,n){void 0===e&&(e=\"\");var i=new RegExp(\"([?&])\"+t+\"=.*?(&|$)\",\"i\"),r=-1!==e.indexOf(\"?\")?\"&\":\"?\";return e.match(i)?e.replace(i,\"$1\"+t+\"=\"+encodeURIComponent(n)+\"$2\"):e+r+t+\"=\"+encodeURIComponent(n)}function getSrcSet(e){if(!e)return e;var t=[100,200,400,800,1200,1600,2e3];if(e.match(/builder\\.io/)){var n=e,i=Number(e.split(\"?width=\")[1]);return isNaN(i)||(n=\"\".concat(n,\" \").concat(i,\"w\")),t.filter((function(e){return e!==i})).map((function(t){return\"\".concat(updateQueryParam(e,\"width\",t),\" \").concat(t,\"w\")})).concat([n]).join(\", \")}return e.match(/cdn\\.shopify\\.com/)?t.map((function(t){return[getShopifyImageUrl(e,\"\".concat(t,\"x\").concat(t)),t]})).filter((function(e){return!!e[0]})).map((function(e){var t=e[0],n=e[1];return\"\".concat(t,\" \").concat(n,\"w\")})).concat([e]).join(\", \"):e}var getSizes=function(e,t,n){var i,r,o,a,s,l,u,d;void 0===n&&(n={});var c=\"\";if(e){var p=e.split(\",\"),f=p.length;c=p.map((function(e,t){return f===t+1?e.replace(/\\([\\s\\S]*?\\)/g,\"\").trim():e})).join(\", \")}else if(t&&t.responsiveStyles){var m=[],h=!1,g=/^\\d+/,v=getSizesForBreakpoints(n);if(null===(o=null===(r=null===(i=t.responsiveStyles)||void 0===i?void 0:i.small)||void 0===r?void 0:r.width)||void 0===o?void 0:o.match(g)){h=!0;var b=\"(max-width: \".concat(v.small.max,\"px)\"),y=\"\".concat(b,\" \").concat(t.responsiveStyles.small.width.replace(\"%\",\"vw\"));m.push(y)}if(null===(l=null===(s=null===(a=t.responsiveStyles)||void 0===a?void 0:a.medium)||void 0===s?void 0:s.width)||void 0===l?void 0:l.match(g)){h=!0;b=\"(max-width: \".concat(v.medium.max,\"px)\"),y=\"\".concat(b,\" \").concat(t.responsiveStyles.medium.width.replace(\"%\",\"vw\"));m.push(y)}if(null===(d=null===(u=t.responsiveStyles)||void 0===u?void 0:u.large)||void 0===d?void 0:d.width){var _=t.responsiveStyles.large.width.replace(\"%\",\"vw\");m.push(_)}else h&&m.push(\"100vw\");m.length&&(c=m.join(\", \"))}return c},ImageComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={imageLoaded:!t.useLazyLoading,load:!t.useLazyLoading},t.pictureRef=null,t.scrollListener=null,t.intersectionObserver=null,t}return __extends(t,e),Object.defineProperty(t.prototype,\"useLazyLoading\",{get:function(){return(!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser||!location.search.includes(\"builder.lazyLoadImages=false\"))&&(!(!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser||!location.href.includes(\"builder.lazyLoadImages=true\"))||this.props.lazy)},enumerable:!1,configurable:!0}),t.prototype.componentWillUnmount=function(){_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(this.scrollListener&&(window.removeEventListener(\"scroll\",this.scrollListener),this.scrollListener=null),this.intersectionObserver&&this.pictureRef&&this.intersectionObserver.unobserve(this.pictureRef))},t.prototype.componentDidMount=function(){var e=this;if(this.props.lazy&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser)if(this.pictureRef&&isElementInViewport(this.pictureRef))this.setState({load:!0});else if(\"function\"==typeof IntersectionObserver&&this.pictureRef){(this.intersectionObserver=new IntersectionObserver((function(t,n){t.forEach((function(t){t.intersectionRatio>0&&(e.setState({load:!0}),e.pictureRef&&n.unobserve(e.pictureRef))}))}))).observe(this.pictureRef)}else{var t=throttle((function(n){if(e.pictureRef){var i=e.pictureRef.getBoundingClientRect(),r=window.innerHeight/2;i.top<window.innerHeight+r&&(e.setState(__assign(__assign({},e.state),{load:!0})),window.removeEventListener(\"scroll\",t),e.scrollListener=null)}}),400,{leading:!1,trailing:!0});this.scrollListener=t,window.addEventListener(\"scroll\",t,{capture:!0,passive:!0}),t()}},Object.defineProperty(t.prototype,\"image\",{get:function(){return this.props.image||this.props.src},enumerable:!1,configurable:!0}),t.prototype.getSrcSet=function(){var e=this.image;if(e&&(e.match(/builder\\.io/)||e.match(/cdn\\.shopify\\.com/)))return getSrcSet(e)},t.prototype.render=function(){var e,t,n=this,i=this.props,r=i.aspectRatio,o=i.lazy,a=i.builderBlock,s=i.builderState,l=this.props.builderBlock&&this.props.builderBlock.children,u=this.props.srcset,d=getSizes(this.props.sizes,a,(null===(t=null===(e=null==s?void 0:s.context.builderContent)||void 0===e?void 0:e.meta)||void 0===t?void 0:t.breakpoints)||{}),c=this.image;u&&c&&c.includes(\"builder.io/api/v1/image\")?u.includes(c.split(\"?\")[0])||(console.debug(\"Removed given srcset\"),u=this.getSrcSet()):c&&!u&&(u=this.getSrcSet());var p=null==a?void 0:a.id.startsWith(\"builder-pixel-\"),f=this.props.fitContent;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderMetaContext.Consumer,null,(function(e){var t,i=e.ampMode,a=i?\"amp-img\":\"img\",s=(!o||n.state.load||i)&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(a,__assign({},i?{layout:\"responsive\",height:n.props.height||(r?Math.round(1e3*r):void 0),width:n.props.width||(r?Math.round(1e3/r):void 0)}:null,{alt:n.props.altText,key:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&\"string\"==typeof n.image&&n.image.split(\"?\")[0]||void 0,role:n.props.altText?void 0:\"presentation\",css:__assign(__assign({opacity:i?1:n.useLazyLoading&&!n.state.imageLoaded?0:1,transition:\"opacity 0.2s ease-in-out\",objectFit:n.props.backgroundSize||\"cover\",objectPosition:n.props.backgroundPosition||\"center\"},r&&!i&&{position:\"absolute\",height:\"100%\",width:\"100%\",left:0,top:0}),i&&(t={},t[\"& img\"]={objectFit:n.props.backgroundSize,objectPosition:n.props.backgroundPosition},t)),loading:p?\"eager\":\"lazy\",className:\"builder-image\"+(n.props.className?\" \"+n.props.className:\"\"),src:n.image},!i&&{onLoad:function(){return n.setState({imageLoaded:!0})}},{srcSet:u,sizes:!i&&d?d:void 0}));return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,i?s:(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"picture\",{ref:function(e){return n.pictureRef=e}},u&&u.match(/builder\\.io/)&&!n.props.noWebp&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"source\",{srcSet:u.replace(/\\?/g,\"?format=webp&\"),type:\"image/webp\"}),s),!r||i||f&&l&&l.length?null:(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{className:\"builder-image-sizer\",css:{width:\"100%\",paddingTop:100*r+\"%\",pointerEvents:\"none\",fontSize:0}},\" \"),l&&l.length?f?l.map((function(e,t){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlock$1,{key:e.id,block:e})})):(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\",position:\"absolute\",top:0,left:0,width:\"100%\",height:\"100%\"}},l.map((function(e,t){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlock$1,{key:e.id,block:e})}))):null)}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Image=withBuilder(ImageComponent,{name:\"Image\",static:!0,image:\"https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-insert_photo-24px.svg?alt=media&token=4e5d0ef4-f5e8-4e57-b3a9-38d63a9b9dc4\",defaultStyles:{position:\"relative\",minHeight:\"20px\",minWidth:\"20px\",overflow:\"hidden\"},canHaveChildren:!0,inputs:[{name:\"image\",type:\"file\",bubble:!0,allowedFileTypes:[\"jpeg\",\"jpg\",\"png\",\"svg\"],required:!0,defaultValue:\"https://cdn.builder.io/api/v1/image/assets%2FYJIGb4i01jvw0SRdL5Bt%2F72c80f114dc149019051b6852a9e3b7a\",onChange:function(e){e.delete(\"srcset\"),e.delete(\"noWebp\");var t,n,i=e.get(\"image\"),r=e.get(\"aspectRatio\");if(fetch(i).then((function(e){return e.blob()})).then((function(t){t.type.includes(\"svg\")&&e.set(\"noWebp\",!0)})),i&&(!r||.7041===r))return(t=i,void 0===n&&(n=6e4),new Promise((function(e,i){var r=document.createElement(\"img\"),o=!1;r.onload=function(){o=!0,e(r)},r.addEventListener(\"error\",(function(e){console.warn(\"Image load failed\",e.error),i(e.error)})),r.src=t,setTimeout((function(){o||i(new Error(\"Image load timed out\"))}),n)}))).then((function(t){var n,r=e.get(\"aspectRatio\");e.get(\"image\")!==i||r&&.7041!==r||t.width&&t.height&&(e.set(\"aspectRatio\",(n=t.height/t.width,Math.round(1e3*n)/1e3)),e.set(\"height\",t.height),e.set(\"width\",t.width))}))}},{name:\"backgroundSize\",type:\"text\",defaultValue:\"cover\",enum:[{label:\"contain\",value:\"contain\",helperText:\"The image should never get cropped\"},{label:\"cover\",value:\"cover\",helperText:\"The image should fill its box, cropping when needed\"}]},{name:\"backgroundPosition\",type:\"text\",defaultValue:\"center\",enum:[\"center\",\"top\",\"left\",\"right\",\"bottom\",\"top left\",\"top right\",\"bottom left\",\"bottom right\"]},{name:\"altText\",type:\"string\",helperText:\"Text to display when the user has images off\"},{name:\"height\",type:\"number\",hideFromUI:!0},{name:\"width\",type:\"number\",hideFromUI:!0},{name:\"sizes\",type:\"string\",hideFromUI:!0},{name:\"srcset\",type:\"string\",hideFromUI:!0},{name:\"lazy\",type:\"boolean\",defaultValue:!0,hideFromUI:!0},{name:\"fitContent\",type:\"boolean\",helperText:\"When child blocks are provided, fit to them instead of using the image's aspect ratio\",defaultValue:!0},{name:\"aspectRatio\",type:\"number\",helperText:\"This is the ratio of height/width, e.g. set to 1.5 for a 300px wide and 200px tall photo. Set to 0 to not force the image to maintain it's aspect ratio\",advanced:!0,defaultValue:DEFAULT_ASPECT_RATIO$1}]}),DEFAULT_ASPECT_RATIO=.7004048582995948,VideoComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.video=null,t.containerRef=null,t.scrollListener=null,t.state={load:!t.lazyLoad},t}return __extends(t,e),Object.defineProperty(t.prototype,\"lazyLoad\",{get:function(){return!1!==this.props.lazyLoad},enumerable:!1,configurable:!0}),t.prototype.updateVideo=function(){var e=this,t=this.video;if(t){[\"muted\",\"playsInline\",\"autoPlay\"].forEach((function(n){var i=n.toLowerCase();e.props[n]?t.setAttribute(i,i):t.removeAttribute(i)}))}},t.prototype.componentDidUpdate=function(){this.updateVideo()},t.prototype.componentDidMount=function(){var e=this;if(this.updateVideo(),this.lazyLoad&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser){var t=throttle((function(n){if(e.containerRef){var i=e.containerRef.getBoundingClientRect(),r=window.innerHeight/2;i.top<window.innerHeight+r&&(e.setState((function(e){return __assign(__assign({},e),{load:!0})})),window.removeEventListener(\"scroll\",t),e.scrollListener=null)}}),400,{leading:!1,trailing:!0});this.scrollListener=t,window.addEventListener(\"scroll\",t,{capture:!0,passive:!0}),t()}},t.prototype.componentWillUnmount=function(){_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&this.scrollListener&&(window.removeEventListener(\"scroll\",this.scrollListener),this.scrollListener=null)},t.prototype.render=function(){var e=this,t=this.props,n=t.aspectRatio,i=t.children;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{ref:function(t){return e.containerRef=t},css:{position:\"relative\"}},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"video\",{key:this.props.video||\"no-src\",poster:this.props.posterImage,ref:function(t){return e.video=t},autoPlay:this.props.autoPlay,muted:this.props.muted,controls:this.props.controls,loop:this.props.loop,preload:this.props.preload||\"metadata\",className:\"builder-video\",css:__assign({width:\"100%\",height:\"100%\",objectFit:this.props.fit,objectPosition:this.props.position,zIndex:2,borderRadius:1},n?{position:\"absolute\"}:null)},(!this.lazyLoad||this.state.load)&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"source\",{type:\"video/mp4\",src:this.props.video})),!n||this.props.fitContent&&i?null:(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{width:\"100%\",paddingTop:100*n+\"%\",pointerEvents:\"none\",fontSize:0}}),i&&this.props.fitContent?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\"}},i):i?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{pointerEvents:\"none\",display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\",position:\"absolute\",top:0,left:0,width:\"100%\",height:\"100%\"}},i):null)},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Video=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(withChildren(VideoComponent),{name:\"Video\",canHaveChildren:!0,defaultStyles:{minHeight:\"20px\",minWidth:\"20px\"},image:\"https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-videocam-24px%20(1).svg?alt=media&token=49a84e4a-b20e-4977-a650-047f986874bb\",inputs:[{name:\"video\",type:\"file\",allowedFileTypes:[\"mp4\"],bubble:!0,defaultValue:\"https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/assets%2FKQlEmWDxA0coC3PK6UvkrjwkIGI2%2F28cb070609f546cdbe5efa20e931aa4b?alt=media&token=912e9551-7a7c-4dfb-86b6-3da1537d1a7f\",required:!0},{name:\"posterImage\",type:\"file\",allowedFileTypes:[\"jpeg\",\"png\"],helperText:\"Image to show before the video plays\"},{name:\"autoPlay\",type:\"boolean\",defaultValue:!0},{name:\"controls\",type:\"boolean\",defaultValue:!1},{name:\"muted\",type:\"boolean\",defaultValue:!0},{name:\"loop\",type:\"boolean\",defaultValue:!0},{name:\"playsInline\",type:\"boolean\",defaultValue:!0},{name:\"fit\",type:\"text\",defaultValue:\"cover\",enum:[\"contain\",\"cover\",\"fill\",\"auto\"]},{name:\"preload\",type:\"text\",defaultValue:\"metadata\",enum:[\"auto\",\"metadata\",\"none\"]},{name:\"fitContent\",type:\"boolean\",helperText:\"When child blocks are provided, fit to them instead of using the aspect ratio\",defaultValue:!0,advanced:!0},{name:\"position\",type:\"text\",defaultValue:\"center\",enum:[\"center\",\"top\",\"left\",\"right\",\"bottom\",\"top left\",\"top right\",\"bottom left\",\"bottom right\"]},{name:\"height\",type:\"number\",advanced:!0},{name:\"width\",type:\"number\",advanced:!0},{name:\"aspectRatio\",type:\"number\",advanced:!0,defaultValue:DEFAULT_ASPECT_RATIO},{name:\"lazyLoad\",type:\"boolean\",helperText:'Load this video \"lazily\" - as in only when a user scrolls near the video. Recommended for optmized performance and bandwidth consumption',defaultValue:!0,advanced:!0}]}),size=function(e){return Object.keys(e).length},isShopify=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&\"Shopify\"in window,refs={};if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser)try{Array.from(document.querySelectorAll(\"[builder-static-symbol]\")).forEach((function(e){var t=e.getAttribute(\"builder-static-symbol\");t&&(refs[t]=e)}))}catch(e){console.error(\"Builder replace nodes error:\",e)}var SymbolComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.ref=null,t.staticRef=null,t}return __extends(t,e),Object.defineProperty(t.prototype,\"placeholder\",{get:function(){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{padding:10}},\"Symbols let you reuse dynamic elements across your content. Please choose a model and entry for this symbol.\")},enumerable:!1,configurable:!0}),t.prototype.componentDidMount=function(){var e,t,n;this.useStatic&&this.staticRef&&refs[null===(e=this.props.builderBlock)||void 0===e?void 0:e.id]&&(null===(t=this.staticRef.parentNode)||void 0===t||t.replaceChild(refs[null===(n=this.props.builderBlock)||void 0===n?void 0:n.id],this.staticRef))},Object.defineProperty(t.prototype,\"useStatic\",{get:function(){var e;return Boolean(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&refs[null===(e=this.props.builderBlock)||void 0===e?void 0:e.id]&&!(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing))},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e,t=this;if(this.useStatic)return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{ref:function(e){return t.staticRef=e}});var n=this.props.symbol,i=!1;n||(i=!0);var r=this.props.dataOnly?NoWrap:this.props.builderBlock&&this.props.builderBlock.tagName||\"div\",o=n||{},a=o.model,s=o.entry,l=o.data,u=o.content,d=o.inline,c=(null==n?void 0:n.dynamic)||this.props.dynamic;a&&(s||c)||(null===(e=null==u?void 0:u.data)||void 0===e?void 0:e.blocksJs)||d||(i=!0);var p=c?void 0:[a,s].join(\":\"),f=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing?null:l&&size(l)&&hash_sum__WEBPACK_IMPORTED_MODULE_4___default()(l);p&&f&&f.length<300&&(p+=\":\"+f);var m=this.props.attributes||{};return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Consumer,{key:(a||\"no model\")+\":\"+(s||\"no entry\")},(function(e){var o,d,c,f,h,g,v,b,y,_,x,S=\"\".concat(p,\"_\").concat((null===(o=null==e?void 0:e.state)||void 0===o?void 0:o.locale)||\"Default\");return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(r,__assign({\"data-model\":a},m,{className:(m.class||m.className||\"\")+\" builder-symbol\"+((null==n?void 0:n.inline)?\" builder-inline-symbol\":\"\")+((null==n?void 0:n.dynamic)||t.props.dynamic?\" builder-dynamic-symbol\":\"\")}),i?t.placeholder:(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderComponent,__assign({},(null===(d=e.state)||void 0===d?void 0:d.locale)&&{locale:e.state.locale},{isChild:!0,ref:function(e){return t.ref=e},context:__assign(__assign({},e.context),{symbolId:null===(c=t.props.builderBlock)||void 0===c?void 0:c.id}),modelName:a,entry:s,data:__assign(__assign(__assign({},l),!!t.props.inheritState&&e.state),null===(y=null===(b=null===(v=null===(g=null===(h=null===(f=t.props.builderBlock)||void 0===f?void 0:f.component)||void 0===h?void 0:h.options)||void 0===g?void 0:g.symbol)||void 0===v?void 0:v.content)||void 0===b?void 0:b.data)||void 0===y?void 0:y.state),renderLink:e.renderLink,inlineContent:null==n?void 0:n.inline},u&&{content:u},{key:S,options:{key:S,noEditorUpdates:!0},codegen:!!(null===(_=null==u?void 0:u.data)||void 0===_?void 0:_.blocksJs),hydrate:null===(x=e.state)||void 0===x?void 0:x._hydrate,builderBlock:t.props.builderBlock,dataOnly:t.props.dataOnly}),t.props.children))}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Symbol$1=withBuilder(SymbolComponent,{name:\"Symbol\",noWrap:!0,static:!0,inputs:[{name:\"symbol\",type:\"uiSymbol\"},{name:\"dataOnly\",helperText:\"Make this a data symbol that doesn't display any UI\",type:\"boolean\",defaultValue:!1,advanced:!0,hideFromUI:!0},{name:\"inheritState\",helperText:\"Inherit the parent component state and data\",type:\"boolean\",defaultValue:isShopify,advanced:!0},{name:\"renderToLiquid\",helperText:\"Render this symbols contents to liquid. Turn off to fetch with javascript and use custom targeting\",type:\"boolean\",defaultValue:isShopify,advanced:!0,hideFromUI:!0},{name:\"useChildren\",hideFromUI:!0,type:\"boolean\"}]}),ButtonComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){var e=this.props.link?Link:\"span\";return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(e,__assign({role:\"button\",href:this.props.link,target:this.props.openLinkInNewTab?\"_blank\":void 0},this.props.attributes),this.props.text)},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Button=withBuilder(ButtonComponent,{name:\"Core:Button\",image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F81a15681c3e74df09677dfc57a615b13\",defaultStyles:{appearance:\"none\",paddingTop:\"15px\",paddingBottom:\"15px\",paddingLeft:\"25px\",paddingRight:\"25px\",backgroundColor:\"#000000\",color:\"white\",borderRadius:\"4px\",textAlign:\"center\",cursor:\"pointer\"},inputs:[{name:\"text\",type:\"text\",defaultValue:\"Click me!\",bubble:!0},{name:\"link\",type:\"url\",bubble:!0},{name:\"openLinkInNewTab\",type:\"boolean\",defaultValue:!1,friendlyName:\"Open link in new tab\"}],static:!0,noWrap:!0}),SectionComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.ref=null,t.unmountCallbacks=[],t.state={inView:!1},t}return __extends(t,e),Object.defineProperty(t.prototype,\"renderContents\",{get:function(){return!0!==this.props.lazyLoad||this.state.inView},enumerable:!1,configurable:!0}),t.prototype.componentWillUnmount=function(){this.unmountCallbacks.forEach((function(e){return e()}))},t.prototype.componentDidMount=function(){var e=this;if(this.props.lazyLoad)if(\"undefined\"!=typeof IntersectionObserver&&this.ref){var t=new IntersectionObserver((function(t,n){t.forEach((function(t){t.intersectionRatio>0&&(e.setState({inView:!0}),e.ref&&n.unobserve(e.ref))}))}),{rootMargin:\"10px\"});t.observe(this.ref),this.unmountCallbacks.push((function(){e.ref&&t.unobserve(e.ref)}))}else this.setState({inView:!0})},t.prototype.render=function(){var e=this;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"section\",{ref:function(t){return e.ref=t},css:__assign({width:\"100%\",alignSelf:\"stretch\",flexGrow:1,boxSizing:\"border-box\",maxWidth:this.props.maxWidth,display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\",marginLeft:\"auto\",marginRight:\"auto\"},this.renderContents?null:this.props.lazyStyles)},this.renderContents?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,this.props.children,this.props.builderBlock&&this.props.builderBlock.children&&this.props.builderBlock.children.map((function(e,t){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlock$1,{key:e.id,block:e})}))):null)},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Section=withBuilder(SectionComponent,{name:\"Core:Section\",static:!0,image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F682efef23ace49afac61748dd305c70a\",inputs:[{name:\"maxWidth\",type:\"number\",defaultValue:1200},{name:\"lazyLoad\",type:\"boolean\",defaultValue:!1,advanced:!0,description:\"Only render this section when in view\"}],defaultStyles:{paddingLeft:\"20px\",paddingRight:\"20px\",paddingTop:\"50px\",paddingBottom:\"50px\",marginTop:\"0px\",width:\"100vw\",marginLeft:\"calc(50% - 50vw)\"},canHaveChildren:!0,defaultChildren:[{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{textAlign:\"center\"}},component:{name:\"Text\",options:{text:\"<p><b>I am a section! My content keeps from getting too wide, so that it's easy to read even on big screens.</b></p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur</p>\"}}}]}),StateProviderComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){var e=this;return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderStoreContext.Consumer,null,(function(t){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderStoreContext.Provider,{value:__assign(__assign({},t),{state:__assign(__assign({},t.state),e.props.state),context:__assign(__assign({},t.context),e.props.context)})},e.props.builderBlock&&e.props.builderBlock.children&&e.props.builderBlock.children.map((function(e,t){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlock$1,{block:e,key:e.id,index:t,child:!0})})),e.props.children)}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),StateProvider=withBuilder(StateProviderComponent,{name:\"Builder:StateProvider\",canHaveChildren:!0,static:!0,noWrap:!0,hideFromInsertMenu:!0}),prefetched=new Set;function searchToObject(e){var t=(e.search||\"\").substring(1).split(\"&\"),n={};for(var i in t)if(t[i]&&\"string\"==typeof t[i]){var r=t[i].split(\"=\");n[decodeURIComponent(r[0])]=decodeURIComponent(r[1])}return n}var RouterComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.builder=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder,t.routed=!1,t.preloadQueue=0,t.onPopState=function(e){t.updateLocationState()},t.onMouseOverOrTouchStart=function(e){if(!(t.preloadQueue>4)&&!1!==t.props.preloadOnHover){var n=t.findHrefTarget(e);if(n){var i=n.getAttribute(\"href\");if(i){if(!t.isRelative(i)){var r=t.convertToRelative(i);if(!r)return;i=r}if(!i.startsWith(\"#\")&&!prefetched.has(i)){prefetched.add(i);var o=t.parseUrl(i);t.preloadQueue++;var a=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.getUserAttributes();a.urlPath=o.pathname,a.queryString=o.search;var s=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.get(t.model,{userAttributes:a,key:t.model+\":\"+o.pathname+o.search}).subscribe((function(){t.preloadQueue--,s.unsubscribe()}))}}}}},t.onClick=function(e){return __awaiter(t,void 0,void 0,(function(){var t,n,i,r;return __generator(this,(function(o){if(!1===this.props.handleRouting)return[2];if(0!==e.button||e.ctrlKey||e.defaultPrevented||e.metaKey)return[2];if(!(t=this.findHrefTarget(e)))return[2];if(t.target&&\"_client\"!==t.target)return[2];if(!(n=t.getAttribute(\"href\")))return[2];if(this.props.onRoute&&(i={url:n,anchorNode:t,preventDefault:function(){this.defaultPrevented=!0},defaultPrevented:!1},this.props.onRoute(i),i.defaultPrevented))return[2];if(!this.isRelative(n)){if(!(r=this.convertToRelative(n)))return[2];n=r}return n.startsWith(\"#\")||(e.preventDefault(),this.route(n)),[2]}))}))},t.privateState=null,t}return __extends(t,e),t.prototype.route=function(e){var t;return this.routed=!0,\"function\"==typeof(null===(t=window.history)||void 0===t?void 0:t.pushState)?(history.pushState(null,\"\",e),this.updateLocationState(),!0):(location.href=e,!1)},t.prototype.updateLocationState=function(){this.privateState&&this.privateState.update((function(e){e.location=__assign(__assign({},e.location),{pathname:location.pathname,search:location.search,path:location.pathname.split(\"/\").slice(1),query:searchToObject(location)})}))},Object.defineProperty(t.prototype,\"model\",{get:function(){return this.props.model||\"page\"},enumerable:!1,configurable:!0}),t.prototype.componentDidMount=function(){\"undefined\"!=typeof document&&(document.addEventListener(\"click\",this.onClick),window.addEventListener(\"popstate\",this.onPopState),document.addEventListener(\"mouseover\",this.onMouseOverOrTouchStart),document.addEventListener(\"touchstart\",this.onMouseOverOrTouchStart))},t.prototype.componentWillUnmount=function(){\"undefined\"!=typeof document&&(document.removeEventListener(\"click\",this.onClick),document.removeEventListener(\"mouseover\",this.onMouseOverOrTouchStart),window.removeEventListener(\"popstate\",this.onPopState),document.removeEventListener(\"touchstart\",this.onMouseOverOrTouchStart))},t.prototype.render=function(){var e=this,t=this.model;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Consumer,null,(function(n){e.privateState=n;var i=n.state&&n.state.location&&n.state.location.pathname+n.state.location.search;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{className:\"builder-router\",\"data-model\":t},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"style\",null,\"\\n                @keyframes builderLoadingSpinner {\\n                  0% {\\n                    transform: rotate(0deg);\\n                  }\\n                  100% {\\n                    transform: rotate(360deg);\\n                  }\\n                }\\n                /* TODO: overridable tag */\\n                .builder-page-loading {\\n                  -webkit-animation: builderLoadingSpinner 1s infinite linear;\\n                  animation: builderLoadingSpinner 1s infinite linear;\\n                  -webkit-transform: translateZ(0);\\n                  transform: translateZ(0);\\n                  border-radius: 50%;\\n                  width: 36px;\\n                  height: 36px;\\n                  margin: 6px auto;\\n                  position: relative;\\n                  border: 1px solid transparent;\\n                  border-left: 1px solid #808284;\\n                }\\n              \"),(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderComponent,{key:i,data:e.props.data,content:e.routed?void 0:e.props.content,modelName:t,options:{key:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing?void 0:e.model+\":\"+i}},e.props.children||(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{display:\"flex\"}},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{margin:\"40vh auto\"},className:\"builder-page-loading\"}))))}))},t.prototype.findHrefTarget=function(e){for(var t=e.target;t;){if(t instanceof HTMLAnchorElement&&t.getAttribute(\"href\"))return t;if(t===e.currentTarget)break;t=t.parentElement}return null},t.prototype.isRelative=function(e){return!e.match(/^(\\/\\/|https?:\\/\\/)/i)},t.prototype.parseUrl=function(e){var t=document.createElement(\"a\");return t.href=e,t},t.prototype.convertToRelative=function(e){var t=this.parseUrl(location.href),n=this.parseUrl(e);if(t.host===n.host){var i=n.pathname+(n.search?n.search:\"\");return i.startsWith(\"#\")?null:i||\"/\"}return null},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Router=withBuilder(RouterComponent,{name:\"Core:Router\",hideFromInsertMenu:!0,inputs:[{name:\"model\",type:\"string\",defaultValue:\"page\",advanced:!0},{name:\"handleRouting\",type:\"boolean\",defaultValue:!0,advanced:!0},{name:\"preloadOnHover\",type:\"boolean\",defaultValue:!0,advanced:!0},{name:\"onRoute\",type:\"function\",advanced:!0}]});function Mutation(e){var t,n,i=react__WEBPACK_IMPORTED_MODULE_2___default().useRef(null);useWaitForSelector(e.selector,(function(t){\"afterEnd\"!==e.type&&(t.innerHTML=\"\"),t.appendChild(i.current.firstElementChild)}));var r=null===(t=e.builderBlock)||void 0===t?void 0:t.children;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\",{style:{display:\"none\"},ref:i},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlocks,{style:{display:\"inline\"},child:!0,parentElementId:null===(n=e.builderBlock)||void 0===n?void 0:n.id,dataPath:\"this.children\",blocks:r}))}function useWaitForSelector(e,t){react__WEBPACK_IMPORTED_MODULE_2___default().useLayoutEffect((function(){try{var n=document.querySelector(e);if(n)return void t(n)}catch(e){console.warn(e)}var i=new MutationObserver((function(){try{var n=document.querySelector(e);n&&(i.disconnect(),t(n))}catch(e){console.warn(e)}}));return i.observe(document.body,{attributes:!0,subtree:!0,characterData:!0}),function(){i.disconnect()}}),[e])}_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(Mutation,{name:\"Builder:Mutation\",canHaveChildren:!0,noWrap:!0,hideFromInsertMenu:!0,inputs:[{name:\"type\",type:\"string\",defaultValue:\"replace\",enum:[{label:\"Replace\",value:\"replace\",helperText:\"Replace the contents of this site region with content from Builder\"},{label:\"Append\",value:\"afterEnd\",helperText:\"Append Builder content after the chosen site region\"}]},{name:\"selector\",type:\"builder:domSelector\"}]});var get=function(e,t,n){var i=String.prototype.split.call(t,/[,[\\].]+?/).filter(Boolean).reduce((function(e,t){return null!=e?e[t]:e}),e);return void 0===i||i===e?n:i},MULTIPART_CONTENT_TYPE=\"multipart/form-data\",JSON_CONTENT_TYPE=\"application/json\",ENCODED_CONTENT_TYPE=\"application/x-www-form-urlencoded\",FormComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.ref=null,t.state={state:\"unsubmitted\",responseData:null,formErrorMessage:\"\"},t}return __extends(t,e),Object.defineProperty(t.prototype,\"submissionState\",{get:function(){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&this.props.previewState||this.state.state},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e=this;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Consumer,null,(function(t){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Provider,{value:__assign(__assign({},t),{state:__assign(__assign({},t.state),{formErrorMessage:e.state.formErrorMessage})})},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"form\",__assign({validate:e.props.validate,ref:function(t){return e.ref=t},action:!e.props.sendWithJs&&e.props.action,method:e.props.method,name:e.props.name,onSubmit:function(t){var n,i=e.props.sendWithJs||\"email\"===e.props.sendSubmissionsTo;if(\"zapier\"===e.props.sendSubmissionsTo)t.preventDefault();else if(i){if(!e.props.action&&\"email\"!==e.props.sendSubmissionsTo)return void t.preventDefault();t.preventDefault();var r=t.currentTarget,o=e.props.customHeaders||{},a=void 0,s=new FormData(r),l=Array.from(t.currentTarget.querySelectorAll(\"input,select,textarea\")).filter((function(e){return!!e.name})).map((function(e){var t,n=e.name;if(e instanceof HTMLInputElement)if(\"radio\"===e.type){if(e.checked)return{key:n,value:t=e.name}}else if(\"checkbox\"===e.type)t=e.checked;else if(\"number\"===e.type||\"range\"===e.type){var i=e.valueAsNumber;isNaN(i)||(t=i)}else t=\"file\"===e.type?e.files:e.value;else t=e.value;return{key:n,value:t}})),u=e.props.contentType;if(\"email\"===e.props.sendSubmissionsTo&&(u=MULTIPART_CONTENT_TYPE),Array.from(l).forEach((function(e){var t=e.value;(t instanceof File||Array.isArray(t)&&t[0]instanceof File||t instanceof FileList)&&(u=MULTIPART_CONTENT_TYPE)})),u===MULTIPART_CONTENT_TYPE)a=s;else if(u===JSON_CONTENT_TYPE){var d={};Array.from(l).forEach((function(e){var t=e.value,n=e.key;set(d,n,t)})),a=JSON.stringify(d)}else{if(u!==ENCODED_CONTENT_TYPE)return void console.error(\"Unsupported content type: \",u);a=Array.from(l).map((function(e){var t=e.value,n=e.key;return encodeURIComponent(n)+\"=\"+encodeURIComponent(t)})).join(\"&\")}u&&u!==MULTIPART_CONTENT_TYPE&&(i&&(null===(n=e.props.action)||void 0===n?void 0:n.includes(\"zapier.com\"))||(o[\"content-type\"]=u));var c=new CustomEvent(\"presubmit\",{detail:{body:a}});if(e.ref&&(e.ref.dispatchEvent(c),c.defaultPrevented))return;e.setState(__assign(__assign({},e.state),{state:\"sending\"}));var p=\"\".concat(\"dev\"===_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.env?\"http://localhost:5000\":\"https://builder.io\",\"/api/v1/form-submit?apiKey=\").concat(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.apiKey,\"&to=\").concat(btoa(e.props.sendSubmissionsToEmail||\"\"),\"&name=\").concat(encodeURIComponent(e.props.name||\"\"));fetch(\"email\"===e.props.sendSubmissionsTo?p:e.props.action,{body:a,headers:o,method:e.props.method||\"post\"}).then((function(t){return __awaiter(e,void 0,void 0,(function(){var e,n,i,r,o;return __generator(this,(function(a){switch(a.label){case 0:return(n=t.headers.get(\"content-type\"))&&-1!==n.indexOf(JSON_CONTENT_TYPE)?[4,t.json()]:[3,2];case 1:return e=a.sent(),[3,4];case 2:return[4,t.text()];case 3:e=a.sent(),a.label=4;case 4:if(!t.ok&&this.props.errorMessagePath&&(i=get(e,this.props.errorMessagePath))&&(\"string\"!=typeof i&&(i=JSON.stringify(i)),this.setState(__assign(__assign({},this.state),{formErrorMessage:i}))),this.setState(__assign(__assign({},this.state),{responseData:e,state:t.ok?\"success\":\"error\"})),t.ok){if(r=new CustomEvent(\"submit:success\",{detail:{res:t,body:e}}),this.ref){if(this.ref.dispatchEvent(r),r.defaultPrevented)return[2];!1!==this.props.resetFormOnSubmit&&this.ref.reset()}this.props.successUrl&&(this.ref?(o=new CustomEvent(\"route\",{detail:{url:this.props.successUrl}}),this.ref.dispatchEvent(o),o.defaultPrevented||(location.href=this.props.successUrl)):location.href=this.props.successUrl)}return[2]}}))}))}),(function(t){var n=new CustomEvent(\"submit:error\",{detail:{error:t}});e.ref&&(e.ref.dispatchEvent(n),n.defaultPrevented)||e.setState(__assign(__assign({},e.state),{responseData:t,state:\"error\"}))}))}}},e.props.attributes),e.props.builderBlock&&e.props.builderBlock.children&&e.props.builderBlock.children.map((function(e,t){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlock$1,{key:e.id,block:e})})),\"error\"===e.submissionState&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlocks,{dataPath:\"errorMessage\",blocks:e.props.errorMessage}),\"sending\"===e.submissionState&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlocks,{dataPath:\"sendingMessage\",blocks:e.props.sendingMessage}),\"error\"===e.submissionState&&e.state.responseData&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"pre\",{className:\"builder-form-error-text\",css:{padding:10,color:\"red\",textAlign:\"center\"}},JSON.stringify(e.state.responseData,null,2)),\"success\"===e.submissionState&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlocks,{dataPath:\"successMessage\",blocks:e.props.successMessage})))}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Form=withBuilder(FormComponent,{name:\"Form:Form\",defaults:{responsiveStyles:{large:{marginTop:\"15px\",paddingBottom:\"15px\"}}},image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fef36d2a846134910b64b88e6d18c5ca5\",inputs:[{name:\"sendSubmissionsTo\",type:\"string\",enum:[{label:\"Send to email\",value:\"email\",helperText:\"Send form submissions to the email address of your choosing\"},{label:\"Custom\",value:\"custom\",helperText:\"Handle where the form requests go manually with a little code, e.g. to your own custom backend\"}],defaultValue:\"email\"},{name:\"sendSubmissionsToEmail\",type:\"string\",required:!0,defaultValue:\"your@email.com\",showIf:'options.get(\"sendSubmissionsTo\") === \"email\"'},{name:\"sendWithJs\",type:\"boolean\",helperText:\"Set to false to use basic html form action\",defaultValue:!0,showIf:'options.get(\"sendSubmissionsTo\") === \"custom\"'},{name:\"name\",type:\"string\",defaultValue:\"My form\"},{name:\"action\",type:\"string\",helperText:\"URL to send the form data to\",showIf:'options.get(\"sendSubmissionsTo\") === \"custom\"'},{name:\"contentType\",type:\"string\",defaultValue:JSON_CONTENT_TYPE,advanced:!0,enum:[JSON_CONTENT_TYPE,MULTIPART_CONTENT_TYPE,ENCODED_CONTENT_TYPE],showIf:'options.get(\"sendSubmissionsTo\") === \"custom\" && options.get(\"sendWithJs\") === true'},{name:\"method\",type:\"string\",showIf:'options.get(\"sendSubmissionsTo\") === \"custom\"',defaultValue:\"POST\",advanced:!0},{name:\"previewState\",type:\"string\",enum:[\"unsubmitted\",\"sending\",\"success\",\"error\"],defaultValue:\"unsubmitted\",helperText:'Choose a state to edit, e.g. choose \"success\" to show what users see on success and edit the message',showIf:'options.get(\"sendSubmissionsTo\") !== \"zapier\" && options.get(\"sendWithJs\") === true'},{name:\"successUrl\",type:\"url\",helperText:\"Optional URL to redirect the user to on form submission success\",showIf:'options.get(\"sendSubmissionsTo\") !== \"zapier\" && options.get(\"sendWithJs\") === true'},{name:\"resetFormOnSubmit\",type:\"boolean\",showIf:function(e){return\"custom\"===e.get(\"sendSubmissionsTo\")&&!0===e.get(\"sendWithJs\")},advanced:!0},{name:\"successMessage\",type:\"uiBlocks\",hideFromUI:!0,defaultValue:[{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Text\",options:{text:\"<span>Thanks!</span>\"}}}]},{name:\"validate\",type:\"boolean\",defaultValue:!0,advanced:!0},{name:\"errorMessagePath\",type:\"text\",advanced:!0,helperText:'Path to where to get the error message from in a JSON response to display to the user, e.g. \"error.message\" for a response like { \"error\": { \"message\": \"this username is taken\" }}'},{name:\"errorMessage\",type:\"uiBlocks\",hideFromUI:!0,defaultValue:[{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},bindings:{\"component.options.text\":\"state.formErrorMessage || block.component.options.text\"},component:{name:\"Text\",options:{text:\"<span>Form submission error :( Please check your answers and try again</span>\"}}}]},{name:\"sendingMessage\",type:\"uiBlocks\",hideFromUI:!0,defaultValue:[{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Text\",options:{text:\"<span>Sending...</span>\"}}}]},__assign(__assign({name:\"customHeaders\",type:\"map\"},{valueType:{type:\"string\"}}),{advanced:!0,showIf:'options.get(\"sendSubmissionsTo\") === \"custom\" && options.get(\"sendWithJs\") === true'})],noWrap:!0,canHaveChildren:!0,defaultChildren:[{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Text\",options:{text:\"<span>Enter your name</span>\"}}},{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Form:Input\",options:{name:\"name\",placeholder:\"Jane Doe\"}}},{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Text\",options:{text:\"<span>Enter your email</span>\"}}},{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Form:Input\",options:{name:\"email\",placeholder:\"jane@doe.com\"}}},{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Form:SubmitButton\",options:{text:\"Submit\"}}}]}),FormInputComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"input\",__assign({key:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&this.props.defaultValue?this.props.defaultValue:\"default-key\",placeholder:this.props.placeholder,type:this.props.type,name:this.props.name,value:this.props.value,defaultValue:this.props.defaultValue,required:this.props.required},this.props.attributes))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),FormInput=withBuilder(FormInputComponent,{name:\"Form:Input\",image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fad6f37889d9e40bbbbc72cdb5875d6ca\",inputs:[{name:\"type\",type:\"text\",enum:[\"text\",\"number\",\"email\",\"url\",\"checkbox\",\"radio\",\"range\",\"date\",\"datetime-local\",\"search\",\"tel\",\"time\",\"file\",\"month\",\"week\",\"password\",\"color\",\"hidden\"],defaultValue:\"text\"},{name:\"name\",type:\"string\",required:!0,helperText:'Every input in a form needs a unique name describing what it takes, e.g. \"email\"'},{name:\"placeholder\",type:\"string\",defaultValue:\"Hello there\",helperText:\"Text to display when there is no value\"},{name:\"defaultValue\",type:\"string\"},{name:\"value\",type:\"string\",advanced:!0},{name:\"required\",type:\"boolean\",helperText:\"Is this input required to be filled out to submit a form\",defaultValue:!1}],noWrap:!0,static:!0,defaultStyles:{paddingTop:\"10px\",paddingBottom:\"10px\",paddingLeft:\"10px\",paddingRight:\"10px\",borderRadius:\"3px\",borderWidth:\"1px\",borderStyle:\"solid\",borderColor:\"#ccc\"}}),FormSubmitButtonComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"button\",__assign({type:\"submit\"},this.props.attributes),this.props.text)},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),FormSubmitButton=withBuilder(FormSubmitButtonComponent,{name:\"Form:SubmitButton\",image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fdf2820ffed1f4349a94c40b3221f5b98\",defaultStyles:{appearance:\"none\",paddingTop:\"15px\",paddingBottom:\"15px\",paddingLeft:\"25px\",paddingRight:\"25px\",backgroundColor:\"#3898EC\",color:\"white\",borderRadius:\"4px\",cursor:\"pointer\"},inputs:[{name:\"text\",type:\"text\",defaultValue:\"Click me\"}],static:!0,noWrap:!0}),LabelComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"label\",__assign({htmlFor:this.props.for},this.props.attributes),this.props.text&&react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"span\",{className:\"builder-label-text\",dangerouslySetInnerHTML:{__html:this.props.text}}),this.props.builderBlock&&this.props.builderBlock.children&&this.props.builderBlock.children.map((function(e){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlock$1,{key:e.id,block:e})})))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Label=withBuilder(LabelComponent,{name:\"Form:Label\",image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F9322342f04b545fb9a8091cd801dfb5b\",inputs:[{name:\"text\",type:\"html\",richText:!0,defaultValue:\"Label\"},{name:\"for\",type:\"text\",helperText:\"The name of the input this label is for\",advanced:!0}],noWrap:!0,static:!0,canHaveChildren:!0}),FormSelectComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){var e=this.props.options;return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"select\",__assign({value:this.props.value,key:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&this.props.defaultValue?this.props.defaultValue:\"default-key\",defaultValue:this.props.defaultValue,name:this.props.name},this.props.attributes),e&&e.map((function(e){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"option\",{value:e.value},e.name||e.value)})))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),FormSelect=withBuilder(FormSelectComponent,{name:\"Form:Select\",image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F83acca093fb24aaf94dee136e9a4b045\",defaultStyles:{alignSelf:\"flex-start\"},inputs:[{name:\"options\",type:\"list\",required:!0,subFields:[{name:\"value\",type:\"text\",required:!0},{name:\"name\",type:\"text\"}],defaultValue:[{value:\"option 1\"},{value:\"option 2\"}]},{name:\"name\",type:\"string\",required:!0,helperText:'Every select in a form needs a unique name describing what it gets, e.g. \"email\"'},{name:\"defaultValue\",type:\"string\"},{name:\"value\",type:\"string\",advanced:!0},{name:\"required\",type:\"boolean\",defaultValue:!1}],static:!0,noWrap:!0}),TextAreaComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"textarea\",__assign({placeholder:this.props.placeholder,name:this.props.name,value:this.props.value,defaultValue:this.props.defaultValue},this.props.attributes))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),TextArea=withBuilder(TextAreaComponent,{name:\"Form:TextArea\",image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Ff74a2f3de58c4c3e939204e5b6b8f6c3\",inputs:[{advanced:!0,name:\"value\",type:\"string\"},{name:\"name\",type:\"string\",required:!0,helperText:'Every input in a form needs a unique name describing what it gets, e.g. \"email\"'},{name:\"defaultValue\",type:\"string\"},{name:\"placeholder\",type:\"string\",defaultValue:\"Hello there\"},{name:\"required\",type:\"boolean\",defaultValue:!1}],defaultStyles:{paddingTop:\"10px\",paddingBottom:\"10px\",paddingLeft:\"10px\",paddingRight:\"10px\",borderRadius:\"3px\",borderWidth:\"1px\",borderStyle:\"solid\",borderColor:\"#ccc\"},static:!0,noWrap:!0}),ImgComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){var e=this.props.attributes||{};return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"img\",__assign({},this.props.attributes,{src:this.props.image||e.src}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Img=withBuilder(ImgComponent,{name:\"Raw:Img\",hideFromInsertMenu:!0,image:\"https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-insert_photo-24px.svg?alt=media&token=4e5d0ef4-f5e8-4e57-b3a9-38d63a9b9dc4\",inputs:[{name:\"image\",bubble:!0,type:\"file\",allowedFileTypes:[\"jpeg\",\"jpg\",\"png\",\"svg\"],required:!0}],noWrap:!0,static:!0}),RawText=function(e){var t=e.attributes||{};return react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"span\",{className:(null==t?void 0:t.class)||(null==t?void 0:t.className),dangerouslySetInnerHTML:{__html:e.text||\"\"}})};function useIsPreviewing(){var e=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1),t=e[0],n=e[1];return (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)((function(){(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing)&&n(!0)}),[]),t}_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(RawText,{name:\"Builder:RawText\",hideFromInsertMenu:!0,inputs:[{name:\"text\",bubble:!0,type:\"longText\",required:!0}]}),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isReact=!0;\n//# sourceMappingURL=builder-react.es5.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@builder.io/react/dist/builder-react.es5.js\n"));

/***/ }),

/***/ "./node_modules/@builder.io/sdk/dist/index.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/@builder.io/sdk/dist/index.esm.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BehaviorSubject: function() { return /* binding */ BehaviorSubject; },\n/* harmony export */   Builder: function() { return /* binding */ Builder; },\n/* harmony export */   BuilderComponent: function() { return /* binding */ BuilderComponent; },\n/* harmony export */   Subscription: function() { return /* binding */ Subscription; },\n/* harmony export */   builder: function() { return /* binding */ builder; },\n/* harmony export */   isBrowser: function() { return /* binding */ isBrowser; }\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"./node_modules/@builder.io/sdk/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var hash_sum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hash-sum */ \"./node_modules/hash-sum/hash-sum.js\");\n/* harmony import */ var hash_sum__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(hash_sum__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n(function () {\n  if (typeof window === 'undefined' || typeof window.CustomEvent === 'function') return false;\n\n  function CustomEvent(event, params) {\n    params = params || { bubbles: false, cancelable: false, detail: null };\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  }\n\n  window.CustomEvent = CustomEvent;\n})();\n\nvar isSafari = typeof window !== 'undefined' &&\r\n    /^((?!chrome|android).)*safari/i.test(window.navigator.userAgent);\r\n// TODO: queue all of these in a debounceNextTick\r\nfunction nextTick(fn) {\r\n    // React native\r\n    if (typeof setImmediate === 'function' && typeof window === 'undefined') {\r\n        return setImmediate(fn);\r\n    }\r\n    // TODO: should this be setImmediate instead? Forgot if that is micro or macro task\r\n    // TODO: detect specifically if is server\r\n    // if (typeof process !== 'undefined' && process.nextTick) {\r\n    //   console.log('process.nextTick?');\r\n    //   process.nextTick(fn);\r\n    //   return;\r\n    // }\r\n    // FIXME: fix the real safari issue of this randomly not working\r\n    if (isSafari || typeof MutationObserver === 'undefined') {\r\n        setTimeout(fn);\r\n        return;\r\n    }\r\n    var called = 0;\r\n    var observer = new MutationObserver(function () { return fn(); });\r\n    var element = document.createTextNode('');\r\n    observer.observe(element, {\r\n        characterData: true,\r\n    });\r\n    // tslint:disable-next-line\r\n    element.data = String((called = ++called));\r\n}\n\nvar PROPERTY_NAME_DENY_LIST = Object.freeze(['__proto__', 'prototype', 'constructor']);\r\n// TODO: unit tests\r\nvar QueryString = /** @class */ (function () {\r\n    function QueryString() {\r\n    }\r\n    QueryString.parseDeep = function (queryString) {\r\n        var obj = this.parse(queryString);\r\n        return this.deepen(obj);\r\n    };\r\n    QueryString.stringifyDeep = function (obj) {\r\n        var map = this.flatten(obj);\r\n        return this.stringify(map);\r\n    };\r\n    QueryString.parse = function (queryString) {\r\n        var query = {};\r\n        var pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\r\n        for (var i = 0; i < pairs.length; i++) {\r\n            var pair = pairs[i].split('=');\r\n            // TODO: node support?\r\n            try {\r\n                query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\r\n            }\r\n            catch (error) {\r\n                // Ignore malformed URI components\r\n            }\r\n        }\r\n        return query;\r\n    };\r\n    QueryString.stringify = function (map) {\r\n        var str = '';\r\n        for (var key in map) {\r\n            if (map.hasOwnProperty(key)) {\r\n                var value = map[key];\r\n                if (str) {\r\n                    str += '&';\r\n                }\r\n                str += encodeURIComponent(key) + '=' + encodeURIComponent(value);\r\n            }\r\n        }\r\n        return str;\r\n    };\r\n    QueryString.deepen = function (map) {\r\n        // FIXME; Should be type Tree = Record<string, string | Tree>\r\n        // requires a typescript upgrade.\r\n        var output = {};\r\n        for (var k in map) {\r\n            var t = output;\r\n            var parts = k.split('.');\r\n            var key = parts.pop();\r\n            for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\r\n                var part = parts_1[_i];\r\n                assertAllowedPropertyName(part);\r\n                t = t[part] = t[part] || {};\r\n            }\r\n            t[key] = map[k];\r\n        }\r\n        return output;\r\n    };\r\n    QueryString.flatten = function (obj, _current, _res) {\r\n        if (_res === void 0) { _res = {}; }\r\n        for (var key in obj) {\r\n            var value = obj[key];\r\n            var newKey = _current ? _current + '.' + key : key;\r\n            if (value && typeof value === 'object') {\r\n                this.flatten(value, newKey, _res);\r\n            }\r\n            else {\r\n                _res[newKey] = value;\r\n            }\r\n        }\r\n        return _res;\r\n    };\r\n    return QueryString;\r\n}());\r\nfunction assertAllowedPropertyName(name) {\r\n    if (PROPERTY_NAME_DENY_LIST.indexOf(name) >= 0)\r\n        throw new Error(\"Property name \\\"\".concat(name, \"\\\" is not allowed\"));\r\n}\n\nvar version = \"2.0.5-0\";\n\nvar Subscription = /** @class */ (function () {\r\n    function Subscription(listeners, listener) {\r\n        this.listeners = listeners;\r\n        this.listener = listener;\r\n        this.unsubscribed = false;\r\n        this.otherSubscriptions = [];\r\n    }\r\n    Object.defineProperty(Subscription.prototype, \"closed\", {\r\n        get: function () {\r\n            return this.unsubscribed;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Subscription.prototype.add = function (subscription) {\r\n        this.otherSubscriptions.push(subscription);\r\n    };\r\n    Subscription.prototype.unsubscribe = function () {\r\n        if (this.unsubscribed) {\r\n            return;\r\n        }\r\n        if (this.listener && this.listeners) {\r\n            var index = this.listeners.indexOf(this.listener);\r\n            if (index > -1) {\r\n                this.listeners.splice(index, 1);\r\n            }\r\n        }\r\n        this.otherSubscriptions.forEach(function (sub) { return sub.unsubscribe(); });\r\n        this.unsubscribed = true;\r\n    };\r\n    return Subscription;\r\n}());\r\n// TODO: follow minimal basic spec: https://github.com/tc39/proposal-observable\r\nvar BehaviorSubject = /** @class */ (function () {\r\n    function BehaviorSubject(value) {\r\n        this.value = value;\r\n        this.listeners = [];\r\n        this.errorListeners = [];\r\n    }\r\n    BehaviorSubject.prototype.next = function (value) {\r\n        this.value = value;\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            listener(value);\r\n        }\r\n    };\r\n    // TODO: implement this as PIPE instead\r\n    BehaviorSubject.prototype.map = function (fn) {\r\n        var newSubject = new BehaviorSubject(fn(this.value));\r\n        // TODO: on destroy delete these\r\n        this.subscribe(function (val) {\r\n            newSubject.next(fn(val));\r\n        });\r\n        this.catch(function (err) {\r\n            newSubject.error(err);\r\n        });\r\n        return newSubject;\r\n    };\r\n    BehaviorSubject.prototype.catch = function (errorListener) {\r\n        this.errorListeners.push(errorListener);\r\n        return new Subscription(this.errorListeners, errorListener);\r\n    };\r\n    BehaviorSubject.prototype.error = function (error) {\r\n        for (var _i = 0, _a = this.errorListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            listener(error);\r\n        }\r\n    };\r\n    BehaviorSubject.prototype.subscribe = function (listener, errorListener) {\r\n        this.listeners.push(listener);\r\n        if (errorListener) {\r\n            this.errorListeners.push(errorListener);\r\n        }\r\n        return new Subscription(this.listeners, listener);\r\n    };\r\n    BehaviorSubject.prototype.toPromise = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var subscription = _this.subscribe(function (value) {\r\n                resolve(value);\r\n                subscription.unsubscribe();\r\n            }, function (err) {\r\n                reject(err);\r\n                subscription.unsubscribe();\r\n            });\r\n        });\r\n    };\r\n    BehaviorSubject.prototype.promise = function () {\r\n        return this.toPromise();\r\n    };\r\n    return BehaviorSubject;\r\n}());\n\nvar State = {\r\n    Pending: 'Pending',\r\n    Fulfilled: 'Fulfilled',\r\n    Rejected: 'Rejected',\r\n};\r\nfunction isFunction(val) {\r\n    return val && typeof val === 'function';\r\n}\r\nfunction isObject(val) {\r\n    return val && typeof val === 'object';\r\n}\r\nvar TinyPromise = /** @class */ (function () {\r\n    function TinyPromise(executor) {\r\n        this._state = State.Pending;\r\n        this._handlers = [];\r\n        this._value = null;\r\n        executor(this._resolve.bind(this), this._reject.bind(this));\r\n    }\r\n    TinyPromise.prototype._resolve = function (x) {\r\n        var _this = this;\r\n        if (x instanceof TinyPromise) {\r\n            x.then(this._resolve.bind(this), this._reject.bind(this));\r\n        }\r\n        else if (isObject(x) || isFunction(x)) {\r\n            var called_1 = false;\r\n            try {\r\n                var thenable = x.then;\r\n                if (isFunction(thenable)) {\r\n                    thenable.call(x, function (result) {\r\n                        if (!called_1)\r\n                            _this._resolve(result);\r\n                        called_1 = true;\r\n                        return undefined;\r\n                    }, function (error) {\r\n                        if (!called_1)\r\n                            _this._reject(error);\r\n                        called_1 = true;\r\n                        return undefined;\r\n                    });\r\n                }\r\n                else {\r\n                    this._fulfill(x);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (!called_1) {\r\n                    this._reject(ex);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._fulfill(x);\r\n        }\r\n    };\r\n    TinyPromise.prototype._fulfill = function (result) {\r\n        var _this = this;\r\n        this._state = State.Fulfilled;\r\n        this._value = result;\r\n        this._handlers.forEach(function (handler) { return _this._callHandler(handler); });\r\n    };\r\n    TinyPromise.prototype._reject = function (error) {\r\n        var _this = this;\r\n        this._state = State.Rejected;\r\n        this._value = error;\r\n        this._handlers.forEach(function (handler) { return _this._callHandler(handler); });\r\n    };\r\n    TinyPromise.prototype._isPending = function () {\r\n        return this._state === State.Pending;\r\n    };\r\n    TinyPromise.prototype._isFulfilled = function () {\r\n        return this._state === State.Fulfilled;\r\n    };\r\n    TinyPromise.prototype._isRejected = function () {\r\n        return this._state === State.Rejected;\r\n    };\r\n    TinyPromise.prototype._addHandler = function (onFulfilled, onRejected) {\r\n        this._handlers.push({\r\n            onFulfilled: onFulfilled,\r\n            onRejected: onRejected,\r\n        });\r\n    };\r\n    TinyPromise.prototype._callHandler = function (handler) {\r\n        if (this._isFulfilled() && isFunction(handler.onFulfilled)) {\r\n            handler.onFulfilled(this._value);\r\n        }\r\n        else if (this._isRejected() && isFunction(handler.onRejected)) {\r\n            handler.onRejected(this._value);\r\n        }\r\n    };\r\n    TinyPromise.prototype.then = function (onFulfilled, onRejected) {\r\n        var _this = this;\r\n        switch (this._state) {\r\n            case State.Pending: {\r\n                return new TinyPromise(function (resolve, reject) {\r\n                    _this._addHandler(function (value) {\r\n                        nextTick(function () {\r\n                            try {\r\n                                if (isFunction(onFulfilled)) {\r\n                                    resolve(onFulfilled(value));\r\n                                }\r\n                                else {\r\n                                    resolve(value);\r\n                                }\r\n                            }\r\n                            catch (ex) {\r\n                                reject(ex);\r\n                            }\r\n                        });\r\n                    }, function (error) {\r\n                        nextTick(function () {\r\n                            try {\r\n                                if (isFunction(onRejected)) {\r\n                                    resolve(onRejected(error));\r\n                                }\r\n                                else {\r\n                                    reject(error);\r\n                                }\r\n                            }\r\n                            catch (ex) {\r\n                                reject(ex);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n            case State.Fulfilled: {\r\n                return new TinyPromise(function (resolve, reject) {\r\n                    nextTick(function () {\r\n                        try {\r\n                            if (isFunction(onFulfilled)) {\r\n                                resolve(onFulfilled(_this._value));\r\n                            }\r\n                            else {\r\n                                resolve(_this._value);\r\n                            }\r\n                        }\r\n                        catch (ex) {\r\n                            reject(ex);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            case State.Rejected: {\r\n                return new TinyPromise(function (resolve, reject) {\r\n                    nextTick(function () {\r\n                        try {\r\n                            if (isFunction(onRejected)) {\r\n                                resolve(onRejected(_this._value));\r\n                            }\r\n                            else {\r\n                                reject(_this._value);\r\n                            }\r\n                        }\r\n                        catch (ex) {\r\n                            reject(ex);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    };\r\n    return TinyPromise;\r\n}());\r\nvar Promise$1 = (typeof Promise !== 'undefined' ? Promise : TinyPromise);\n\n// Webpack workaround to conditionally require certain external modules\r\n// only on the server and not bundle them on the client\r\nvar serverOnlyRequire;\r\ntry {\r\n    // tslint:disable-next-line:no-eval\r\n    serverOnlyRequire = eval('require');\r\n}\r\ncatch (err) {\r\n    // all good\r\n    serverOnlyRequire = (function () { return null; });\r\n}\r\nvar serverOnlyRequire$1 = serverOnlyRequire;\n\nfunction promiseResolve(value) {\r\n    return new Promise$1(function (resolve) { return resolve(value); });\r\n}\r\n// Adapted from https://raw.githubusercontent.com/developit/unfetch/master/src/index.mjs\r\nfunction tinyFetch(url, options) {\r\n    if (options === void 0) { options = {}; }\r\n    return new Promise$1(function (resolve, reject) {\r\n        var request = new XMLHttpRequest();\r\n        request.open(options.method || 'get', url, true);\r\n        if (options.headers) {\r\n            for (var i in options.headers) {\r\n                request.setRequestHeader(i, options.headers[i]);\r\n            }\r\n        }\r\n        request.withCredentials = options.credentials === 'include';\r\n        request.onload = function () {\r\n            resolve(response());\r\n        };\r\n        request.onerror = reject;\r\n        request.send(options.body);\r\n        function response() {\r\n            var keys = [];\r\n            var all = [];\r\n            var headers = {};\r\n            var header = undefined;\r\n            request\r\n                .getAllResponseHeaders()\r\n                .replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, function (_match, _key, value) {\r\n                var key = _key;\r\n                keys.push((key = key.toLowerCase()));\r\n                all.push([key, value]);\r\n                header = headers[key];\r\n                headers[key] = header ? \"\".concat(header, \",\").concat(value) : value;\r\n                return '';\r\n            });\r\n            return {\r\n                ok: ((request.status / 100) | 0) === 2,\r\n                status: request.status,\r\n                statusText: request.statusText,\r\n                url: request.responseURL,\r\n                clone: response,\r\n                text: function () { return promiseResolve(request.responseText); },\r\n                json: function () { return promiseResolve(request.responseText).then(JSON.parse); },\r\n                blob: function () { return promiseResolve(new Blob([request.response])); },\r\n                headers: {\r\n                    keys: function () { return keys; },\r\n                    entries: function () { return all; },\r\n                    get: function (n) { return headers[n.toLowerCase()]; },\r\n                    has: function (n) { return n.toLowerCase() in headers; },\r\n                },\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction getFetch() {\r\n    // If fetch is defined, in the browser, via polyfill, or in a Cloudflare worker, use it.\r\n    var _fetch = undefined;\r\n    if (globalThis.fetch) {\r\n        _fetch !== null && _fetch !== void 0 ? _fetch : (_fetch = globalThis.fetch);\r\n    }\r\n    else if (typeof window === 'undefined') {\r\n        // If fetch is not defined, in a Node.js environment, use node-fetch.\r\n        try {\r\n            // node-fetch@^3 is ESM only, and will throw error on require.\r\n            _fetch !== null && _fetch !== void 0 ? _fetch : (_fetch = serverOnlyRequire$1('node-fetch'));\r\n        }\r\n        catch (e) {\r\n            // If node-fetch is not installed, use tiny-fetch.\r\n            console.warn('node-fetch is not installed. consider polyfilling fetch or installing node-fetch.');\r\n            console.warn(e);\r\n        }\r\n    }\r\n    // Otherwise, use tiny-fetch.\r\n    return _fetch !== null && _fetch !== void 0 ? _fetch : tinyFetch;\r\n}\n\nfunction assign(target) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var to = Object(target);\r\n    for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n            // Skip over if undefined or null\r\n            for (var nextKey in nextSource) {\r\n                // Avoid bugs when hasOwnProperty is shadowed\r\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                    to[nextKey] = nextSource[nextKey];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return to;\r\n}\n\nfunction throttle(func, wait, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var context;\r\n    var args;\r\n    var result;\r\n    var timeout = null;\r\n    var previous = 0;\r\n    var later = function () {\r\n        previous = options.leading === false ? 0 : Date.now();\r\n        timeout = null;\r\n        result = func.apply(context, args);\r\n        if (!timeout)\r\n            context = args = null;\r\n    };\r\n    return function () {\r\n        var now = Date.now();\r\n        if (!previous && options.leading === false)\r\n            previous = now;\r\n        var remaining = wait - (now - previous);\r\n        context = this;\r\n        args = arguments;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            result = func.apply(context, args);\r\n            if (!timeout)\r\n                context = args = null;\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(later, remaining);\r\n        }\r\n        return result;\r\n    };\r\n}\n\nvar camelCaseToKebabCase = function (str) {\r\n    return str ? str.replace(/([A-Z])/g, function (g) { return \"-\".concat(g[0].toLowerCase()); }) : '';\r\n};\r\nvar Animator = /** @class */ (function () {\r\n    function Animator() {\r\n    }\r\n    Animator.prototype.bindAnimations = function (animations) {\r\n        for (var _i = 0, animations_1 = animations; _i < animations_1.length; _i++) {\r\n            var animation = animations_1[_i];\r\n            switch (animation.trigger) {\r\n                case 'pageLoad':\r\n                    this.triggerAnimation(animation);\r\n                    break;\r\n                case 'hover':\r\n                    this.bindHoverAnimation(animation);\r\n                    break;\r\n                case 'scrollInView':\r\n                    this.bindScrollInViewAnimation(animation);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    Animator.prototype.warnElementNotPresent = function (id) {\r\n        console.warn(\"Cannot animate element: element with ID \".concat(id, \" not found!\"));\r\n    };\r\n    Animator.prototype.augmentAnimation = function (animation, element) {\r\n        var stylesUsed = this.getAllStylesUsed(animation);\r\n        var computedStyle = getComputedStyle(element);\r\n        // const computedStyle = getComputedStyle(element);\r\n        // // FIXME: this will break if original load is in one reponsive size then resize to another hmmm\r\n        // Need to use transform instead of left since left can change on screen sizes\r\n        var firstStyles = animation.steps[0].styles;\r\n        var lastStyles = animation.steps[animation.steps.length - 1].styles;\r\n        var bothStyles = [firstStyles, lastStyles];\r\n        // FIXME: this won't work as expected for augmented animations - may need the editor itself to manage this\r\n        for (var _i = 0, bothStyles_1 = bothStyles; _i < bothStyles_1.length; _i++) {\r\n            var styles = bothStyles_1[_i];\r\n            for (var _a = 0, stylesUsed_1 = stylesUsed; _a < stylesUsed_1.length; _a++) {\r\n                var style = stylesUsed_1[_a];\r\n                if (!(style in styles)) {\r\n                    styles[style] = computedStyle[style];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Animator.prototype.getAllStylesUsed = function (animation) {\r\n        var properties = [];\r\n        for (var _i = 0, _a = animation.steps; _i < _a.length; _i++) {\r\n            var step = _a[_i];\r\n            for (var key in step.styles) {\r\n                if (properties.indexOf(key) === -1) {\r\n                    properties.push(key);\r\n                }\r\n            }\r\n        }\r\n        return properties;\r\n    };\r\n    Animator.prototype.triggerAnimation = function (animation) {\r\n        var _this = this;\r\n        // TODO: do for ALL elements\r\n        var elements = Array.prototype.slice.call(document.getElementsByClassName(animation.elementId || animation.id || ''));\r\n        if (!elements.length) {\r\n            this.warnElementNotPresent(animation.elementId || animation.id || '');\r\n            return;\r\n        }\r\n        Array.from(elements).forEach(function (element) {\r\n            _this.augmentAnimation(animation, element);\r\n            // TODO: do this properly, may have other animations of different properties\r\n            // TODO: only override the properties\r\n            // TODO: if there is an entrance and hover animation, the transition duration will get effed\r\n            // element.setAttribute('style', '');\r\n            // const styledUsed = this.getAllStylesUsed(animation);\r\n            element.style.transition = 'none';\r\n            element.style.transitionDelay = '0';\r\n            assign(element.style, animation.steps[0].styles);\r\n            // TODO: queue/batch these timeouts\r\n            // TODO: only include properties explicitly set in the animation\r\n            // using Object.keys(styles)\r\n            setTimeout(function () {\r\n                element.style.transition = \"all \".concat(animation.duration, \"s \").concat(camelCaseToKebabCase(animation.easing));\r\n                if (animation.delay) {\r\n                    element.style.transitionDelay = animation.delay + 's';\r\n                }\r\n                assign(element.style, animation.steps[1].styles);\r\n                // TODO: maybe remove/reset transitoin property after animation duration\r\n                // TODO: queue timers\r\n                setTimeout(function () {\r\n                    // TODO: what if has other transition (reset back to what it was)\r\n                    element.style.transition = '';\r\n                    element.style.transitionDelay = '';\r\n                }, (animation.delay || 0) * 1000 + animation.duration * 1000 + 100);\r\n            });\r\n        });\r\n    };\r\n    Animator.prototype.bindHoverAnimation = function (animation) {\r\n        var _this = this;\r\n        // TODO: is it multiple binding when editing...?\r\n        // TODO: unbind on element remove\r\n        // TODO: apply to ALL elements\r\n        var elements = Array.prototype.slice.call(document.getElementsByClassName(animation.elementId || animation.id || ''));\r\n        if (!elements.length) {\r\n            this.warnElementNotPresent(animation.elementId || animation.id || '');\r\n            return;\r\n        }\r\n        Array.from(elements).forEach(function (element) {\r\n            _this.augmentAnimation(animation, element);\r\n            var defaultState = animation.steps[0].styles;\r\n            var hoverState = animation.steps[1].styles;\r\n            function attachDefaultState() {\r\n                assign(element.style, defaultState);\r\n            }\r\n            function attachHoverState() {\r\n                assign(element.style, hoverState);\r\n            }\r\n            attachDefaultState();\r\n            element.addEventListener('mouseenter', attachHoverState);\r\n            element.addEventListener('mouseleave', attachDefaultState);\r\n            // TODO: queue/batch these timeouts\r\n            setTimeout(function () {\r\n                element.style.transition = \"all \".concat(animation.duration, \"s \").concat(camelCaseToKebabCase(animation.easing));\r\n                if (animation.delay) {\r\n                    element.style.transitionDelay = animation.delay + 's';\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // TODO: unbind on element remove\r\n    Animator.prototype.bindScrollInViewAnimation = function (animation) {\r\n        var _this = this;\r\n        // TODO: apply to ALL matching elements\r\n        var elements = Array.prototype.slice.call(document.getElementsByClassName(animation.elementId || animation.id || ''));\r\n        if (!elements.length) {\r\n            this.warnElementNotPresent(animation.elementId || animation.id || '');\r\n            return;\r\n        }\r\n        // TODO: if server side rendered and scrolled into view don't animate...\r\n        Array.from(elements).forEach(function (element) {\r\n            _this.augmentAnimation(animation, element);\r\n            var triggered = false;\r\n            var pendingAnimation = false;\r\n            function immediateOnScroll() {\r\n                if (!triggered && isScrolledIntoView(element)) {\r\n                    triggered = true;\r\n                    pendingAnimation = true;\r\n                    setTimeout(function () {\r\n                        assign(element.style, animation.steps[1].styles);\r\n                        if (!animation.repeat) {\r\n                            document.removeEventListener('scroll', onScroll);\r\n                        }\r\n                        setTimeout(function () {\r\n                            pendingAnimation = false;\r\n                            if (!animation.repeat) {\r\n                                element.style.transition = '';\r\n                                element.style.transitionDelay = '';\r\n                            }\r\n                        }, (animation.duration + (animation.delay || 0)) * 1000 + 100);\r\n                    });\r\n                }\r\n                else if (animation.repeat &&\r\n                    triggered &&\r\n                    !pendingAnimation &&\r\n                    !isScrolledIntoView(element)) {\r\n                    // we want to repeat the animation every time the the element is out of view and back again\r\n                    triggered = false;\r\n                    assign(element.style, animation.steps[0].styles);\r\n                }\r\n            }\r\n            // TODO: roll all of these in one for more efficiency of checking all the rects\r\n            var onScroll = throttle(immediateOnScroll, 200, { leading: false });\r\n            // TODO: fully in view or partially\r\n            function isScrolledIntoView(elem) {\r\n                var rect = elem.getBoundingClientRect();\r\n                var windowHeight = window.innerHeight;\r\n                var thresholdPercent = (animation.thresholdPercent || 0) / 100;\r\n                var threshold = thresholdPercent * windowHeight;\r\n                // TODO: partial in view? or what if element is larger than screen itself\r\n                return (rect.bottom > threshold && rect.top < windowHeight - threshold // Element is peeking top or bottom\r\n                // (rect.top > 0 && rect.bottom < window.innerHeight) || // element fits within the screen and is fully on screen (not hanging off at all)\r\n                // (rect.top < 0 && rect.bottom > window.innerHeight) // element is larger than the screen and hangs over the top and bottom\r\n                );\r\n            }\r\n            var defaultState = animation.steps[0].styles;\r\n            function attachDefaultState() {\r\n                assign(element.style, defaultState);\r\n            }\r\n            attachDefaultState();\r\n            // TODO: queue/batch these timeouts!\r\n            setTimeout(function () {\r\n                element.style.transition = \"all \".concat(animation.duration, \"s \").concat(camelCaseToKebabCase(animation.easing));\r\n                if (animation.delay) {\r\n                    element.style.transitionDelay = animation.delay + 's';\r\n                }\r\n            });\r\n            // TODO: one listener for everything\r\n            document.addEventListener('scroll', onScroll, { capture: true, passive: true });\r\n            // Do an initial check\r\n            immediateOnScroll();\r\n        });\r\n    };\r\n    return Animator;\r\n}());\n\n/**\r\n * Only gets one level up from hostname\r\n * wwww.example.com -> example.com\r\n * www.example.co.uk -> example.co.uk\r\n */\r\nfunction getTopLevelDomain(host) {\r\n    var parts = host.split('.');\r\n    if (parts.length > 2) {\r\n        return parts.slice(1).join('.');\r\n    }\r\n    return host;\r\n}\n\n/**\r\n * RegExp to match field-content in RFC 7230 sec 3.2\r\n *\r\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\r\n * field-vchar   = VCHAR / obs-text\r\n * obs-text      = %x80-FF\r\n */\r\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\r\nvar Cookies = /** @class */ (function () {\r\n    function Cookies(request, response) {\r\n        this.request = request;\r\n        this.response = response;\r\n    }\r\n    Cookies.prototype.get = function (name) {\r\n        var header = this.request.headers['cookie'];\r\n        if (!header) {\r\n            return;\r\n        }\r\n        var match = header.match(getPattern(name));\r\n        if (!match) {\r\n            return;\r\n        }\r\n        var value = match[1];\r\n        return value;\r\n    };\r\n    Cookies.prototype.set = function (name, value, opts) {\r\n        var res = this.response;\r\n        var req = this.request;\r\n        var headers = res.getHeader('Set-Cookie') || [];\r\n        // TODO: just make this always true\r\n        var secure = this.secure !== undefined\r\n            ? !!this.secure\r\n            : req.protocol === 'https' || req.connection.encrypted;\r\n        var cookie = new Cookie(name, value, opts);\r\n        if (typeof headers === 'string') {\r\n            headers = [headers];\r\n        }\r\n        if (!secure && opts && opts.secure) {\r\n            throw new Error('Cannot send secure cookie over unencrypted connection');\r\n        }\r\n        cookie.secure = secure;\r\n        if (opts && 'secure' in opts) {\r\n            cookie.secure = !!opts.secure;\r\n        }\r\n        cookie.domain = req.headers.host && getTopLevelDomain(req.headers.host);\r\n        pushCookie(headers, cookie);\r\n        var setHeader = res.setHeader;\r\n        setHeader.call(res, 'Set-Cookie', headers);\r\n        return this;\r\n    };\r\n    return Cookies;\r\n}());\r\nvar Cookie = /** @class */ (function () {\r\n    function Cookie(name, value, attrs) {\r\n        this.path = '/';\r\n        this.domain = undefined;\r\n        this.httpOnly = true;\r\n        this.sameSite = false;\r\n        this.secure = false;\r\n        this.overwrite = false;\r\n        this.name = '';\r\n        this.value = '';\r\n        if (!fieldContentRegExp.test(name)) {\r\n            throw new TypeError('argument name is invalid');\r\n        }\r\n        if (value && !fieldContentRegExp.test(value)) {\r\n            throw new TypeError('argument value is invalid');\r\n        }\r\n        if (!value) {\r\n            this.expires = new Date(0);\r\n        }\r\n        this.name = name;\r\n        this.value = value || '';\r\n        if (attrs.expires) {\r\n            this.expires = attrs.expires;\r\n        }\r\n        if (attrs.secure) {\r\n            this.secure = attrs.secure;\r\n        }\r\n    }\r\n    Cookie.prototype.toString = function () {\r\n        return \"\".concat(this.name, \"=\").concat(this.value);\r\n    };\r\n    Cookie.prototype.toHeader = function () {\r\n        var header = this.toString();\r\n        if (this.maxAge) {\r\n            this.expires = new Date(Date.now() + this.maxAge);\r\n        }\r\n        if (this.path) {\r\n            header += \"; path=\".concat(this.path);\r\n        }\r\n        if (this.expires) {\r\n            header += \"; expires=\".concat(this.expires.toUTCString());\r\n        }\r\n        if (this.domain) {\r\n            header += \"; domain=\".concat(this.domain);\r\n        }\r\n        // TODO: samesite=none by default (?)\r\n        header += \"; SameSite=\".concat(this.sameSite === true ? 'strict' : 'None');\r\n        // TODO: On by default\r\n        if (this.secure) {\r\n            header += '; secure';\r\n        }\r\n        if (this.httpOnly) {\r\n            header += '; httponly';\r\n        }\r\n        return header;\r\n    };\r\n    return Cookie;\r\n}());\r\nfunction getPattern(name) {\r\n    return new RegExp(\"(?:^|;) *\".concat(name.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&'), \"=([^;]*)\"));\r\n}\r\nfunction pushCookie(headers, cookie) {\r\n    if (cookie.overwrite) {\r\n        for (var i = headers.length - 1; i >= 0; i--) {\r\n            if (headers[i].indexOf(\"\".concat(cookie.name, \"=\")) === 0) {\r\n                headers.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n    headers.push(cookie.toHeader());\r\n}\n\nfunction omit(obj) {\r\n    var values = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        values[_i - 1] = arguments[_i];\r\n    }\r\n    var newObject = Object.assign({}, obj);\r\n    for (var _a = 0, values_1 = values; _a < values_1.length; _a++) {\r\n        var key = values_1[_a];\r\n        delete newObject[key];\r\n    }\r\n    return newObject;\r\n}\n\n/**\r\n * @credit https://stackoverflow.com/a/2117523\r\n */\r\nfunction uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n}\r\n/**\r\n * Slightly cleaner and smaller UUIDs\r\n */\r\nfunction uuid() {\r\n    return uuidv4().replace(/-/g, '');\r\n}\n\nfunction emptyUrl() {\r\n    return {\r\n        query: null,\r\n        port: null,\r\n        auth: null,\r\n        hash: null,\r\n        host: null,\r\n        hostname: null,\r\n        href: null,\r\n        path: null,\r\n        pathname: null,\r\n        protocol: null,\r\n        search: null,\r\n        slashes: null,\r\n    };\r\n}\r\n// Replacement for `url.parse` using `URL` global object that works with relative paths.\r\n// Assumptions: this function operates in a NodeJS environment.\r\nfunction parse(url) {\r\n    var out = emptyUrl();\r\n    var u;\r\n    var pathOnly = url === '' || url[0] === '/';\r\n    if (pathOnly) {\r\n        u = new URL(url, 'http://0.0.0.0/');\r\n        out.href = u.href;\r\n        out.href = out.href.slice(14); // remove 'http://0.0.0.0/'\r\n    }\r\n    else {\r\n        u = new URL(url);\r\n        out.href = u.href;\r\n        out.port = u.port === '' ? null : u.port;\r\n        out.hash = u.hash === '' ? null : u.hash;\r\n        out.host = u.host;\r\n        out.hostname = u.hostname;\r\n        out.href = u.href;\r\n        out.pathname = u.pathname;\r\n        out.protocol = u.protocol;\r\n        out.slashes = url[u.protocol.length] === '/'; // check if the mimetype is proceeded by a slash\r\n    }\r\n    out.search = u.search;\r\n    out.query = u.search.slice(1); // remove '?'\r\n    out.path = \"\".concat(u.pathname).concat(u.search);\r\n    out.pathname = u.pathname;\r\n    return out;\r\n}\n\n/**\r\n * Safe conversion to error type. Intended to be used in catch blocks where the\r\n *  value is not guaranteed to be an error.\r\n *\r\n *  @example\r\n *  try {\r\n *    throw new Error('Something went wrong')\r\n *  }\r\n *  catch (err: unknown) {\r\n *    const error: Error = toError(err)\r\n *  }\r\n */\r\nfunction toError(err) {\r\n    if (err instanceof Error)\r\n        return err;\r\n    return new Error(String(err));\r\n}\n\nvar DEFAULT_API_VERSION = 'v3';\n\nfunction datePlusMinutes(minutes) {\r\n    if (minutes === void 0) { minutes = 30; }\r\n    return new Date(Date.now() + minutes * 60000);\r\n}\r\nvar isPositiveNumber = function (thing) {\r\n    return typeof thing === 'number' && !isNaN(thing) && thing >= 0;\r\n};\r\nvar isReactNative = typeof navigator === 'object' && navigator.product === 'ReactNative';\r\nvar validEnvList = [\r\n    'production',\r\n    'qa',\r\n    'test',\r\n    'development',\r\n    'dev',\r\n    'cdn-qa',\r\n    'cloud',\r\n    'fast',\r\n    'cdn2',\r\n    'cdn-prod',\r\n];\r\nfunction getQueryParam(url, variable) {\r\n    var query = url.split('?')[1] || '';\r\n    var vars = query.split('&');\r\n    for (var i = 0; i < vars.length; i++) {\r\n        var pair = vars[i].split('=');\r\n        if (decodeURIComponent(pair[0]) === variable) {\r\n            return decodeURIComponent(pair[1]);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nvar urlParser = {\r\n    parse: function (url) {\r\n        var el = document.createElement('a');\r\n        el.href = url;\r\n        var out = {};\r\n        var props = [\r\n            'username',\r\n            'password',\r\n            'host',\r\n            'hostname',\r\n            'port',\r\n            'protocol',\r\n            'origin',\r\n            'pathname',\r\n            'search',\r\n            'hash',\r\n        ];\r\n        for (var _i = 0, props_1 = props; _i < props_1.length; _i++) {\r\n            var prop = props_1[_i];\r\n            out[prop] = el[prop];\r\n        }\r\n        // IE 11 pathname handling workaround\r\n        // (IE omits preceeding '/', unlike other browsers)\r\n        if ((out.pathname || out.pathname === '') &&\r\n            typeof out.pathname === 'string' &&\r\n            out.pathname.indexOf('/') !== 0) {\r\n            out.pathname = '/' + out.pathname;\r\n        }\r\n        return out;\r\n    },\r\n};\r\nvar parse$1 = isReactNative\r\n    ? function () { return emptyUrl(); }\r\n    : typeof window === 'object'\r\n        ? urlParser.parse\r\n        : parse;\r\nfunction setCookie(name$$1, value, expires) {\r\n    try {\r\n        var expiresString = '';\r\n        // TODO: need to know if secure server side\r\n        if (expires) {\r\n            expiresString = '; expires=' + expires.toUTCString();\r\n        }\r\n        var secure = isBrowser ? location.protocol === 'https:' : true;\r\n        document.cookie =\r\n            name$$1 +\r\n                '=' +\r\n                (value || '') +\r\n                expiresString +\r\n                '; path=/' +\r\n                \"; domain=\".concat(getTopLevelDomain(location.hostname)) +\r\n                (secure ? ';secure ; SameSite=None' : '');\r\n    }\r\n    catch (err) {\r\n        console.warn('Could not set cookie', err);\r\n    }\r\n}\r\nfunction getCookie(name$$1) {\r\n    try {\r\n        return (decodeURIComponent(document.cookie.replace(new RegExp('(?:(?:^|.*;)\\\\s*' +\r\n            encodeURIComponent(name$$1).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') +\r\n            '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'), '$1')) || null);\r\n    }\r\n    catch (err) {\r\n        console.warn('Could not get cookie', err);\r\n    }\r\n}\r\nfunction size(object) {\r\n    return Object.keys(object).length;\r\n}\r\nfunction find(target, callback) {\r\n    var list = target;\r\n    // Makes sures is always has an positive integer as length.\r\n    var length = list.length >>> 0;\r\n    var thisArg = arguments[1];\r\n    for (var i = 0; i < length; i++) {\r\n        var element = list[i];\r\n        if (callback.call(thisArg, element, i, list)) {\r\n            return element;\r\n        }\r\n    }\r\n}\r\nvar sessionStorageKey = 'builderSessionId';\r\nvar localStorageKey = 'builderVisitorId';\r\nvar isBrowser = typeof window !== 'undefined' && !isReactNative;\r\nvar isIframe = isBrowser && window.top !== window.self;\r\nfunction BuilderComponent(info) {\r\n    if (info === void 0) { info = {}; }\r\n    return Builder.Component(info);\r\n}\r\nvar Builder = /** @class */ (function () {\r\n    function Builder(apiKey, request, response, forceNewInstance, authToken, apiVersion) {\r\n        if (apiKey === void 0) { apiKey = null; }\r\n        if (forceNewInstance === void 0) { forceNewInstance = false; }\r\n        if (authToken === void 0) { authToken = null; }\r\n        var _this = this;\r\n        this.request = request;\r\n        this.response = response;\r\n        this.eventsQueue = [];\r\n        this.throttledClearEventsQueue = throttle(function () {\r\n            _this.processEventsQueue();\r\n            // Extend the session cookie\r\n            _this.setCookie(sessionStorageKey, _this.sessionId, datePlusMinutes(30));\r\n        }, 5);\r\n        this.env = 'production';\r\n        this.sessionId = this.getSessionId();\r\n        this.targetContent = true;\r\n        this.contentPerRequest = 1;\r\n        // TODO: make array or function\r\n        this.allowCustomFonts = true;\r\n        this.cookies = null;\r\n        // TODO: api options object\r\n        this.cachebust = false;\r\n        this.overrideParams = '';\r\n        this.noCache = false;\r\n        this.preview = false;\r\n        this.apiVersion$ = new BehaviorSubject(undefined);\r\n        this.canTrack$ = new BehaviorSubject(!this.browserTrackingDisabled);\r\n        this.apiKey$ = new BehaviorSubject(null);\r\n        this.authToken$ = new BehaviorSubject(null);\r\n        this.userAttributesChanged = new BehaviorSubject(null);\r\n        this.editingMode$ = new BehaviorSubject(isIframe);\r\n        // TODO: decorator to do this stuff with the get/set (how do with typing too? compiler?)\r\n        this.editingModel$ = new BehaviorSubject(null);\r\n        this.userAgent = (typeof navigator === 'object' && navigator.userAgent) || '';\r\n        this.trackingHooks = [];\r\n        // Set this to control the userId\r\n        // TODO: allow changing it mid session and updating existing data to be associated\r\n        // e.g. for when a user navigates and then logs in\r\n        this.visitorId = this.getVisitorId();\r\n        this.autoTrack = !Builder.isBrowser\r\n            ? false\r\n            : !this.isDevelopmentEnv &&\r\n                !(Builder.isBrowser && location.search.indexOf('builder.preview=') !== -1);\r\n        this.trackingUserAttributes = {};\r\n        this.blockContentLoading = '';\r\n        this.observersByKey = {};\r\n        this.noEditorUpdates = {};\r\n        this.overrides = {};\r\n        this.queryOptions = {};\r\n        this.getContentQueue = null;\r\n        this.priorContentQueue = null;\r\n        this.testCookiePrefix = 'builder.tests';\r\n        this.cookieQueue = [];\r\n        // TODO: use a window variable for this perhaps, e.g. bc webcomponents may be loading builder twice\r\n        // with it's and react (use rollup build to fix)\r\n        if (Builder.isBrowser && !forceNewInstance && Builder.singletonInstance) {\r\n            return Builder.singletonInstance;\r\n        }\r\n        if (this.request && this.response) {\r\n            this.setUserAgent(this.request.headers['user-agent'] || '');\r\n            this.cookies = new Cookies(this.request, this.response);\r\n        }\r\n        if (apiKey) {\r\n            this.apiKey = apiKey;\r\n        }\r\n        if (apiVersion) {\r\n            this.apiVersion = apiVersion;\r\n        }\r\n        if (authToken) {\r\n            this.authToken = authToken;\r\n        }\r\n        if (isBrowser) {\r\n            this.bindMessageListeners();\r\n            if (Builder.isEditing) {\r\n                parent.postMessage({\r\n                    type: 'builder.animatorOptions',\r\n                    data: {\r\n                        options: {\r\n                            version: 2,\r\n                        },\r\n                    },\r\n                }, '*');\r\n            }\r\n            // TODO: postmessage to parent the builder info for every package\r\n            // type: 'builder.sdk', data: { name: '@builder.io/react', version: '0.1.23' }\r\n            // (window as any).BUILDER_VERSION = Builder.VERSION;\r\n            // Ensure always one Builder global singleton\r\n            // TODO: some people won't want this, e.g. rakuten\r\n            // Maybe hide this behind symbol or on document, etc\r\n            // if ((window as any).Builder) {\r\n            //   Builder.components = (window as any).Builder.components;\r\n            // } else {\r\n            //   (window as any).Builder = Builder;\r\n            // }\r\n        }\r\n        if (isIframe) {\r\n            this.messageFrameLoaded();\r\n        }\r\n        // TODO: on destroy clear subscription\r\n        this.canTrack$.subscribe(function (value) {\r\n            if (value) {\r\n                if (typeof sessionStorage !== 'undefined') {\r\n                    try {\r\n                        if (!sessionStorage.getItem(sessionStorageKey)) {\r\n                            sessionStorage.setItem(sessionStorageKey, _this.sessionId);\r\n                        }\r\n                    }\r\n                    catch (err) {\r\n                        console.debug('Session storage error', err);\r\n                    }\r\n                }\r\n                if (_this.eventsQueue.length) {\r\n                    _this.throttledClearEventsQueue();\r\n                }\r\n                if (_this.cookieQueue.length) {\r\n                    _this.cookieQueue.forEach(function (item) {\r\n                        _this.setCookie(item[0], item[1]);\r\n                    });\r\n                    _this.cookieQueue.length = 0;\r\n                }\r\n            }\r\n        });\r\n        if (isBrowser) {\r\n            // TODO: defer so subclass constructor runs and injects location service\r\n            this.setTestsFromUrl();\r\n            // TODO: do this on every request send?\r\n            this.getOverridesFromQueryString();\r\n        }\r\n    }\r\n    Builder.register = function (type, info) {\r\n        // TODO: all must have name and can't conflict?\r\n        var typeList = this.registry[type];\r\n        if (!typeList) {\r\n            typeList = this.registry[type] = [];\r\n        }\r\n        typeList.push(info);\r\n        if (Builder.isBrowser) {\r\n            var message = {\r\n                type: 'builder.register',\r\n                data: {\r\n                    type: type,\r\n                    info: info,\r\n                },\r\n            };\r\n            try {\r\n                parent.postMessage(message, '*');\r\n                if (parent !== window) {\r\n                    window.postMessage(message, '*');\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.debug('Could not postmessage', err);\r\n            }\r\n        }\r\n        this.registryChange.next(this.registry);\r\n    };\r\n    Builder.registerEditor = function (info) {\r\n        if (Builder.isBrowser) {\r\n            window.postMessage({\r\n                type: 'builder.registerEditor',\r\n                data: omit(info, 'component'),\r\n            }, '*');\r\n            var hostname = location.hostname;\r\n            if (!Builder.isTrustedHost(hostname)) {\r\n                console.error('Builder.registerEditor() called in the wrong environment! You cannot load custom editors from your app, they must be loaded through the Builder.io app itself. Follow the readme here for more details: https://github.com/builderio/builder/tree/master/plugins/cloudinary or contact chat us in our Spectrum community for help: https://spectrum.chat/builder');\r\n            }\r\n        }\r\n        this.editors.push(info);\r\n    };\r\n    Builder.registerPlugin = function (info) {\r\n        this.plugins.push(info);\r\n    };\r\n    Builder.registerAction = function (action) {\r\n        this.actions.push(action);\r\n    };\r\n    Builder.registerTrustedHost = function (host) {\r\n        this.trustedHosts.push(host);\r\n    };\r\n    /**\r\n     * @param context @type {import('isolated-vm').Context}\r\n     * Use this function to control the execution context of custom code on the server.\r\n     * const ivm = require('isolated-vm');\r\n     * const isolate = new ivm.Isolate({ memoryLimit: 128 });\r\n     * const context = isolate.createContextSync();\r\n     * Builder.setServerContext(context);\r\n     */\r\n    Builder.setServerContext = function (context) {\r\n        this.serverContext = context;\r\n    };\r\n    Builder.isTrustedHost = function (hostname) {\r\n        return (this.trustedHosts.findIndex(function (trustedHost) { return trustedHost === hostname || hostname.endsWith(\".\".concat(trustedHost)); }) > -1);\r\n    };\r\n    Builder.runAction = function (action) {\r\n        // TODO\r\n        var actionObject = typeof action === 'string' ? find(this.actions, function (item) { return item.name === action; }) : action;\r\n        if (!actionObject) {\r\n            throw new Error(\"Action not found: \".concat(action));\r\n        }\r\n    };\r\n    Builder.fields = function (name$$1, fields) {\r\n        var _a;\r\n        (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({\r\n            type: 'builder.fields',\r\n            data: { name: name$$1, fields: fields },\r\n        }, '*');\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * @hidden\r\n     *\r\n     * Use Builder.register('editor.settings', {}) instead.\r\n     */\r\n    Builder.set = function (settings) {\r\n        Builder.register('editor.settings', settings);\r\n    };\r\n    Builder.import = function (packageName) {\r\n        if (!Builder.isBrowser) {\r\n            // TODO: server side support *maybe*\r\n            console.warn('Builder.import used on the server - this should only be used in the browser');\r\n            return;\r\n        }\r\n        var System = window.System;\r\n        if (!System) {\r\n            console.warn('System.js not available. Please include System.js when using Builder.import');\r\n            return;\r\n        }\r\n        return System.import(\"https://cdn.builder.io/systemjs/\".concat(packageName));\r\n    };\r\n    Object.defineProperty(Builder, \"editingPage\", {\r\n        // useCdnApi = false;\r\n        get: function () {\r\n            return this._editingPage;\r\n        },\r\n        set: function (editingPage) {\r\n            this._editingPage = editingPage;\r\n            if (isBrowser && isIframe) {\r\n                if (editingPage) {\r\n                    document.body.classList.add('builder-editing-page');\r\n                }\r\n                else {\r\n                    document.body.classList.remove('builder-editing-page');\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prepareComponentSpecToSend = function (spec) {\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, spec), (spec.inputs && {\r\n            inputs: spec.inputs.map(function (input) {\r\n                var _a;\r\n                // TODO: do for nexted fields too\r\n                // TODO: probably just convert all functions, not just\r\n                // TODO: put this in input hooks: { onChange: ..., showIf: ... }\r\n                var keysToConvertFnToString = ['onChange', 'showIf'];\r\n                for (var _i = 0, keysToConvertFnToString_1 = keysToConvertFnToString; _i < keysToConvertFnToString_1.length; _i++) {\r\n                    var key = keysToConvertFnToString_1[_i];\r\n                    if (input[key] && typeof input[key] === 'function') {\r\n                        var fn = input[key];\r\n                        input = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input), (_a = {}, _a[key] = \"return (\".concat(fn.toString(), \").apply(this, arguments)\"), _a));\r\n                    }\r\n                }\r\n                return input;\r\n            }),\r\n        })), { hooks: Object.keys(spec.hooks || {}).reduce(function (memo, key) {\r\n                var value = spec.hooks && spec.hooks[key];\r\n                if (!value) {\r\n                    return memo;\r\n                }\r\n                if (typeof value === 'string') {\r\n                    memo[key] = value;\r\n                }\r\n                else {\r\n                    memo[key] = \"return (\".concat(value.toString(), \").apply(this, arguments)\");\r\n                }\r\n                return memo;\r\n            }, {}), class: undefined });\r\n    };\r\n    Builder.registerBlock = function (component, options) {\r\n        this.registerComponent(component, options);\r\n    };\r\n    Builder.registerComponent = function (component, options) {\r\n        var _a;\r\n        var spec = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ class: component }, component.builderOptions), options);\r\n        this.addComponent(spec);\r\n        var editable = options.models && this.singletonInstance.editingModel\r\n            ? isBrowser && options.models.includes(this.singletonInstance.editingModel)\r\n            : isBrowser;\r\n        if (editable) {\r\n            var sendSpec = this.prepareComponentSpecToSend(spec);\r\n            (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({\r\n                type: 'builder.registerComponent',\r\n                data: sendSpec,\r\n            }, '*');\r\n        }\r\n    };\r\n    Builder.addComponent = function (component) {\r\n        var current = find(this.components, function (item) { return item.name === component.name; });\r\n        if (current) {\r\n            // FIXME: why does sometimes we get an extra post without class - probably\r\n            // from postMessage handler wrong in some place\r\n            if (current.class && !component.class) {\r\n                return;\r\n            }\r\n            this.components.splice(this.components.indexOf(current), 1, component);\r\n        }\r\n        else {\r\n            this.components.push(component);\r\n        }\r\n    };\r\n    // TODO: style guide, etc off this system as well?\r\n    Builder.component = function (info) {\r\n        var _this = this;\r\n        if (info === void 0) { info = {}; }\r\n        return function (component) {\r\n            var _a;\r\n            var spec = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, info), { class: component });\r\n            if (!spec.name) {\r\n                spec.name = component.name;\r\n            }\r\n            _this.addComponent(spec);\r\n            var sendSpec = _this.prepareComponentSpecToSend(spec);\r\n            // TODO: serialize component name and inputs\r\n            if (isBrowser) {\r\n                (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({\r\n                    type: 'builder.registerComponent',\r\n                    data: sendSpec,\r\n                }, '*');\r\n            }\r\n            return component;\r\n        };\r\n    };\r\n    Object.defineProperty(Builder, \"Component\", {\r\n        get: function () {\r\n            return this.component;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prototype.processEventsQueue = function () {\r\n        if (!this.eventsQueue.length) {\r\n            return;\r\n        }\r\n        var events = this.eventsQueue;\r\n        this.eventsQueue = [];\r\n        var fullUserAttributes = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, Builder.overrideUserAttributes), this.trackingUserAttributes);\r\n        for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\r\n            var event_1 = events_1[_i];\r\n            if (!event_1.data.metadata) {\r\n                event_1.data.metadata = {};\r\n            }\r\n            if (!event_1.data.metadata.user) {\r\n                event_1.data.metadata.user = {};\r\n            }\r\n            Object.assign(event_1.data.metadata.user, fullUserAttributes, event_1.data.metadata.user);\r\n        }\r\n        var host = this.host;\r\n        getFetch()(\"\".concat(host, \"/api/v1/track\"), {\r\n            method: 'POST',\r\n            body: JSON.stringify({ events: events }),\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n            mode: 'cors',\r\n        }).catch(function () {\r\n            // Not the end of the world\r\n        });\r\n    };\r\n    Object.defineProperty(Builder.prototype, \"browserTrackingDisabled\", {\r\n        get: function () {\r\n            return Builder.isBrowser && Boolean(window.builderNoTrack || !navigator.cookieEnabled);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Builder.prototype, \"canTrack\", {\r\n        get: function () {\r\n            return this.canTrack$.value;\r\n        },\r\n        set: function (canTrack) {\r\n            if (this.canTrack !== canTrack) {\r\n                this.canTrack$.next(canTrack);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Builder.prototype, \"apiVersion\", {\r\n        get: function () {\r\n            return this.apiVersion$.value;\r\n        },\r\n        set: function (apiVersion) {\r\n            if (this.apiVersion !== apiVersion) {\r\n                this.apiVersion$.next(apiVersion);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Builder.prototype, \"editingMode\", {\r\n        get: function () {\r\n            return this.editingMode$.value;\r\n        },\r\n        set: function (value) {\r\n            if (value !== this.editingMode) {\r\n                this.editingMode$.next(value);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Builder.prototype, \"editingModel\", {\r\n        get: function () {\r\n            return this.editingModel$.value;\r\n        },\r\n        set: function (value) {\r\n            if (value !== this.editingModel) {\r\n                this.editingModel$.next(value);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prototype.findParentElement = function (target, callback, checkElement) {\r\n        if (checkElement === void 0) { checkElement = true; }\r\n        if (!(target instanceof HTMLElement)) {\r\n            return null;\r\n        }\r\n        var parent = checkElement ? target : target.parentElement;\r\n        do {\r\n            if (!parent) {\r\n                return null;\r\n            }\r\n            var matches = callback(parent);\r\n            if (matches) {\r\n                return parent;\r\n            }\r\n        } while ((parent = parent.parentElement));\r\n        return null;\r\n    };\r\n    Builder.prototype.findBuilderParent = function (target) {\r\n        return this.findParentElement(target, function (el) {\r\n            var id = el.getAttribute('builder-id') || el.id;\r\n            return Boolean(id && id.indexOf('builder-') === 0);\r\n        });\r\n    };\r\n    Builder.prototype.setUserAgent = function (userAgent) {\r\n        this.userAgent = userAgent || '';\r\n    };\r\n    /**\r\n     * Set a hook to modify events being tracked from builder, such as impressions and clicks\r\n     *\r\n     * For example, to track the model ID of each event associated with content for querying\r\n     * by mode, you can do\r\n     *\r\n     *    builder.setTrackingHook((event, context) => {\r\n     *      if (context.content) {\r\n     *        event.data.metadata.modelId = context.content.modelId\r\n     *      }\r\n     *    })\r\n     */\r\n    Builder.prototype.setTrackingHook = function (hook) {\r\n        this.trackingHooks.push(hook);\r\n    };\r\n    Builder.prototype.track = function (eventName, properties, context) {\r\n        if (properties === void 0) { properties = {}; }\r\n        // TODO: queue up track requests and fire them off when canTrack set to true - otherwise may get lots of clicks with no impressions\r\n        if (isIframe || !isBrowser || Builder.isPreviewing) {\r\n            return;\r\n        }\r\n        var apiKey = this.apiKey;\r\n        if (!apiKey) {\r\n            console.error('Builder integration error: Looks like the Builder SDK has not been initialized properly (your API key has not been set). Make sure you are calling `builder.init(\"«YOUR-API-KEY»\");` as early as possible in your application\\'s code.');\r\n            return;\r\n        }\r\n        var eventData = JSON.parse(JSON.stringify({\r\n            type: eventName,\r\n            data: (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, omit(properties, 'meta')), { metadata: (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ sdkVersion: Builder.VERSION, url: location.href }, properties.meta), properties.metadata), ownerId: apiKey, userAttributes: this.getUserAttributes(), sessionId: this.sessionId, visitorId: this.visitorId }),\r\n        }));\r\n        for (var _i = 0, _a = this.trackingHooks; _i < _a.length; _i++) {\r\n            var hook = _a[_i];\r\n            var returnValue = hook(eventData, context || {});\r\n            if (returnValue) {\r\n                eventData = returnValue;\r\n            }\r\n        }\r\n        // batch events\r\n        this.eventsQueue.push(eventData);\r\n        if (this.canTrack) {\r\n            this.throttledClearEventsQueue();\r\n        }\r\n    };\r\n    Builder.prototype.getSessionId = function () {\r\n        var _this = this;\r\n        var sessionId = null;\r\n        try {\r\n            if (Builder.isBrowser && typeof sessionStorage !== 'undefined') {\r\n                sessionId = this.getCookie(sessionStorageKey);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.debug('Session storage error', err);\r\n            // It's ok\r\n        }\r\n        if (!sessionId) {\r\n            sessionId = uuid();\r\n        }\r\n        // Give the app a second to start up and set canTrack to false if needed\r\n        if (Builder.isBrowser) {\r\n            setTimeout(function () {\r\n                try {\r\n                    if (_this.canTrack) {\r\n                        _this.setCookie(sessionStorageKey, sessionId, datePlusMinutes(30));\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.debug('Cookie setting error', err);\r\n                }\r\n            });\r\n        }\r\n        return sessionId;\r\n    };\r\n    Builder.prototype.getVisitorId = function () {\r\n        var _this = this;\r\n        if (this.visitorId) {\r\n            return this.visitorId;\r\n        }\r\n        var visitorId = null;\r\n        try {\r\n            if (Builder.isBrowser && typeof localStorage !== 'undefined') {\r\n                // TODO: cookie instead?\r\n                visitorId = localStorage.getItem(localStorageKey);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.debug('Local storage error', err);\r\n            // It's ok\r\n        }\r\n        if (!visitorId) {\r\n            visitorId = uuid();\r\n        }\r\n        this.visitorId = visitorId;\r\n        // Give the app a second to start up and set canTrack to false if needed\r\n        if (Builder.isBrowser) {\r\n            setTimeout(function () {\r\n                try {\r\n                    if (_this.canTrack && typeof localStorage !== 'undefined' && visitorId) {\r\n                        localStorage.setItem(localStorageKey, visitorId);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.debug('Session storage error', err);\r\n                }\r\n            });\r\n        }\r\n        return visitorId;\r\n    };\r\n    Builder.prototype.trackImpression = function (contentId, variationId, properties, context) {\r\n        if (isIframe || !isBrowser || Builder.isPreviewing) {\r\n            return;\r\n        }\r\n        // TODO: use this.track method\r\n        this.track('impression', {\r\n            contentId: contentId,\r\n            variationId: variationId !== contentId ? variationId : undefined,\r\n            metadata: properties,\r\n        }, context);\r\n    };\r\n    Builder.prototype.trackConversion = function (amount, contentId, variationId, customProperties, context) {\r\n        if (isIframe || !isBrowser || Builder.isPreviewing) {\r\n            return;\r\n        }\r\n        var meta = typeof contentId === 'object' ? contentId : customProperties;\r\n        var useContentId = typeof contentId === 'string' ? contentId : undefined;\r\n        this.track('conversion', { amount: amount, variationId: variationId, meta: meta, contentId: useContentId }, context);\r\n    };\r\n    Object.defineProperty(Builder.prototype, \"isDevelopmentEnv\", {\r\n        // TODO: set this for QA\r\n        get: function () {\r\n            // Automatic determining of development environment\r\n            return (Builder.isIframe ||\r\n                (Builder.isBrowser && (location.hostname === 'localhost' || location.port !== '')) ||\r\n                this.env !== 'production');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prototype.trackInteraction = function (contentId, variationId, alreadyTrackedOne, event, context) {\r\n        if (alreadyTrackedOne === void 0) { alreadyTrackedOne = false; }\r\n        if (isIframe || !isBrowser || Builder.isPreviewing) {\r\n            return;\r\n        }\r\n        var target = event && event.target;\r\n        var targetBuilderElement = target && this.findBuilderParent(target);\r\n        function round(num) {\r\n            return Math.round(num * 1000) / 1000;\r\n        }\r\n        var metadata = {};\r\n        if (event) {\r\n            var clientX = event.clientX, clientY = event.clientY;\r\n            if (target) {\r\n                var targetRect = target.getBoundingClientRect();\r\n                var xOffset = clientX - targetRect.left;\r\n                var yOffset = clientY - targetRect.top;\r\n                var xRatio = round(xOffset / targetRect.width);\r\n                var yRatio = round(yOffset / targetRect.height);\r\n                metadata.targetOffset = {\r\n                    x: xRatio,\r\n                    y: yRatio,\r\n                };\r\n            }\r\n            if (targetBuilderElement) {\r\n                var targetRect = targetBuilderElement.getBoundingClientRect();\r\n                var xOffset = clientX - targetRect.left;\r\n                var yOffset = clientY - targetRect.top;\r\n                var xRatio = round(xOffset / targetRect.width);\r\n                var yRatio = round(yOffset / targetRect.height);\r\n                metadata.builderTargetOffset = {\r\n                    x: xRatio,\r\n                    y: yRatio,\r\n                };\r\n            }\r\n        }\r\n        var builderId = targetBuilderElement &&\r\n            (targetBuilderElement.getAttribute('builder-id') || targetBuilderElement.id);\r\n        if (builderId && targetBuilderElement) {\r\n            metadata.builderElementIndex = [].slice\r\n                .call(document.getElementsByClassName(builderId))\r\n                .indexOf(targetBuilderElement);\r\n        }\r\n        this.track('click', {\r\n            contentId: contentId,\r\n            metadata: metadata,\r\n            variationId: variationId !== contentId ? variationId : undefined,\r\n            unique: !alreadyTrackedOne,\r\n            targetBuilderElement: builderId || undefined,\r\n        }, context);\r\n    };\r\n    Builder.prototype.component = function (info) {\r\n        if (info === void 0) { info = {}; }\r\n        return Builder.component(info);\r\n    };\r\n    Object.defineProperty(Builder.prototype, \"apiKey\", {\r\n        get: function () {\r\n            return this.apiKey$.value;\r\n        },\r\n        set: function (key) {\r\n            this.apiKey$.next(key);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Builder.prototype, \"authToken\", {\r\n        get: function () {\r\n            return this.authToken$.value;\r\n        },\r\n        set: function (token) {\r\n            this.authToken$.next(token);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prototype.modifySearch = function (search) {\r\n        return search.replace(/(^|&|\\?)(builder_.*?)=/gi, function (_match, group1, group2) { return group1 + group2.replace(/_/g, '.') + '='; });\r\n    };\r\n    Builder.prototype.setTestsFromUrl = function () {\r\n        var search = this.getLocation().search;\r\n        var params = QueryString.parseDeep(this.modifySearch(search || '').substr(1));\r\n        var tests = params.builder && params.builder.tests;\r\n        if (tests && typeof tests === 'object') {\r\n            for (var key in tests) {\r\n                if (tests.hasOwnProperty(key)) {\r\n                    this.setTestCookie(key, tests[key]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Builder.prototype.resetOverrides = function () {\r\n        // Ugly - pass down instances per request instead using react context\r\n        // or use builder.get('foo', { req, res }) in react...........\r\n        Builder.overrideUserAttributes = {};\r\n        this.cachebust = false;\r\n        this.noCache = false;\r\n        this.preview = false;\r\n        this.editingModel = null;\r\n        this.overrides = {};\r\n        this.env = 'production';\r\n        this.userAgent = '';\r\n        this.request = undefined;\r\n        this.response = undefined;\r\n    };\r\n    Builder.prototype.getOverridesFromQueryString = function () {\r\n        var location = this.getLocation();\r\n        var params = QueryString.parseDeep(this.modifySearch(location.search || '').substr(1));\r\n        var builder = params.builder;\r\n        if (builder) {\r\n            var userAttributes = builder.userAttributes, overrides = builder.overrides, env = builder.env, host = builder.host, api = builder.api, cachebust = builder.cachebust, noCache = builder.noCache, preview = builder.preview, editing = builder.editing, frameEditing = builder.frameEditing, options = builder.options, overrideParams = builder.params;\r\n            if (userAttributes) {\r\n                this.setUserAttributes(userAttributes);\r\n            }\r\n            if (options) {\r\n                // picking only locale, includeRefs, and enrich for now\r\n                this.queryOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (options.locale && { locale: options.locale })), (options.includeRefs && { includeRefs: options.includeRefs })), (options.enrich && { enrich: options.enrich }));\r\n            }\r\n            if (overrides) {\r\n                this.overrides = overrides;\r\n            }\r\n            if (validEnvList.indexOf(env || api) > -1) {\r\n                this.env = env || api;\r\n            }\r\n            if (Builder.isEditing) {\r\n                var editingModel = frameEditing || editing || preview;\r\n                if (editingModel && editingModel !== 'true') {\r\n                    this.editingModel = editingModel;\r\n                }\r\n            }\r\n            if (cachebust) {\r\n                this.cachebust = true;\r\n            }\r\n            if (noCache) {\r\n                this.noCache = true;\r\n            }\r\n            if (preview) {\r\n                this.preview = true;\r\n            }\r\n            if (params) {\r\n                this.overrideParams = overrideParams;\r\n            }\r\n        }\r\n    };\r\n    Builder.prototype.messageFrameLoaded = function () {\r\n        var _a;\r\n        (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({\r\n            type: 'builder.loaded',\r\n            data: {\r\n                value: true,\r\n            },\r\n        }, '*');\r\n    };\r\n    Builder.prototype.bindMessageListeners = function () {\r\n        var _this = this;\r\n        if (isBrowser) {\r\n            addEventListener('message', function (event) {\r\n                var _a, _b, _c, _d, _e;\r\n                var url = parse$1(event.origin);\r\n                var isRestricted = ['builder.register', 'builder.registerComponent'].indexOf((_a = event.data) === null || _a === void 0 ? void 0 : _a.type) === -1;\r\n                var isTrusted = url.hostname && Builder.isTrustedHost(url.hostname);\r\n                if (isRestricted && !isTrusted) {\r\n                    return;\r\n                }\r\n                var data = event.data;\r\n                if (data) {\r\n                    switch (data.type) {\r\n                        case 'builder.ping': {\r\n                            (_b = window.parent) === null || _b === void 0 ? void 0 : _b.postMessage({\r\n                                type: 'builder.pong',\r\n                                data: {},\r\n                            }, '*');\r\n                            break;\r\n                        }\r\n                        case 'builder.register': {\r\n                            // TODO: possibly do this for all...\r\n                            if (event.source === window) {\r\n                                break;\r\n                            }\r\n                            var options = data.data;\r\n                            if (!options) {\r\n                                break;\r\n                            }\r\n                            var type = options.type, info = options.info;\r\n                            // TODO: all must have name and can't conflict?\r\n                            var typeList = Builder.registry[type];\r\n                            if (!typeList) {\r\n                                typeList = Builder.registry[type] = [];\r\n                            }\r\n                            typeList.push(info);\r\n                            Builder.registryChange.next(Builder.registry);\r\n                            break;\r\n                        }\r\n                        case 'builder.settingsChange': {\r\n                            // TODO: possibly do this for all...\r\n                            if (event.source === window) {\r\n                                break;\r\n                            }\r\n                            var settings = data.data;\r\n                            if (!settings) {\r\n                                break;\r\n                            }\r\n                            Object.assign(Builder.settings, settings);\r\n                            Builder.settingsChange.next(Builder.settings);\r\n                            break;\r\n                        }\r\n                        case 'builder.registerEditor': {\r\n                            // TODO: possibly do this for all...\r\n                            if (event.source === window) {\r\n                                break;\r\n                            }\r\n                            var info_1 = data.data;\r\n                            if (!info_1) {\r\n                                break;\r\n                            }\r\n                            var hasComponent_1 = !!info_1.component;\r\n                            Builder.editors.every(function (thisInfo, index) {\r\n                                if (info_1.name === thisInfo.name) {\r\n                                    if (thisInfo.component && !hasComponent_1) {\r\n                                        return false;\r\n                                    }\r\n                                    else {\r\n                                        Builder.editors[index] = thisInfo;\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                                return true;\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'builder.triggerAnimation': {\r\n                            Builder.animator.triggerAnimation(data.data);\r\n                            break;\r\n                        }\r\n                        case 'builder.contentUpdate':\r\n                            var key = data.data.key || data.data.alias || data.data.entry || data.data.modelName;\r\n                            var contentData = data.data.data; // hmmm...\r\n                            var observer = _this.observersByKey[key];\r\n                            if (observer && !_this.noEditorUpdates[key]) {\r\n                                observer.next([contentData]);\r\n                            }\r\n                            break;\r\n                        case 'builder.getComponents':\r\n                            (_c = window.parent) === null || _c === void 0 ? void 0 : _c.postMessage({\r\n                                type: 'builder.components',\r\n                                data: Builder.components.map(function (item) { return Builder.prepareComponentSpecToSend(item); }),\r\n                            }, '*');\r\n                            break;\r\n                        case 'builder.editingModel':\r\n                            _this.editingModel = data.data.model;\r\n                            break;\r\n                        case 'builder.registerComponent':\r\n                            var componentData = data.data;\r\n                            Builder.addComponent(componentData);\r\n                            break;\r\n                        case 'builder.blockContentLoading':\r\n                            if (typeof data.data.model === 'string') {\r\n                                _this.blockContentLoading = data.data.model;\r\n                            }\r\n                            break;\r\n                        case 'builder.editingMode':\r\n                            var editingMode = data.data;\r\n                            if (editingMode) {\r\n                                _this.editingMode = true;\r\n                                document.body.classList.add('builder-editing');\r\n                            }\r\n                            else {\r\n                                _this.editingMode = false;\r\n                                document.body.classList.remove('builder-editing');\r\n                            }\r\n                            break;\r\n                        case 'builder.editingPageMode':\r\n                            var editingPageMode = data.data;\r\n                            Builder.editingPage = editingPageMode;\r\n                            break;\r\n                        case 'builder.overrideUserAttributes':\r\n                            var userAttributes = data.data;\r\n                            assign(Builder.overrideUserAttributes, userAttributes);\r\n                            _this.flushGetContentQueue(true);\r\n                            // TODO: refetch too\r\n                            break;\r\n                        case 'builder.overrideTestGroup':\r\n                            var _f = data.data, variationId = _f.variationId, contentId = _f.contentId;\r\n                            if (variationId && contentId) {\r\n                                _this.setTestCookie(contentId, variationId);\r\n                                _this.flushGetContentQueue(true);\r\n                            }\r\n                            break;\r\n                        case 'builder.evaluate': {\r\n                            var text = data.data.text;\r\n                            var args = data.data.arguments || [];\r\n                            var id_1 = data.data.id;\r\n                            // tslint:disable-next-line:no-function-constructor-with-string-args\r\n                            var fn = new Function(text);\r\n                            var result = void 0;\r\n                            var error = null;\r\n                            try {\r\n                                result = fn.apply(_this, args);\r\n                            }\r\n                            catch (err) {\r\n                                error = toError(err);\r\n                            }\r\n                            if (error) {\r\n                                (_d = window.parent) === null || _d === void 0 ? void 0 : _d.postMessage({\r\n                                    type: 'builder.evaluateError',\r\n                                    data: { id: id_1, error: error.message },\r\n                                }, '*');\r\n                            }\r\n                            else {\r\n                                if (result && typeof result.then === 'function') {\r\n                                    result\r\n                                        .then(function (finalResult) {\r\n                                        var _a;\r\n                                        (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({\r\n                                            type: 'builder.evaluateResult',\r\n                                            data: { id: id_1, result: finalResult },\r\n                                        }, '*');\r\n                                    })\r\n                                        .catch(console.error);\r\n                                }\r\n                                else {\r\n                                    (_e = window.parent) === null || _e === void 0 ? void 0 : _e.postMessage({\r\n                                        type: 'builder.evaluateResult',\r\n                                        data: { result: result, id: id_1 },\r\n                                    }, '*');\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Builder.prototype, \"defaultCanTrack\", {\r\n        get: function () {\r\n            return Boolean(Builder.isBrowser &&\r\n                navigator.userAgent.trim() &&\r\n                !navigator.userAgent.match(/bot|crawler|spider|robot|crawling|prerender|google|baidu|bing|msn|duckduckbot|teoma|slurp|yandex|phantom|headless|selenium|puppeteer/i) &&\r\n                !this.browserTrackingDisabled);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prototype.init = function (apiKey, canTrack, req, res, authToken, apiVersion) {\r\n        if (canTrack === void 0) { canTrack = this.defaultCanTrack; }\r\n        if (req) {\r\n            this.request = req;\r\n        }\r\n        if (res) {\r\n            this.response = res;\r\n        }\r\n        this.canTrack = canTrack;\r\n        this.apiKey = apiKey;\r\n        if (authToken) {\r\n            this.authToken = authToken;\r\n        }\r\n        if (apiVersion) {\r\n            this.apiVersion = apiVersion;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(Builder.prototype, \"previewingModel\", {\r\n        get: function () {\r\n            var search = this.getLocation().search;\r\n            var params = QueryString.parse((search || '').substr(1));\r\n            return params['builder.preview'];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // TODO: allow adding location object as property and/or in constructor\r\n    Builder.prototype.getLocation = function () {\r\n        var _a;\r\n        var parsedLocation = {};\r\n        // in ssr mode\r\n        if (this.request) {\r\n            parsedLocation = parse$1((_a = this.request.url) !== null && _a !== void 0 ? _a : '');\r\n        }\r\n        else if (typeof location === 'object') {\r\n            // in the browser\r\n            parsedLocation = parse$1(location.href);\r\n        }\r\n        // IE11 bug with parsed path being empty string\r\n        // causes issues with our user targeting\r\n        if (parsedLocation.pathname === '') {\r\n            parsedLocation.pathname = '/';\r\n        }\r\n        return parsedLocation;\r\n    };\r\n    Builder.prototype.getUserAttributes = function (userAgent) {\r\n        if (userAgent === void 0) { userAgent = this.userAgent || ''; }\r\n        var isMobile = {\r\n            Android: function () {\r\n                return userAgent.match(/Android/i);\r\n            },\r\n            BlackBerry: function () {\r\n                return userAgent.match(/BlackBerry/i);\r\n            },\r\n            iOS: function () {\r\n                return userAgent.match(/iPhone|iPod/i);\r\n            },\r\n            Opera: function () {\r\n                return userAgent.match(/Opera Mini/i);\r\n            },\r\n            Windows: function () {\r\n                return userAgent.match(/IEMobile/i) || userAgent.match(/WPDesktop/i);\r\n            },\r\n            any: function () {\r\n                return (isMobile.Android() ||\r\n                    isMobile.BlackBerry() ||\r\n                    isMobile.iOS() ||\r\n                    isMobile.Opera() ||\r\n                    isMobile.Windows());\r\n            },\r\n        };\r\n        var isTablet = userAgent.match(/Tablet|iPad/i);\r\n        var url = this.getLocation();\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ urlPath: url.pathname, host: url.host || url.hostname, \r\n            // TODO: maybe an option to choose to target off of mobile/tablet/desktop or just mobile/desktop\r\n            device: isTablet ? 'tablet' : isMobile.any() ? 'mobile' : 'desktop' }, Builder.overrideUserAttributes);\r\n    };\r\n    Builder.prototype.setUserAttributes = function (options) {\r\n        assign(Builder.overrideUserAttributes, options);\r\n        this.userAttributesChanged.next(options);\r\n    };\r\n    /**\r\n     * Set user attributes just for tracking purposes.\r\n     *\r\n     * Do this so properties exist on event objects for querying insights, but\r\n     * won't affect targeting\r\n     *\r\n     * Use this when you want to track properties but don't need to target off\r\n     * of them to optimize cache efficiency\r\n     */\r\n    Builder.prototype.setTrackingUserAttributes = function (attributes) {\r\n        assign(this.trackingUserAttributes, attributes);\r\n    };\r\n    Builder.prototype.get = function (modelName, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var instance = this;\r\n        if (!Builder.isBrowser) {\r\n            instance = new Builder(options.apiKey || this.apiKey, options.req, options.res, undefined, options.authToken || this.authToken, options.apiVersion || this.apiVersion);\r\n            instance.setUserAttributes(this.getUserAttributes());\r\n        }\r\n        else {\r\n            // NOTE: All these are when .init is not called and the customer\r\n            // directly calls .get on the singleton instance of Builder\r\n            if (options.apiKey && !this.apiKey) {\r\n                this.apiKey = options.apiKey;\r\n            }\r\n            if (options.authToken && !this.authToken) {\r\n                this.authToken = options.authToken;\r\n            }\r\n            if (options.apiVersion && !this.apiVersion) {\r\n                this.apiVersion = options.apiVersion;\r\n            }\r\n        }\r\n        return instance.queueGetContent(modelName, options).map(\r\n        /* map( */ function (matches) {\r\n            var match = matches && matches[0];\r\n            if (Builder.isStatic) {\r\n                return match;\r\n            }\r\n            var matchData = match && match.data;\r\n            if (!matchData) {\r\n                return null;\r\n            }\r\n            if (typeof matchData.blocksString !== 'undefined') {\r\n                matchData.blocks = JSON.parse(matchData.blocksString);\r\n                delete matchData.blocksString;\r\n            }\r\n            return {\r\n                // TODO: add ab test info here and other high level stuff\r\n                data: matchData,\r\n                id: match.id,\r\n                variationId: match.testVariationId || match.variationId || null,\r\n                testVariationId: match.testVariationId || match.variationId || null,\r\n                testVariationName: match.testVariationName || null,\r\n                lastUpdated: match.lastUpdated || null,\r\n            };\r\n        });\r\n        // );\r\n    };\r\n    // TODO: entry id in options\r\n    Builder.prototype.queueGetContent = function (modelName, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // TODO: if query do modelName + query\r\n        var key = options.key ||\r\n            options.alias ||\r\n            // TODO: SDKs only pass entry key when given to them, and never when editing...\r\n            // options.entry ||\r\n            // TODO: this is ugly - instead of multiple of same model with different options are sent\r\n            // say requires key/alias. Or if not perhaps make a reliable hash of the options and use that.\r\n            // TODO: store last user state on last request and if user attributes different now\r\n            // give a warning that need to use keys to request new contente\r\n            // (options &&\r\n            //   Object.keys(options).filter(key => key !== 'model').length &&\r\n            //   JSON.stringify({ model: modelName, ...options, initialContent: undefined })) ||\r\n            modelName;\r\n        var isEditingThisModel = this.editingModel === modelName;\r\n        // TODO: include params in this key........\r\n        var currentObservable = this.observersByKey[key];\r\n        // if (options.query && options.query._id) {\r\n        //   this.flushGetContentQueue([options])\r\n        // }\r\n        if (this.apiKey === 'DEMO' && !this.overrides[key] && !options.initialContent) {\r\n            options.initialContent = [];\r\n        }\r\n        var initialContent = options.initialContent;\r\n        // TODO: refresh option in options\r\n        if (currentObservable && (!currentObservable.value || options.cache)) {\r\n            // TODO: test if this ran, otherwise on 404 some observers may never be called...\r\n            if (currentObservable.value) {\r\n                nextTick(function () {\r\n                    // TODO: return a new observable and only that one fires subscribers, don't refire for existing ones\r\n                    currentObservable.next(currentObservable.value);\r\n                });\r\n            }\r\n            return currentObservable;\r\n        }\r\n        if (isEditingThisModel) {\r\n            if (Builder.isBrowser) {\r\n                parent.postMessage({ type: 'builder.updateContent', data: { options: options } }, '*');\r\n            }\r\n        }\r\n        if (!initialContent /* || isEditingThisModel */) {\r\n            if (!this.getContentQueue) {\r\n                this.getContentQueue = [];\r\n            }\r\n            this.getContentQueue.push((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, options), { model: modelName, key: key }));\r\n            if (this.getContentQueue && this.getContentQueue.length >= this.contentPerRequest) {\r\n                var queue_1 = this.getContentQueue.slice();\r\n                this.getContentQueue = [];\r\n                nextTick(function () {\r\n                    _this.flushGetContentQueue(false, queue_1);\r\n                });\r\n            }\r\n            else {\r\n                nextTick(function () {\r\n                    _this.flushGetContentQueue();\r\n                });\r\n            }\r\n        }\r\n        var observable = new BehaviorSubject(null);\r\n        this.observersByKey[key] = observable;\r\n        if (options.noEditorUpdates) {\r\n            this.noEditorUpdates[key] = true;\r\n        }\r\n        if (initialContent) {\r\n            nextTick(function () {\r\n                // TODO: need to testModify this I think...?\r\n                observable.next(initialContent);\r\n            });\r\n        }\r\n        return observable;\r\n    };\r\n    // this is needed to satisfy the Angular SDK, which used to rely on the more complex version of `requestUrl`.\r\n    // even though we only use `fetch()` now, we prefer to keep the old behavior and use the `fetch` that comes from\r\n    // the core SDK for consistency\r\n    Builder.prototype.requestUrl = function (url, options) {\r\n        return getFetch()(url, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ next: (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ revalidate: 1 }, options === null || options === void 0 ? void 0 : options.next) }, options)).then(function (res) { return res.json(); });\r\n    };\r\n    Object.defineProperty(Builder.prototype, \"host\", {\r\n        get: function () {\r\n            switch (this.env) {\r\n                case 'qa':\r\n                    return 'https://qa.builder.io';\r\n                case 'test':\r\n                    return 'https://builder-io-test.web.app';\r\n                case 'fast':\r\n                    return 'https://fast.builder.io';\r\n                case 'cloud':\r\n                    return 'https://cloud.builder.io';\r\n                case 'cdn2':\r\n                    return 'https://cdn2.builder.io';\r\n                case 'cdn-qa':\r\n                    return 'https://cdn-qa.builder.io';\r\n                case 'development':\r\n                case 'dev':\r\n                    return 'http://localhost:5000';\r\n                case 'cdn-prod':\r\n                    return 'https://cdn.builder.io';\r\n                default:\r\n                    return Builder.overrideHost || 'https://cdn.builder.io';\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prototype.flushGetContentQueue = function (usePastQueue, useQueue) {\r\n        var _this = this;\r\n        if (usePastQueue === void 0) { usePastQueue = false; }\r\n        if (!this.apiKey) {\r\n            throw new Error(\"Fetching content failed, expected apiKey to be defined instead got: \".concat(this.apiKey));\r\n        }\r\n        if (this.apiVersion) {\r\n            if (!['v1', 'v3'].includes(this.apiVersion)) {\r\n                throw new Error(\"Invalid apiVersion: expected 'v1' or 'v3', received '\".concat(this.apiVersion, \"'\"));\r\n            }\r\n        }\r\n        else {\r\n            this.apiVersion = DEFAULT_API_VERSION;\r\n        }\r\n        if (!usePastQueue && !this.getContentQueue) {\r\n            return;\r\n        }\r\n        var queue = useQueue || (usePastQueue ? this.priorContentQueue : this.getContentQueue) || [];\r\n        // TODO: do this on every request send?\r\n        this.getOverridesFromQueryString();\r\n        var queryParams = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ \r\n            // TODO: way to force a request to be in a separate queue. or just lower queue limit to be 1 by default\r\n            omit: queue[0].omit || 'meta.componentsUsed', apiKey: this.apiKey }, queue[0].options), this.queryOptions);\r\n        if (queue[0].locale) {\r\n            queryParams.locale = queue[0].locale;\r\n        }\r\n        if (queue[0].fields) {\r\n            queryParams.fields = queue[0].fields;\r\n        }\r\n        if (queue[0].format) {\r\n            queryParams.format = queue[0].format;\r\n        }\r\n        var pageQueryParams = typeof location !== 'undefined'\r\n            ? QueryString.parseDeep(location.search.substr(1))\r\n            :  false || {};\r\n        var userAttributes = \r\n        // FIXME: HACK: only checks first in queue for user attributes overrides, should check all\r\n        // TODO: merge user attributes provided here with defaults and current user attiributes (?)\r\n        queue && queue[0].userAttributes\r\n            ? queue[0].userAttributes\r\n            : this.targetContent\r\n                ? this.getUserAttributes()\r\n                : {\r\n                    urlPath: this.getLocation().pathname,\r\n                };\r\n        var fullUrlQueueItem = queue.find(function (item) { return !!item.includeUrl; });\r\n        if (fullUrlQueueItem) {\r\n            var location_1 = this.getLocation();\r\n            if (location_1.origin) {\r\n                queryParams.url = \"\".concat(location_1.origin).concat(location_1.pathname).concat(location_1.search);\r\n            }\r\n        }\r\n        var urlQueueItem = useQueue === null || useQueue === void 0 ? void 0 : useQueue.find(function (item) { return item.url; });\r\n        if (urlQueueItem === null || urlQueueItem === void 0 ? void 0 : urlQueueItem.url) {\r\n            userAttributes.urlPath = urlQueueItem.url.split('?')[0];\r\n        }\r\n        // TODO: merge in the attribute from query string ones\r\n        // TODO: make this an option per component/request\r\n        queryParams.userAttributes = userAttributes;\r\n        if (!usePastQueue && !useQueue) {\r\n            this.priorContentQueue = queue;\r\n            this.getContentQueue = null;\r\n        }\r\n        var cachebust = this.cachebust ||\r\n            isIframe ||\r\n            pageQueryParams.cachebust ||\r\n            pageQueryParams['builder.cachebust'];\r\n        if (cachebust || this.env !== 'production') {\r\n            queryParams.cachebust = true;\r\n        }\r\n        if (Builder.isEditing) {\r\n            queryParams.isEditing = true;\r\n        }\r\n        if (this.noCache || this.env !== 'production') {\r\n            queryParams.noCache = true;\r\n        }\r\n        if (size(this.overrides)) {\r\n            for (var key in this.overrides) {\r\n                if (this.overrides.hasOwnProperty(key)) {\r\n                    queryParams[\"overrides.\".concat(key)] = this.overrides[key];\r\n                }\r\n            }\r\n        }\r\n        for (var _i = 0, queue_2 = queue; _i < queue_2.length; _i++) {\r\n            var options = queue_2[_i];\r\n            if (options.format) {\r\n                queryParams.format = options.format;\r\n            }\r\n            // TODO: remove me and make permodel\r\n            if (options.static) {\r\n                queryParams.static = options.static;\r\n            }\r\n            if (options.cachebust) {\r\n                queryParams.cachebust = options.cachebust;\r\n            }\r\n            if (isPositiveNumber(options.cacheSeconds)) {\r\n                queryParams.cacheSeconds = options.cacheSeconds;\r\n            }\r\n            if (isPositiveNumber(options.staleCacheSeconds)) {\r\n                queryParams.staleCacheSeconds = options.staleCacheSeconds;\r\n            }\r\n            var properties = [\r\n                'prerender',\r\n                'extractCss',\r\n                'limit',\r\n                'offset',\r\n                'query',\r\n                'preview',\r\n                'model',\r\n                'entry',\r\n                'rev',\r\n                'static',\r\n            ];\r\n            for (var _a = 0, properties_1 = properties; _a < properties_1.length; _a++) {\r\n                var key = properties_1[_a];\r\n                var value = options[key];\r\n                if (value !== undefined) {\r\n                    queryParams.options = queryParams.options || {};\r\n                    queryParams.options[options.key] = queryParams.options[options.key] || {};\r\n                    queryParams.options[options.key][key] = JSON.stringify(value);\r\n                }\r\n            }\r\n        }\r\n        if (this.preview) {\r\n            queryParams.preview = 'true';\r\n        }\r\n        var hasParams = Object.keys(queryParams).length > 0;\r\n        // TODO: option to force dev or qa api here\r\n        var host = this.host;\r\n        var keyNames = queue.map(function (item) { return encodeURIComponent(item.key); }).join(',');\r\n        if (this.overrideParams) {\r\n            var params = omit(QueryString.parse(this.overrideParams), 'apiKey');\r\n            assign(queryParams, params);\r\n        }\r\n        var queryStr = QueryString.stringifyDeep(queryParams);\r\n        var format = queryParams.format;\r\n        var requestOptions = { headers: {}, next: { revalidate: 1 } };\r\n        if (this.authToken) {\r\n            requestOptions.headers = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, requestOptions.headers), { Authorization: \"Bearer \".concat(this.authToken) });\r\n        }\r\n        var fn = format === 'solid' || format === 'react' ? 'codegen' : 'query';\r\n        // NOTE: this is a hack to get around the fact that the codegen endpoint is not yet available in v3\r\n        var apiVersionBasedOnFn = fn === 'query' ? this.apiVersion : 'v1';\r\n        var url = \"\".concat(host, \"/api/\").concat(apiVersionBasedOnFn, \"/\").concat(fn, \"/\").concat(this.apiKey, \"/\").concat(keyNames) +\r\n            (queryParams && hasParams ? \"?\".concat(queryStr) : '');\r\n        var promise = getFetch()(url, requestOptions)\r\n            .then(function (res) { return res.json(); })\r\n            .then(function (result) {\r\n            for (var _i = 0, queue_3 = queue; _i < queue_3.length; _i++) {\r\n                var options = queue_3[_i];\r\n                var keyName = options.key;\r\n                if (options.model === _this.blockContentLoading && !options.noEditorUpdates) {\r\n                    continue;\r\n                }\r\n                var isEditingThisModel = _this.editingModel === options.model;\r\n                if (isEditingThisModel && Builder.isEditing) {\r\n                    parent.postMessage({ type: 'builder.updateContent', data: { options: options } }, '*');\r\n                    // return;\r\n                }\r\n                var observer = _this.observersByKey[keyName];\r\n                if (!observer) {\r\n                    return;\r\n                }\r\n                var data = result[keyName];\r\n                var sorted = data; // sortBy(data, item => item.priority);\r\n                if (data) {\r\n                    var testModifiedResults = Builder.isServer\r\n                        ? sorted\r\n                        : _this.processResultsForTests(sorted);\r\n                    observer.next(testModifiedResults);\r\n                }\r\n                else {\r\n                    var search = _this.getLocation().search;\r\n                    if ((search || '').includes('builder.preview=' + options.model)) {\r\n                        var previewData = {\r\n                            id: 'preview',\r\n                            name: 'Preview',\r\n                            data: {},\r\n                        };\r\n                        observer.next([previewData]);\r\n                    }\r\n                    observer.next([]);\r\n                }\r\n            }\r\n        }, function (err) {\r\n            for (var _i = 0, queue_4 = queue; _i < queue_4.length; _i++) {\r\n                var options = queue_4[_i];\r\n                var observer = _this.observersByKey[options.key];\r\n                if (!observer) {\r\n                    return;\r\n                }\r\n                observer.error(err);\r\n            }\r\n        });\r\n        return promise;\r\n    };\r\n    Builder.prototype.processResultsForTests = function (results) {\r\n        var _this = this;\r\n        var _a;\r\n        var mappedResults = results.map(function (item) {\r\n            if (!item.variations) {\r\n                return item;\r\n            }\r\n            var cookieValue = _this.getTestCookie(item.id);\r\n            var cookieVariation = cookieValue === item.id ? item : item.variations[cookieValue];\r\n            if (cookieVariation) {\r\n                return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, item), { data: cookieVariation.data, variationId: cookieValue, testVariationId: cookieValue, testVariationName: cookieVariation.name });\r\n            }\r\n            if (_this.canTrack && item.variations && size(item.variations)) {\r\n                var n = 0;\r\n                var random = Math.random();\r\n                for (var id in item.variations) {\r\n                    var variation = item.variations[id];\r\n                    var testRatio = variation.testRatio;\r\n                    n += testRatio;\r\n                    if (random < n) {\r\n                        _this.setTestCookie(item.id, variation.id);\r\n                        var variationName = variation.name || (variation.id === item.id ? 'Default variation' : '');\r\n                        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, item), { data: variation.data, variationId: variation.id, testVariationId: variation.id, variationName: variationName, testVariationName: variationName });\r\n                    }\r\n                }\r\n                _this.setTestCookie(item.id, item.id);\r\n            }\r\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, item), { variationId: item.id }), (item.variations &&\r\n                size(item.variations) && {\r\n                testVariationId: item.id,\r\n                testVariationName: 'Default variation',\r\n            }));\r\n        });\r\n        if (isIframe) {\r\n            (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({ type: 'builder.contentResults', data: { results: mappedResults } }, '*');\r\n        }\r\n        return mappedResults;\r\n    };\r\n    Builder.prototype.getTestCookie = function (contentId) {\r\n        return this.getCookie(\"\".concat(this.testCookiePrefix, \".\").concat(contentId));\r\n    };\r\n    Builder.prototype.setTestCookie = function (contentId, variationId) {\r\n        if (!this.canTrack) {\r\n            this.cookieQueue.push([contentId, variationId]);\r\n            return;\r\n        }\r\n        // 30 days from now\r\n        var future = new Date();\r\n        future.setDate(future.getDate() + 30);\r\n        return this.setCookie(\"\".concat(this.testCookiePrefix, \".\").concat(contentId), variationId, future);\r\n    };\r\n    Builder.prototype.getCookie = function (name$$1) {\r\n        if (this.cookies) {\r\n            return this.cookies.get(name$$1);\r\n        }\r\n        return Builder.isBrowser && getCookie(name$$1);\r\n    };\r\n    Builder.prototype.setCookie = function (name$$1, value, expires) {\r\n        if (this.cookies && !(Builder.isServer && Builder.isStatic)) {\r\n            return this.cookies.set(name$$1, value, {\r\n                expires: expires,\r\n                secure: this.getLocation().protocol === 'https:',\r\n            });\r\n        }\r\n        return Builder.isBrowser && setCookie(name$$1, value, expires);\r\n    };\r\n    Builder.prototype.getContent = function (modelName, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (!this.apiKey) {\r\n            throw new Error(\"Fetching content from model \".concat(modelName, \" failed, expected apiKey to be defined instead got: \").concat(this.apiKey));\r\n        }\r\n        return this.queueGetContent(modelName, options);\r\n    };\r\n    Builder.prototype.getAll = function (modelName, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var instance = this;\r\n        if (!Builder.isBrowser) {\r\n            instance = new Builder(options.apiKey || this.apiKey, options.req, options.res, false, null, options.apiVersion || this.apiVersion);\r\n            instance.setUserAttributes(this.getUserAttributes());\r\n        }\r\n        else {\r\n            // NOTE: All these are when .init is not called and the customer\r\n            // directly calls .get on the singleton instance of Builder\r\n            if (options.apiKey && !this.apiKey) {\r\n                this.apiKey = options.apiKey;\r\n            }\r\n            if (options.apiVersion && !this.apiVersion) {\r\n                this.apiVersion = options.apiVersion;\r\n            }\r\n        }\r\n        return instance\r\n            .getContent(modelName, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ limit: 30 }, options), { key: options.key ||\r\n                // Make the key include all options, so we don't reuse cache for the same content fetched\r\n                // with different options\r\n                Builder.isBrowser\r\n                ? \"\".concat(modelName, \":\").concat(hash_sum__WEBPACK_IMPORTED_MODULE_0___default()(omit(options, 'initialContent', 'req', 'res')))\r\n                : undefined }))\r\n            .promise();\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @deprecated. This is buggy, and always behind by a version.\r\n     */\r\n    Builder.VERSION = version;\r\n    Builder.components = [];\r\n    /**\r\n     * Makes it so that a/b tests generate code like {@link\r\n     * https://www.builder.io/blog/high-performance-no-code#__next:~:text=Static%20generated%20A%2FB%20testing}\r\n     * instead of the old way where we render only one test group at a time on the\r\n     * server. This is the preferred/better way not and we should ultimately make it\r\n     * the default\r\n     */\r\n    Builder.isStatic = true;\r\n    Builder.animator = new Animator();\r\n    Builder.nextTick = nextTick;\r\n    Builder.throttle = throttle;\r\n    Builder.editors = [];\r\n    Builder.trustedHosts = ['builder.io', 'localhost'];\r\n    Builder.plugins = [];\r\n    Builder.actions = [];\r\n    Builder.registry = {};\r\n    Builder.registryChange = new BehaviorSubject({});\r\n    Builder._editingPage = false;\r\n    Builder.isIframe = isIframe;\r\n    Builder.isBrowser = isBrowser;\r\n    Builder.isReactNative = isReactNative;\r\n    Builder.isServer = !isBrowser && !isReactNative;\r\n    Builder.previewingModel = Builder.isBrowser && getQueryParam(location.href, 'builder.preview');\r\n    Builder.settings = {};\r\n    Builder.settingsChange = new BehaviorSubject({});\r\n    // TODO: this is quick and dirty, do better implementation later. Also can be unreliable\r\n    // if page 301s etc. Use a query param instead? also could have issues with redirects. Injecting var could\r\n    // work but is async...\r\n    Builder.isEditing = Boolean(isIframe &&\r\n        ((document.referrer && document.referrer.match(/builder\\.io|localhost:1234/)) ||\r\n            location.search.indexOf('builder.frameEditing=') !== -1));\r\n    Builder.isPreviewing = Boolean(isBrowser &&\r\n        (location.search.indexOf('builder.preview=') !== -1 ||\r\n            location.search.indexOf('builder.frameEditing=') !== -1));\r\n    Builder.isReact = false;\r\n    Builder.overrideUserAttributes = {};\r\n    return Builder;\r\n}());\n\nvar builder = new Builder(null, undefined, undefined, true);\r\nBuilder.singletonInstance = builder;\n\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@builder.io/sdk/dist/index.esm.js\n"));

/***/ }),

/***/ "./node_modules/@builder.io/sdk/node_modules/tslib/tslib.es6.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@builder.io/sdk/node_modules/tslib/tslib.es6.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: function() { return /* binding */ __assign; },\n/* harmony export */   __asyncDelegator: function() { return /* binding */ __asyncDelegator; },\n/* harmony export */   __asyncGenerator: function() { return /* binding */ __asyncGenerator; },\n/* harmony export */   __asyncValues: function() { return /* binding */ __asyncValues; },\n/* harmony export */   __await: function() { return /* binding */ __await; },\n/* harmony export */   __awaiter: function() { return /* binding */ __awaiter; },\n/* harmony export */   __classPrivateFieldGet: function() { return /* binding */ __classPrivateFieldGet; },\n/* harmony export */   __classPrivateFieldSet: function() { return /* binding */ __classPrivateFieldSet; },\n/* harmony export */   __createBinding: function() { return /* binding */ __createBinding; },\n/* harmony export */   __decorate: function() { return /* binding */ __decorate; },\n/* harmony export */   __exportStar: function() { return /* binding */ __exportStar; },\n/* harmony export */   __extends: function() { return /* binding */ __extends; },\n/* harmony export */   __generator: function() { return /* binding */ __generator; },\n/* harmony export */   __importDefault: function() { return /* binding */ __importDefault; },\n/* harmony export */   __importStar: function() { return /* binding */ __importStar; },\n/* harmony export */   __makeTemplateObject: function() { return /* binding */ __makeTemplateObject; },\n/* harmony export */   __metadata: function() { return /* binding */ __metadata; },\n/* harmony export */   __param: function() { return /* binding */ __param; },\n/* harmony export */   __read: function() { return /* binding */ __read; },\n/* harmony export */   __rest: function() { return /* binding */ __rest; },\n/* harmony export */   __spread: function() { return /* binding */ __spread; },\n/* harmony export */   __spreadArrays: function() { return /* binding */ __spreadArrays; },\n/* harmony export */   __values: function() { return /* binding */ __values; }\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1aWxkZXIuaW8vc2RrL25vZGVfbW9kdWxlcy90c2xpYi90c2xpYi5lczYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ25GLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxjQUFjO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDZDQUE2QyxRQUFRO0FBQ3JEO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNPO0FBQ1AsY0FBYyw2QkFBNkIsMEJBQTBCLGNBQWMscUJBQXFCO0FBQ3hHLGlCQUFpQixvREFBb0QscUVBQXFFLGNBQWM7QUFDeEosdUJBQXVCLHNCQUFzQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEMsbUNBQW1DLFNBQVM7QUFDNUMsbUNBQW1DLFdBQVcsVUFBVTtBQUN4RCwwQ0FBMEMsY0FBYztBQUN4RDtBQUNBLDhHQUE4RyxPQUFPO0FBQ3JILGlGQUFpRixpQkFBaUI7QUFDbEcseURBQXlELGdCQUFnQixRQUFRO0FBQ2pGLCtDQUErQyxnQkFBZ0IsZ0JBQWdCO0FBQy9FO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQSxVQUFVLFlBQVksYUFBYSxTQUFTLFVBQVU7QUFDdEQsb0NBQW9DLFNBQVM7QUFDN0M7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw2QkFBNkIsc0JBQXNCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrREFBa0QsUUFBUTtBQUMxRCx5Q0FBeUMsUUFBUTtBQUNqRCx5REFBeUQsUUFBUTtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsaUJBQWlCLHVGQUF1RixjQUFjO0FBQ3RILHVCQUF1QixnQ0FBZ0MscUNBQXFDLDJDQUEyQztBQUN2SSw0QkFBNEIsTUFBTSxpQkFBaUIsWUFBWTtBQUMvRCx1QkFBdUI7QUFDdkIsOEJBQThCO0FBQzlCLDZCQUE2QjtBQUM3Qiw0QkFBNEI7QUFDNUI7QUFDQTtBQUNPO0FBQ1A7QUFDQSxpQkFBaUIsNkNBQTZDLFVBQVUsc0RBQXNELGNBQWM7QUFDNUksMEJBQTBCLDZCQUE2QixvQkFBb0IsZ0RBQWdELGtCQUFrQjtBQUM3STtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsMkdBQTJHLHVGQUF1RixjQUFjO0FBQ2hOLHVCQUF1Qiw4QkFBOEIsZ0RBQWdELHdEQUF3RDtBQUM3Siw2Q0FBNkMsc0NBQXNDLFVBQVUsbUJBQW1CLElBQUk7QUFDcEg7QUFDQTtBQUNPO0FBQ1AsaUNBQWlDLHVDQUF1QyxZQUFZLEtBQUssT0FBTztBQUNoRztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BidWlsZGVyLmlvL3Nkay9ub2RlX21vZHVsZXMvdHNsaWIvdHNsaWIuZXM2LmpzPzlkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiLyohICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbkNvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxyXG5cclxuUGVybWlzc2lvbiB0byB1c2UsIGNvcHksIG1vZGlmeSwgYW5kL29yIGRpc3RyaWJ1dGUgdGhpcyBzb2Z0d2FyZSBmb3IgYW55XHJcbnB1cnBvc2Ugd2l0aCBvciB3aXRob3V0IGZlZSBpcyBoZXJlYnkgZ3JhbnRlZC5cclxuXHJcblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIgQU5EIFRIRSBBVVRIT1IgRElTQ0xBSU1TIEFMTCBXQVJSQU5USUVTIFdJVEhcclxuUkVHQVJEIFRPIFRISVMgU09GVFdBUkUgSU5DTFVESU5HIEFMTCBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZXHJcbkFORCBGSVRORVNTLiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SIEJFIExJQUJMRSBGT1IgQU5ZIFNQRUNJQUwsIERJUkVDVCxcclxuSU5ESVJFQ1QsIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyBPUiBBTlkgREFNQUdFUyBXSEFUU09FVkVSIFJFU1VMVElORyBGUk9NXHJcbkxPU1MgT0YgVVNFLCBEQVRBIE9SIFBST0ZJVFMsIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBORUdMSUdFTkNFIE9SXHJcbk9USEVSIFRPUlRJT1VTIEFDVElPTiwgQVJJU0lORyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBVU0UgT1JcclxuUEVSRk9STUFOQ0UgT0YgVEhJUyBTT0ZUV0FSRS5cclxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKi9cclxuLyogZ2xvYmFsIFJlZmxlY3QsIFByb21pc2UgKi9cclxuXHJcbnZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24oZCwgYikge1xyXG4gICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fZXh0ZW5kcyhkLCBiKSB7XHJcbiAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG4gICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcbiAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbn1cclxuXHJcbmV4cG9ydCB2YXIgX19hc3NpZ24gPSBmdW5jdGlvbigpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiBfX2Fzc2lnbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSkgdFtwXSA9IHNbcF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3Jlc3QocywgZSkge1xyXG4gICAgdmFyIHQgPSB7fTtcclxuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxyXG4gICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxyXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxyXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XHJcbiAgICAgICAgfVxyXG4gICAgcmV0dXJuIHQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2RlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XHJcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xyXG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcclxuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XHJcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19wYXJhbShwYXJhbUluZGV4LCBkZWNvcmF0b3IpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAodGFyZ2V0LCBrZXkpIHsgZGVjb3JhdG9yKHRhcmdldCwga2V5LCBwYXJhbUluZGV4KTsgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19tZXRhZGF0YShtZXRhZGF0YUtleSwgbWV0YWRhdGFWYWx1ZSkge1xyXG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0Lm1ldGFkYXRhID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBSZWZsZWN0Lm1ldGFkYXRhKG1ldGFkYXRhS2V5LCBtZXRhZGF0YVZhbHVlKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fYXdhaXRlcih0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcclxuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2dlbmVyYXRvcih0aGlzQXJnLCBib2R5KSB7XHJcbiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnO1xyXG4gICAgcmV0dXJuIGcgPSB7IG5leHQ6IHZlcmIoMCksIFwidGhyb3dcIjogdmVyYigxKSwgXCJyZXR1cm5cIjogdmVyYigyKSB9LCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgKGdbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpczsgfSksIGc7XHJcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cclxuICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHtcclxuICAgICAgICBpZiAoZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7XHJcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XHJcbiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbXCJyZXR1cm5cIl0gOiBvcFswXSA/IHlbXCJ0aHJvd1wiXSB8fCAoKHQgPSB5W1wicmV0dXJuXCJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDtcclxuICAgICAgICAgICAgaWYgKHkgPSAwLCB0KSBvcCA9IFtvcFswXSAmIDIsIHQudmFsdWVdO1xyXG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgNDogXy5sYWJlbCsrOyByZXR1cm4geyB2YWx1ZTogb3BbMV0sIGRvbmU6IGZhbHNlIH07XHJcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSA2ICYmIF8ubGFiZWwgPCB0WzFdKSB7IF8ubGFiZWwgPSB0WzFdOyB0ID0gb3A7IGJyZWFrOyB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTtcclxuICAgICAgICAgICAgICAgICAgICBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pO1xyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHsgb3AgPSBbNiwgZV07IHkgPSAwOyB9IGZpbmFsbHkgeyBmID0gdCA9IDA7IH1cclxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fY3JlYXRlQmluZGluZyhvLCBtLCBrLCBrMikge1xyXG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcclxuICAgIG9bazJdID0gbVtrXTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fZXhwb3J0U3RhcihtLCBleHBvcnRzKSB7XHJcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgZXhwb3J0c1twXSA9IG1bcF07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3ZhbHVlcyhvKSB7XHJcbiAgICB2YXIgcyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBTeW1ib2wuaXRlcmF0b3IsIG0gPSBzICYmIG9bc10sIGkgPSAwO1xyXG4gICAgaWYgKG0pIHJldHVybiBtLmNhbGwobyk7XHJcbiAgICBpZiAobyAmJiB0eXBlb2Ygby5sZW5ndGggPT09IFwibnVtYmVyXCIpIHJldHVybiB7XHJcbiAgICAgICAgbmV4dDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAobyAmJiBpID49IG8ubGVuZ3RoKSBvID0gdm9pZCAwO1xyXG4gICAgICAgICAgICByZXR1cm4geyB2YWx1ZTogbyAmJiBvW2krK10sIGRvbmU6ICFvIH07XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IocyA/IFwiT2JqZWN0IGlzIG5vdCBpdGVyYWJsZS5cIiA6IFwiU3ltYm9sLml0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fcmVhZChvLCBuKSB7XHJcbiAgICB2YXIgbSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl07XHJcbiAgICBpZiAoIW0pIHJldHVybiBvO1xyXG4gICAgdmFyIGkgPSBtLmNhbGwobyksIHIsIGFyID0gW10sIGU7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGVycm9yKSB7IGUgPSB7IGVycm9yOiBlcnJvciB9OyB9XHJcbiAgICBmaW5hbGx5IHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBpZiAociAmJiAhci5kb25lICYmIChtID0gaVtcInJldHVyblwiXSkpIG0uY2FsbChpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZmluYWxseSB7IGlmIChlKSB0aHJvdyBlLmVycm9yOyB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gYXI7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3NwcmVhZCgpIHtcclxuICAgIGZvciAodmFyIGFyID0gW10sIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgIGFyID0gYXIuY29uY2F0KF9fcmVhZChhcmd1bWVudHNbaV0pKTtcclxuICAgIHJldHVybiBhcjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fc3ByZWFkQXJyYXlzKCkge1xyXG4gICAgZm9yICh2YXIgcyA9IDAsIGkgPSAwLCBpbCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBpbDsgaSsrKSBzICs9IGFyZ3VtZW50c1tpXS5sZW5ndGg7XHJcbiAgICBmb3IgKHZhciByID0gQXJyYXkocyksIGsgPSAwLCBpID0gMDsgaSA8IGlsOyBpKyspXHJcbiAgICAgICAgZm9yICh2YXIgYSA9IGFyZ3VtZW50c1tpXSwgaiA9IDAsIGpsID0gYS5sZW5ndGg7IGogPCBqbDsgaisrLCBrKyspXHJcbiAgICAgICAgICAgIHJba10gPSBhW2pdO1xyXG4gICAgcmV0dXJuIHI7XHJcbn07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19hd2FpdCh2KSB7XHJcbiAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIF9fYXdhaXQgPyAodGhpcy52ID0gdiwgdGhpcykgOiBuZXcgX19hd2FpdCh2KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fYXN5bmNHZW5lcmF0b3IodGhpc0FyZywgX2FyZ3VtZW50cywgZ2VuZXJhdG9yKSB7XHJcbiAgICBpZiAoIVN5bWJvbC5hc3luY0l0ZXJhdG9yKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3ltYm9sLmFzeW5jSXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpO1xyXG4gICAgdmFyIGcgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSksIGksIHEgPSBbXTtcclxuICAgIHJldHVybiBpID0ge30sIHZlcmIoXCJuZXh0XCIpLCB2ZXJiKFwidGhyb3dcIiksIHZlcmIoXCJyZXR1cm5cIiksIGlbU3ltYm9sLmFzeW5jSXRlcmF0b3JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSwgaTtcclxuICAgIGZ1bmN0aW9uIHZlcmIobikgeyBpZiAoZ1tuXSkgaVtuXSA9IGZ1bmN0aW9uICh2KSB7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAoYSwgYikgeyBxLnB1c2goW24sIHYsIGEsIGJdKSA+IDEgfHwgcmVzdW1lKG4sIHYpOyB9KTsgfTsgfVxyXG4gICAgZnVuY3Rpb24gcmVzdW1lKG4sIHYpIHsgdHJ5IHsgc3RlcChnW25dKHYpKTsgfSBjYXRjaCAoZSkgeyBzZXR0bGUocVswXVszXSwgZSk7IH0gfVxyXG4gICAgZnVuY3Rpb24gc3RlcChyKSB7IHIudmFsdWUgaW5zdGFuY2VvZiBfX2F3YWl0ID8gUHJvbWlzZS5yZXNvbHZlKHIudmFsdWUudikudGhlbihmdWxmaWxsLCByZWplY3QpIDogc2V0dGxlKHFbMF1bMl0sIHIpOyB9XHJcbiAgICBmdW5jdGlvbiBmdWxmaWxsKHZhbHVlKSB7IHJlc3VtZShcIm5leHRcIiwgdmFsdWUpOyB9XHJcbiAgICBmdW5jdGlvbiByZWplY3QodmFsdWUpIHsgcmVzdW1lKFwidGhyb3dcIiwgdmFsdWUpOyB9XHJcbiAgICBmdW5jdGlvbiBzZXR0bGUoZiwgdikgeyBpZiAoZih2KSwgcS5zaGlmdCgpLCBxLmxlbmd0aCkgcmVzdW1lKHFbMF1bMF0sIHFbMF1bMV0pOyB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2FzeW5jRGVsZWdhdG9yKG8pIHtcclxuICAgIHZhciBpLCBwO1xyXG4gICAgcmV0dXJuIGkgPSB7fSwgdmVyYihcIm5leHRcIiksIHZlcmIoXCJ0aHJvd1wiLCBmdW5jdGlvbiAoZSkgeyB0aHJvdyBlOyB9KSwgdmVyYihcInJldHVyblwiKSwgaVtTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSwgaTtcclxuICAgIGZ1bmN0aW9uIHZlcmIobiwgZikgeyBpW25dID0gb1tuXSA/IGZ1bmN0aW9uICh2KSB7IHJldHVybiAocCA9ICFwKSA/IHsgdmFsdWU6IF9fYXdhaXQob1tuXSh2KSksIGRvbmU6IG4gPT09IFwicmV0dXJuXCIgfSA6IGYgPyBmKHYpIDogdjsgfSA6IGY7IH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fYXN5bmNWYWx1ZXMobykge1xyXG4gICAgaWYgKCFTeW1ib2wuYXN5bmNJdGVyYXRvcikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN5bWJvbC5hc3luY0l0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTtcclxuICAgIHZhciBtID0gb1tTeW1ib2wuYXN5bmNJdGVyYXRvcl0sIGk7XHJcbiAgICByZXR1cm4gbSA/IG0uY2FsbChvKSA6IChvID0gdHlwZW9mIF9fdmFsdWVzID09PSBcImZ1bmN0aW9uXCIgPyBfX3ZhbHVlcyhvKSA6IG9bU3ltYm9sLml0ZXJhdG9yXSgpLCBpID0ge30sIHZlcmIoXCJuZXh0XCIpLCB2ZXJiKFwidGhyb3dcIiksIHZlcmIoXCJyZXR1cm5cIiksIGlbU3ltYm9sLmFzeW5jSXRlcmF0b3JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSwgaSk7XHJcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgaVtuXSA9IG9bbl0gJiYgZnVuY3Rpb24gKHYpIHsgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsgdiA9IG9bbl0odiksIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHYuZG9uZSwgdi52YWx1ZSk7IH0pOyB9OyB9XHJcbiAgICBmdW5jdGlvbiBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCBkLCB2KSB7IFByb21pc2UucmVzb2x2ZSh2KS50aGVuKGZ1bmN0aW9uKHYpIHsgcmVzb2x2ZSh7IHZhbHVlOiB2LCBkb25lOiBkIH0pOyB9LCByZWplY3QpOyB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX21ha2VUZW1wbGF0ZU9iamVjdChjb29rZWQsIHJhdykge1xyXG4gICAgaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29va2VkLCBcInJhd1wiLCB7IHZhbHVlOiByYXcgfSk7IH0gZWxzZSB7IGNvb2tlZC5yYXcgPSByYXc7IH1cclxuICAgIHJldHVybiBjb29rZWQ7XHJcbn07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19pbXBvcnRTdGFyKG1vZCkge1xyXG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcclxuICAgIHZhciByZXN1bHQgPSB7fTtcclxuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSByZXN1bHRba10gPSBtb2Rba107XHJcbiAgICByZXN1bHQuZGVmYXVsdCA9IG1vZDtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2ltcG9ydERlZmF1bHQobW9kKSB7XHJcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IGRlZmF1bHQ6IG1vZCB9O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19jbGFzc1ByaXZhdGVGaWVsZEdldChyZWNlaXZlciwgcHJpdmF0ZU1hcCkge1xyXG4gICAgaWYgKCFwcml2YXRlTWFwLmhhcyhyZWNlaXZlcikpIHtcclxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXR0ZW1wdGVkIHRvIGdldCBwcml2YXRlIGZpZWxkIG9uIG5vbi1pbnN0YW5jZVwiKTtcclxuICAgIH1cclxuICAgIHJldHVybiBwcml2YXRlTWFwLmdldChyZWNlaXZlcik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHJlY2VpdmVyLCBwcml2YXRlTWFwLCB2YWx1ZSkge1xyXG4gICAgaWYgKCFwcml2YXRlTWFwLmhhcyhyZWNlaXZlcikpIHtcclxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXR0ZW1wdGVkIHRvIHNldCBwcml2YXRlIGZpZWxkIG9uIG5vbi1pbnN0YW5jZVwiKTtcclxuICAgIH1cclxuICAgIHByaXZhdGVNYXAuc2V0KHJlY2VpdmVyLCB2YWx1ZSk7XHJcbiAgICByZXR1cm4gdmFsdWU7XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@builder.io/sdk/node_modules/tslib/tslib.es6.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/core/dist/core.browser.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@emotion/core/dist/core.browser.esm.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheProvider: function() { return /* reexport safe */ _emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.C; },\n/* harmony export */   ClassNames: function() { return /* binding */ ClassNames; },\n/* harmony export */   Global: function() { return /* binding */ Global; },\n/* harmony export */   ThemeContext: function() { return /* reexport safe */ _emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.T; },\n/* harmony export */   createElement: function() { return /* binding */ jsx; },\n/* harmony export */   css: function() { return /* reexport safe */ _emotion_css__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; },\n/* harmony export */   jsx: function() { return /* binding */ jsx; },\n/* harmony export */   keyframes: function() { return /* binding */ keyframes; },\n/* harmony export */   withEmotionCache: function() { return /* reexport safe */ _emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.w; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/cache */ \"./node_modules/@emotion/core/node_modules/@emotion/cache/dist/cache.browser.esm.js\");\n/* harmony import */ var _emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./emotion-element-04d85134.browser.esm.js */ \"./node_modules/@emotion/core/dist/emotion-element-04d85134.browser.esm.js\");\n/* harmony import */ var _emotion_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/utils */ \"./node_modules/@emotion/core/node_modules/@emotion/utils/dist/utils.browser.esm.js\");\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/serialize */ \"./node_modules/@emotion/core/node_modules/@emotion/serialize/dist/serialize.browser.esm.js\");\n/* harmony import */ var _emotion_sheet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/sheet */ \"./node_modules/@emotion/core/node_modules/@emotion/sheet/dist/sheet.browser.esm.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/css.browser.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !_emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.h.call(props, 'css')) {\n    // $FlowFixMe\n    return react__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = _emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.E;\n  createElementArgArray[1] = (0,_emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.c)(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return react__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false;\nvar Global = /* #__PURE__ */(0,_emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.w)(function (props, cache) {\n  if ( true && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n\n  if (typeof styles === 'function') {\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.T.Consumer, null, function (theme) {\n      var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_5__.serializeStyles)([styles(theme)]);\n      return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerGlobal, {\n        serialized: serialized,\n        cache: cache\n      });\n    });\n  }\n\n  var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_5__.serializeStyles)([styles]);\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerGlobal, {\n    serialized: serialized,\n    cache: cache\n  });\n});\n\n// maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\nvar InnerGlobal = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(InnerGlobal, _React$Component);\n\n  function InnerGlobal(props, context, updater) {\n    return _React$Component.call(this, props, context, updater) || this;\n  }\n\n  var _proto = InnerGlobal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.sheet = new _emotion_sheet__WEBPACK_IMPORTED_MODULE_6__.StyleSheet({\n      key: this.props.cache.key + \"-global\",\n      nonce: this.props.cache.sheet.nonce,\n      container: this.props.cache.sheet.container\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\n    if (node !== null) {\n      this.sheet.tags.push(node);\n    }\n\n    if (this.props.cache.sheet.tags.length) {\n      this.sheet.before = this.props.cache.sheet.tags[0];\n    }\n\n    this.insertStyles();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.serialized.name !== this.props.serialized.name) {\n      this.insertStyles();\n    }\n  };\n\n  _proto.insertStyles = function insertStyles$1() {\n    if (this.props.serialized.next !== undefined) {\n      // insert keyframes\n      (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_4__.insertStyles)(this.props.cache, this.props.serialized.next, true);\n    }\n\n    if (this.sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n      this.sheet.before = element;\n      this.sheet.flush();\n    }\n\n    this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.sheet.flush();\n  };\n\n  _proto.render = function render() {\n\n    return null;\n  };\n\n  return InnerGlobal;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\n\nvar keyframes = function keyframes() {\n  var insertable = _emotion_css__WEBPACK_IMPORTED_MODULE_7__[\"default\"].apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_4__.getRegisteredStyles)(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Noop = function Noop() {\n  return null;\n};\n\nvar ClassNames = (0,_emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.w)(function (props, context) {\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.T.Consumer, null, function (theme) {\n    var hasRendered = false;\n\n    var css = function css() {\n      if (hasRendered && \"development\" !== 'production') {\n        throw new Error('css can only be used during render');\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_5__.serializeStyles)(args, context.registered);\n\n      {\n        (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_4__.insertStyles)(context, serialized, false);\n      }\n\n      return context.key + \"-\" + serialized.name;\n    };\n\n    var cx = function cx() {\n      if (hasRendered && \"development\" !== 'production') {\n        throw new Error('cx can only be used during render');\n      }\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return merge(context.registered, css, classnames(args));\n    };\n\n    var content = {\n      css: css,\n      cx: cx,\n      theme: theme\n    };\n    var ele = props.children(content);\n    hasRendered = true;\n    var possiblyStyleElement = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(Noop, null);\n\n\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, possiblyStyleElement, ele);\n  });\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/core/dist/core.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/core/dist/emotion-element-04d85134.browser.esm.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@emotion/core/dist/emotion-element-04d85134.browser.esm.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: function() { return /* binding */ CacheProvider; },\n/* harmony export */   E: function() { return /* binding */ Emotion; },\n/* harmony export */   T: function() { return /* binding */ ThemeContext; },\n/* harmony export */   c: function() { return /* binding */ createEmotionProps; },\n/* harmony export */   h: function() { return /* binding */ hasOwnProperty; },\n/* harmony export */   w: function() { return /* binding */ withEmotionCache; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/cache */ \"./node_modules/@emotion/core/node_modules/@emotion/cache/dist/cache.browser.esm.js\");\n/* harmony import */ var _emotion_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/utils */ \"./node_modules/@emotion/core/node_modules/@emotion/utils/dist/utils.browser.esm.js\");\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/serialize */ \"./node_modules/@emotion/core/node_modules/@emotion/serialize/dist/serialize.browser.esm.js\");\n\n\n\n\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar EmotionCacheContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? (0,_emotion_cache__WEBPACK_IMPORTED_MODULE_2__[\"default\"])() : null);\nvar ThemeContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(render);\n};\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if ( true && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // TODO: check if this still works with all of those different JSX functions\n\n  if (true) {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)(?:jsx|createEmotionProps).*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  return newProps;\n};\n\nvar Noop = function Noop() {\n  return null;\n};\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_3__.getRegisteredStyles)(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__.serializeStyles)(registeredStyles);\n\n  if ( true && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__.serializeStyles)([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_3__.insertStyles)(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && ( false || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(type, newProps);\n  var possiblyStyleElement = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(Noop, null);\n\n\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, possiblyStyleElement, ele);\n}; // eslint-disable-next-line no-undef\n\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  if (typeof props.css === 'function') {\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (true) {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/core/dist/emotion-element-04d85134.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/core/node_modules/@emotion/cache/dist/cache.browser.esm.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@emotion/core/node_modules/@emotion/cache/dist/cache.browser.esm.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_sheet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/sheet */ \"./node_modules/@emotion/core/node_modules/@emotion/sheet/dist/sheet.browser.esm.js\");\n/* harmony import */ var _emotion_stylis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/stylis */ \"./node_modules/@emotion/stylis/dist/stylis.browser.esm.js\");\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/weak-memoize */ \"./node_modules/@emotion/core/node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js\");\n\n\n\n\n// https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new _emotion_stylis__WEBPACK_IMPORTED_MODULE_1__[\"default\"](stylisOptions);\n\n  if (true) {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if ( true && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (true) {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new _emotion_sheet__WEBPACK_IMPORTED_MODULE_0__.StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (createCache);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/core/node_modules/@emotion/cache/dist/cache.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/core/node_modules/@emotion/hash/dist/hash.browser.esm.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@emotion/core/node_modules/@emotion/hash/dist/hash.browser.esm.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (murmur2);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaGFzaC9kaXN0L2hhc2guYnJvd3Nlci5lc20uanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7O0FBRWI7QUFDQTtBQUNBOztBQUVBLFNBQVMsVUFBVTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJOzs7QUFHSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0RBQWUsT0FBTyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9jb3JlL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9oYXNoL2Rpc3QvaGFzaC5icm93c2VyLmVzbS5qcz81OTZhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG4vLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vZ2FyeWNvdXJ0L211cm11cmhhc2gtanNcbi8vIFBvcnRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hYXBwbGVieS9zbWhhc2hlci9ibG9iLzYxYTA1MzBmMjgyNzdmMmU4NTBiZmMzOTYwMGNlNjFkMDJiNTE4ZGUvc3JjL011cm11ckhhc2gyLmNwcCNMMzctTDg2XG5mdW5jdGlvbiBtdXJtdXIyKHN0cikge1xuICAvLyAnbScgYW5kICdyJyBhcmUgbWl4aW5nIGNvbnN0YW50cyBnZW5lcmF0ZWQgb2ZmbGluZS5cbiAgLy8gVGhleSdyZSBub3QgcmVhbGx5ICdtYWdpYycsIHRoZXkganVzdCBoYXBwZW4gdG8gd29yayB3ZWxsLlxuICAvLyBjb25zdCBtID0gMHg1YmQxZTk5NTtcbiAgLy8gY29uc3QgciA9IDI0O1xuICAvLyBJbml0aWFsaXplIHRoZSBoYXNoXG4gIHZhciBoID0gMDsgLy8gTWl4IDQgYnl0ZXMgYXQgYSB0aW1lIGludG8gdGhlIGhhc2hcblxuICB2YXIgayxcbiAgICAgIGkgPSAwLFxuICAgICAgbGVuID0gc3RyLmxlbmd0aDtcblxuICBmb3IgKDsgbGVuID49IDQ7ICsraSwgbGVuIC09IDQpIHtcbiAgICBrID0gc3RyLmNoYXJDb2RlQXQoaSkgJiAweGZmIHwgKHN0ci5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCA4IHwgKHN0ci5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCAxNiB8IChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgMjQ7XG4gICAgayA9XG4gICAgLyogTWF0aC5pbXVsKGssIG0pOiAqL1xuICAgIChrICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGsgPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gICAgayBePVxuICAgIC8qIGsgPj4+IHI6ICovXG4gICAgayA+Pj4gMjQ7XG4gICAgaCA9XG4gICAgLyogTWF0aC5pbXVsKGssIG0pOiAqL1xuICAgIChrICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGsgPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNikgXlxuICAgIC8qIE1hdGguaW11bChoLCBtKTogKi9cbiAgICAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChoID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICB9IC8vIEhhbmRsZSB0aGUgbGFzdCBmZXcgYnl0ZXMgb2YgdGhlIGlucHV0IGFycmF5XG5cblxuICBzd2l0Y2ggKGxlbikge1xuICAgIGNhc2UgMzpcbiAgICAgIGggXj0gKHN0ci5jaGFyQ29kZUF0KGkgKyAyKSAmIDB4ZmYpIDw8IDE2O1xuXG4gICAgY2FzZSAyOlxuICAgICAgaCBePSAoc3RyLmNoYXJDb2RlQXQoaSArIDEpICYgMHhmZikgPDwgODtcblxuICAgIGNhc2UgMTpcbiAgICAgIGggXj0gc3RyLmNoYXJDb2RlQXQoaSkgJiAweGZmO1xuICAgICAgaCA9XG4gICAgICAvKiBNYXRoLmltdWwoaCwgbSk6ICovXG4gICAgICAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChoID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICB9IC8vIERvIGEgZmV3IGZpbmFsIG1peGVzIG9mIHRoZSBoYXNoIHRvIGVuc3VyZSB0aGUgbGFzdCBmZXdcbiAgLy8gYnl0ZXMgYXJlIHdlbGwtaW5jb3Jwb3JhdGVkLlxuXG5cbiAgaCBePSBoID4+PiAxMztcbiAgaCA9XG4gIC8qIE1hdGguaW11bChoLCBtKTogKi9cbiAgKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoaCA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgcmV0dXJuICgoaCBeIGggPj4+IDE1KSA+Pj4gMCkudG9TdHJpbmcoMzYpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtdXJtdXIyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/core/node_modules/@emotion/hash/dist/hash.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/core/node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@emotion/core/node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nfunction memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (memoize);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLCtEQUFlLE9BQU8sRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanM/ZmMwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/core/node_modules/@emotion/memoize/dist/memoize.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/core/node_modules/@emotion/serialize/dist/serialize.browser.esm.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@emotion/core/node_modules/@emotion/serialize/dist/serialize.browser.esm.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeStyles: function() { return /* binding */ serializeStyles; }\n/* harmony export */ });\n/* harmony import */ var _emotion_hash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/hash */ \"./node_modules/@emotion/core/node_modules/@emotion/hash/dist/hash.browser.esm.js\");\n/* harmony import */ var _emotion_unitless__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/unitless */ \"./node_modules/@emotion/core/node_modules/@emotion/unitless/dist/unitless.browser.esm.js\");\n/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/memoize */ \"./node_modules/@emotion/core/node_modules/@emotion/memoize/dist/memoize.browser.esm.js\");\n\n\n\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = (0,_emotion_memoize__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (_emotion_unitless__WEBPACK_IMPORTED_MODULE_1__[\"default\"][key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (true) {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if ( true && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if ( true && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (true) {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (true) {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if ( true && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && \"development\" !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if ( true && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (true) {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if ( true && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if ( true && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (true) {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = (0,_emotion_hash__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(styles) + identifierName;\n\n  if (true) {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/core/node_modules/@emotion/serialize/dist/serialize.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/core/node_modules/@emotion/sheet/dist/sheet.browser.esm.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@emotion/core/node_modules/@emotion/sheet/dist/sheet.browser.esm.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StyleSheet: function() { return /* binding */ StyleSheet; }\n/* harmony export */ });\n/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? \"development\" === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n\n      var before;\n\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule, // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (true) {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc2hlZXQvZGlzdC9zaGVldC5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQSxTQUFTLGFBQWE7O0FBRXRCLGtDQUFrQyxtQ0FBbUM7O0FBRXJFLDBCQUEwQix3QkFBd0I7QUFDbEQ7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJOztBQUVKOzs7QUFHQSxrQkFBa0IsaUNBQWlDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxhQUFvQjtBQUN2RTtBQUNBO0FBQ0EsZ0NBQWdDOztBQUVoQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRkFBb0Y7QUFDcEY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1IsWUFBWSxJQUFxQztBQUNqRDtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLENBQUM7O0FBRXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9jb3JlL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zaGVldC9kaXN0L3NoZWV0LmJyb3dzZXIuZXNtLmpzPzI0NjgiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblxuQmFzZWQgb2ZmIGdsYW1vcidzIFN0eWxlU2hlZXQsIHRoYW5rcyBTdW5pbCDinaTvuI9cblxuaGlnaCBwZXJmb3JtYW5jZSBTdHlsZVNoZWV0IGZvciBjc3MtaW4tanMgc3lzdGVtc1xuXG4tIHVzZXMgbXVsdGlwbGUgc3R5bGUgdGFncyBiZWhpbmQgdGhlIHNjZW5lcyBmb3IgbWlsbGlvbnMgb2YgcnVsZXNcbi0gdXNlcyBgaW5zZXJ0UnVsZWAgZm9yIGFwcGVuZGluZyBpbiBwcm9kdWN0aW9uIGZvciAqbXVjaCogZmFzdGVyIHBlcmZvcm1hbmNlXG5cbi8vIHVzYWdlXG5cbmltcG9ydCB7IFN0eWxlU2hlZXQgfSBmcm9tICdAZW1vdGlvbi9zaGVldCdcblxubGV0IHN0eWxlU2hlZXQgPSBuZXcgU3R5bGVTaGVldCh7IGtleTogJycsIGNvbnRhaW5lcjogZG9jdW1lbnQuaGVhZCB9KVxuXG5zdHlsZVNoZWV0Lmluc2VydCgnI2JveCB7IGJvcmRlcjogMXB4IHNvbGlkIHJlZDsgfScpXG4tIGFwcGVuZHMgYSBjc3MgcnVsZSBpbnRvIHRoZSBzdHlsZXNoZWV0XG5cbnN0eWxlU2hlZXQuZmx1c2goKVxuLSBlbXB0aWVzIHRoZSBzdHlsZXNoZWV0IG9mIGFsbCBpdHMgY29udGVudHNcblxuKi9cbi8vICRGbG93Rml4TWVcbmZ1bmN0aW9uIHNoZWV0Rm9yVGFnKHRhZykge1xuICBpZiAodGFnLnNoZWV0KSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIHJldHVybiB0YWcuc2hlZXQ7XG4gIH0gLy8gdGhpcyB3ZWlyZG5lc3MgYnJvdWdodCB0byB5b3UgYnkgZmlyZWZveFxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGRvY3VtZW50LnN0eWxlU2hlZXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGRvY3VtZW50LnN0eWxlU2hlZXRzW2ldLm93bmVyTm9kZSA9PT0gdGFnKSB7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICByZXR1cm4gZG9jdW1lbnQuc3R5bGVTaGVldHNbaV07XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB0YWcuc2V0QXR0cmlidXRlKCdkYXRhLWVtb3Rpb24nLCBvcHRpb25zLmtleSk7XG5cbiAgaWYgKG9wdGlvbnMubm9uY2UgIT09IHVuZGVmaW5lZCkge1xuICAgIHRhZy5zZXRBdHRyaWJ1dGUoJ25vbmNlJywgb3B0aW9ucy5ub25jZSk7XG4gIH1cblxuICB0YWcuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpKTtcbiAgcmV0dXJuIHRhZztcbn1cblxudmFyIFN0eWxlU2hlZXQgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTdHlsZVNoZWV0KG9wdGlvbnMpIHtcbiAgICB0aGlzLmlzU3BlZWR5ID0gb3B0aW9ucy5zcGVlZHkgPT09IHVuZGVmaW5lZCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgOiBvcHRpb25zLnNwZWVkeTtcbiAgICB0aGlzLnRhZ3MgPSBbXTtcbiAgICB0aGlzLmN0ciA9IDA7XG4gICAgdGhpcy5ub25jZSA9IG9wdGlvbnMubm9uY2U7IC8vIGtleSBpcyB0aGUgdmFsdWUgb2YgdGhlIGRhdGEtZW1vdGlvbiBhdHRyaWJ1dGUsIGl0J3MgdXNlZCB0byBpZGVudGlmeSBkaWZmZXJlbnQgc2hlZXRzXG5cbiAgICB0aGlzLmtleSA9IG9wdGlvbnMua2V5O1xuICAgIHRoaXMuY29udGFpbmVyID0gb3B0aW9ucy5jb250YWluZXI7XG4gICAgdGhpcy5iZWZvcmUgPSBudWxsO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN0eWxlU2hlZXQucHJvdG90eXBlO1xuXG4gIF9wcm90by5pbnNlcnQgPSBmdW5jdGlvbiBpbnNlcnQocnVsZSkge1xuICAgIC8vIHRoZSBtYXggbGVuZ3RoIGlzIGhvdyBtYW55IHJ1bGVzIHdlIGhhdmUgcGVyIHN0eWxlIHRhZywgaXQncyA2NTAwMCBpbiBzcGVlZHkgbW9kZVxuICAgIC8vIGl0J3MgMSBpbiBkZXYgYmVjYXVzZSB3ZSBpbnNlcnQgc291cmNlIG1hcHMgdGhhdCBtYXAgYSBzaW5nbGUgcnVsZSB0byBhIGxvY2F0aW9uXG4gICAgLy8gYW5kIHlvdSBjYW4gb25seSBoYXZlIG9uZSBzb3VyY2UgbWFwIHBlciBzdHlsZSB0YWdcbiAgICBpZiAodGhpcy5jdHIgJSAodGhpcy5pc1NwZWVkeSA/IDY1MDAwIDogMSkgPT09IDApIHtcbiAgICAgIHZhciBfdGFnID0gY3JlYXRlU3R5bGVFbGVtZW50KHRoaXMpO1xuXG4gICAgICB2YXIgYmVmb3JlO1xuXG4gICAgICBpZiAodGhpcy50YWdzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBiZWZvcmUgPSB0aGlzLmJlZm9yZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJlZm9yZSA9IHRoaXMudGFnc1t0aGlzLnRhZ3MubGVuZ3RoIC0gMV0ubmV4dFNpYmxpbmc7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY29udGFpbmVyLmluc2VydEJlZm9yZShfdGFnLCBiZWZvcmUpO1xuICAgICAgdGhpcy50YWdzLnB1c2goX3RhZyk7XG4gICAgfVxuXG4gICAgdmFyIHRhZyA9IHRoaXMudGFnc1t0aGlzLnRhZ3MubGVuZ3RoIC0gMV07XG5cbiAgICBpZiAodGhpcy5pc1NwZWVkeSkge1xuICAgICAgdmFyIHNoZWV0ID0gc2hlZXRGb3JUYWcodGFnKTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gdGhpcyBpcyBhIHJlYWxseSBob3QgcGF0aFxuICAgICAgICAvLyB3ZSBjaGVjayB0aGUgc2Vjb25kIGNoYXJhY3RlciBmaXJzdCBiZWNhdXNlIGhhdmluZyBcImlcIlxuICAgICAgICAvLyBhcyB0aGUgc2Vjb25kIGNoYXJhY3RlciB3aWxsIGhhcHBlbiBsZXNzIG9mdGVuIHRoYW5cbiAgICAgICAgLy8gaGF2aW5nIFwiQFwiIGFzIHRoZSBmaXJzdCBjaGFyYWN0ZXJcbiAgICAgICAgdmFyIGlzSW1wb3J0UnVsZSA9IHJ1bGUuY2hhckNvZGVBdCgxKSA9PT0gMTA1ICYmIHJ1bGUuY2hhckNvZGVBdCgwKSA9PT0gNjQ7IC8vIHRoaXMgaXMgdGhlIHVsdHJhZmFzdCB2ZXJzaW9uLCB3b3JrcyBhY3Jvc3MgYnJvd3NlcnNcbiAgICAgICAgLy8gdGhlIGJpZyBkcmF3YmFjayBpcyB0aGF0IHRoZSBjc3Mgd29uJ3QgYmUgZWRpdGFibGUgaW4gZGV2dG9vbHNcblxuICAgICAgICBzaGVldC5pbnNlcnRSdWxlKHJ1bGUsIC8vIHdlIG5lZWQgdG8gaW5zZXJ0IEBpbXBvcnQgcnVsZXMgYmVmb3JlIGFueXRoaW5nIGVsc2VcbiAgICAgICAgLy8gb3RoZXJ3aXNlIHRoZXJlIHdpbGwgYmUgYW4gZXJyb3JcbiAgICAgICAgLy8gdGVjaG5pY2FsbHkgdGhpcyBtZWFucyB0aGF0IHRoZSBAaW1wb3J0IHJ1bGVzIHdpbGxcbiAgICAgICAgLy8gX3VzdWFsbHlfKG5vdCBhbHdheXMgc2luY2UgdGhlcmUgY291bGQgYmUgbXVsdGlwbGUgc3R5bGUgdGFncylcbiAgICAgICAgLy8gYmUgdGhlIGZpcnN0IG9uZXMgaW4gcHJvZCBhbmQgZ2VuZXJhbGx5IGxhdGVyIGluIGRldlxuICAgICAgICAvLyB0aGlzIHNob3VsZG4ndCByZWFsbHkgbWF0dGVyIGluIHRoZSByZWFsIHdvcmxkIHRob3VnaFxuICAgICAgICAvLyBAaW1wb3J0IGlzIGdlbmVyYWxseSBvbmx5IHVzZWQgZm9yIGZvbnQgZmFjZXMgZnJvbSBnb29nbGUgZm9udHMgYW5kIGV0Yy5cbiAgICAgICAgLy8gc28gd2hpbGUgdGhpcyBjb3VsZCBiZSB0ZWNobmljYWxseSBjb3JyZWN0IHRoZW4gaXQgd291bGQgYmUgc2xvd2VyIGFuZCBsYXJnZXJcbiAgICAgICAgLy8gZm9yIGEgdGlueSBiaXQgb2YgY29ycmVjdG5lc3MgdGhhdCB3b24ndCBtYXR0ZXIgaW4gdGhlIHJlYWwgd29ybGRcbiAgICAgICAgaXNJbXBvcnRSdWxlID8gMCA6IHNoZWV0LmNzc1J1bGVzLmxlbmd0aCk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiVGhlcmUgd2FzIGEgcHJvYmxlbSBpbnNlcnRpbmcgdGhlIGZvbGxvd2luZyBydWxlOiBcXFwiXCIgKyBydWxlICsgXCJcXFwiXCIsIGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShydWxlKSk7XG4gICAgfVxuXG4gICAgdGhpcy5jdHIrKztcbiAgfTtcblxuICBfcHJvdG8uZmx1c2ggPSBmdW5jdGlvbiBmbHVzaCgpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgdGhpcy50YWdzLmZvckVhY2goZnVuY3Rpb24gKHRhZykge1xuICAgICAgcmV0dXJuIHRhZy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRhZyk7XG4gICAgfSk7XG4gICAgdGhpcy50YWdzID0gW107XG4gICAgdGhpcy5jdHIgPSAwO1xuICB9O1xuXG4gIHJldHVybiBTdHlsZVNoZWV0O1xufSgpO1xuXG5leHBvcnQgeyBTdHlsZVNoZWV0IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@emotion/core/node_modules/@emotion/sheet/dist/sheet.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/core/node_modules/@emotion/unitless/dist/unitless.browser.esm.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@emotion/core/node_modules/@emotion/unitless/dist/unitless.browser.esm.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nvar unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (unitlessKeys);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLCtEQUFlLFlBQVksRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcz82YmMxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB1bml0bGVzc0tleXMgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAxLFxuICBib3JkZXJJbWFnZU91dHNldDogMSxcbiAgYm9yZGVySW1hZ2VTbGljZTogMSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogMSxcbiAgYm94RmxleDogMSxcbiAgYm94RmxleEdyb3VwOiAxLFxuICBib3hPcmRpbmFsR3JvdXA6IDEsXG4gIGNvbHVtbkNvdW50OiAxLFxuICBjb2x1bW5zOiAxLFxuICBmbGV4OiAxLFxuICBmbGV4R3JvdzogMSxcbiAgZmxleFBvc2l0aXZlOiAxLFxuICBmbGV4U2hyaW5rOiAxLFxuICBmbGV4TmVnYXRpdmU6IDEsXG4gIGZsZXhPcmRlcjogMSxcbiAgZ3JpZFJvdzogMSxcbiAgZ3JpZFJvd0VuZDogMSxcbiAgZ3JpZFJvd1NwYW46IDEsXG4gIGdyaWRSb3dTdGFydDogMSxcbiAgZ3JpZENvbHVtbjogMSxcbiAgZ3JpZENvbHVtbkVuZDogMSxcbiAgZ3JpZENvbHVtblNwYW46IDEsXG4gIGdyaWRDb2x1bW5TdGFydDogMSxcbiAgbXNHcmlkUm93OiAxLFxuICBtc0dyaWRSb3dTcGFuOiAxLFxuICBtc0dyaWRDb2x1bW46IDEsXG4gIG1zR3JpZENvbHVtblNwYW46IDEsXG4gIGZvbnRXZWlnaHQ6IDEsXG4gIGxpbmVIZWlnaHQ6IDEsXG4gIG9wYWNpdHk6IDEsXG4gIG9yZGVyOiAxLFxuICBvcnBoYW5zOiAxLFxuICB0YWJTaXplOiAxLFxuICB3aWRvd3M6IDEsXG4gIHpJbmRleDogMSxcbiAgem9vbTogMSxcbiAgV2Via2l0TGluZUNsYW1wOiAxLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiAxLFxuICBmbG9vZE9wYWNpdHk6IDEsXG4gIHN0b3BPcGFjaXR5OiAxLFxuICBzdHJva2VEYXNoYXJyYXk6IDEsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IDEsXG4gIHN0cm9rZU1pdGVybGltaXQ6IDEsXG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gIHN0cm9rZVdpZHRoOiAxXG59O1xuXG5leHBvcnQgZGVmYXVsdCB1bml0bGVzc0tleXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@emotion/core/node_modules/@emotion/unitless/dist/unitless.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/core/node_modules/@emotion/utils/dist/utils.browser.esm.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@emotion/core/node_modules/@emotion/utils/dist/utils.browser.esm.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRegisteredStyles: function() { return /* binding */ getRegisteredStyles; },\n/* harmony export */   insertStyles: function() { return /* binding */ insertStyles; }\n/* harmony export */ });\nvar isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className]);\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdXRpbHMvZGlzdC91dGlscy5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2NvcmUvbm9kZV9tb2R1bGVzL0BlbW90aW9uL3V0aWxzL2Rpc3QvdXRpbHMuYnJvd3Nlci5lc20uanM/OTM3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNCcm93c2VyID0gXCJvYmplY3RcIiAhPT0gJ3VuZGVmaW5lZCc7XG5mdW5jdGlvbiBnZXRSZWdpc3RlcmVkU3R5bGVzKHJlZ2lzdGVyZWQsIHJlZ2lzdGVyZWRTdHlsZXMsIGNsYXNzTmFtZXMpIHtcbiAgdmFyIHJhd0NsYXNzTmFtZSA9ICcnO1xuICBjbGFzc05hbWVzLnNwbGl0KCcgJykuZm9yRWFjaChmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgaWYgKHJlZ2lzdGVyZWRbY2xhc3NOYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZWdpc3RlcmVkU3R5bGVzLnB1c2gocmVnaXN0ZXJlZFtjbGFzc05hbWVdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmF3Q2xhc3NOYW1lICs9IGNsYXNzTmFtZSArIFwiIFwiO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByYXdDbGFzc05hbWU7XG59XG52YXIgaW5zZXJ0U3R5bGVzID0gZnVuY3Rpb24gaW5zZXJ0U3R5bGVzKGNhY2hlLCBzZXJpYWxpemVkLCBpc1N0cmluZ1RhZykge1xuICB2YXIgY2xhc3NOYW1lID0gY2FjaGUua2V5ICsgXCItXCIgKyBzZXJpYWxpemVkLm5hbWU7XG5cbiAgaWYgKCAvLyB3ZSBvbmx5IG5lZWQgdG8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIHJlZ2lzdGVyZWQgY2FjaGUgaWYgdGhlXG4gIC8vIGNsYXNzIG5hbWUgY291bGQgYmUgdXNlZCBmdXJ0aGVyIGRvd25cbiAgLy8gdGhlIHRyZWUgYnV0IGlmIGl0J3MgYSBzdHJpbmcgdGFnLCB3ZSBrbm93IGl0IHdvbid0XG4gIC8vIHNvIHdlIGRvbid0IGhhdmUgdG8gYWRkIGl0IHRvIHJlZ2lzdGVyZWQgY2FjaGUuXG4gIC8vIHRoaXMgaW1wcm92ZXMgbWVtb3J5IHVzYWdlIHNpbmNlIHdlIGNhbiBhdm9pZCBzdG9yaW5nIHRoZSB3aG9sZSBzdHlsZSBzdHJpbmdcbiAgKGlzU3RyaW5nVGFnID09PSBmYWxzZSB8fCAvLyB3ZSBuZWVkIHRvIGFsd2F5cyBzdG9yZSBpdCBpZiB3ZSdyZSBpbiBjb21wYXQgbW9kZSBhbmRcbiAgLy8gaW4gbm9kZSBzaW5jZSBlbW90aW9uLXNlcnZlciByZWxpZXMgb24gd2hldGhlciBhIHN0eWxlIGlzIGluXG4gIC8vIHRoZSByZWdpc3RlcmVkIGNhY2hlIHRvIGtub3cgd2hldGhlciBhIHN0eWxlIGlzIGdsb2JhbCBvciBub3RcbiAgLy8gYWxzbywgbm90ZSB0aGF0IHRoaXMgY2hlY2sgd2lsbCBiZSBkZWFkIGNvZGUgZWxpbWluYXRlZCBpbiB0aGUgYnJvd3NlclxuICBpc0Jyb3dzZXIgPT09IGZhbHNlICYmIGNhY2hlLmNvbXBhdCAhPT0gdW5kZWZpbmVkKSAmJiBjYWNoZS5yZWdpc3RlcmVkW2NsYXNzTmFtZV0gPT09IHVuZGVmaW5lZCkge1xuICAgIGNhY2hlLnJlZ2lzdGVyZWRbY2xhc3NOYW1lXSA9IHNlcmlhbGl6ZWQuc3R5bGVzO1xuICB9XG5cbiAgaWYgKGNhY2hlLmluc2VydGVkW3NlcmlhbGl6ZWQubmFtZV0gPT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBjdXJyZW50ID0gc2VyaWFsaXplZDtcblxuICAgIGRvIHtcbiAgICAgIHZhciBtYXliZVN0eWxlcyA9IGNhY2hlLmluc2VydChcIi5cIiArIGNsYXNzTmFtZSwgY3VycmVudCwgY2FjaGUuc2hlZXQsIHRydWUpO1xuXG4gICAgICBjdXJyZW50ID0gY3VycmVudC5uZXh0O1xuICAgIH0gd2hpbGUgKGN1cnJlbnQgIT09IHVuZGVmaW5lZCk7XG4gIH1cbn07XG5cbmV4cG9ydCB7IGdldFJlZ2lzdGVyZWRTdHlsZXMsIGluc2VydFN0eWxlcyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/core/node_modules/@emotion/utils/dist/utils.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/core/node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@emotion/core/node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nvar weakMemoize = function weakMemoize(func) {\n  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps\n  var cache = new WeakMap();\n  return function (arg) {\n    if (cache.has(arg)) {\n      // $FlowFixMe\n      return cache.get(arg);\n    }\n\n    var ret = func(arg);\n    cache.set(arg, ret);\n    return ret;\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (weakMemoize);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9ub2RlX21vZHVsZXMvQGVtb3Rpb24vd2Vhay1tZW1vaXplL2Rpc3Qvd2Vhay1tZW1vaXplLmJyb3dzZXIuZXNtLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0RBQWUsV0FBVyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9jb3JlL25vZGVfbW9kdWxlcy9AZW1vdGlvbi93ZWFrLW1lbW9pemUvZGlzdC93ZWFrLW1lbW9pemUuYnJvd3Nlci5lc20uanM/MmRjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgd2Vha01lbW9pemUgPSBmdW5jdGlvbiB3ZWFrTWVtb2l6ZShmdW5jKSB7XG4gIC8vICRGbG93Rml4TWUgZmxvdyBkb2Vzbid0IGluY2x1ZGUgYWxsIG5vbi1wcmltaXRpdmUgdHlwZXMgYXMgYWxsb3dlZCBmb3Igd2Vha21hcHNcbiAgdmFyIGNhY2hlID0gbmV3IFdlYWtNYXAoKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICBpZiAoY2FjaGUuaGFzKGFyZykpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIHJldHVybiBjYWNoZS5nZXQoYXJnKTtcbiAgICB9XG5cbiAgICB2YXIgcmV0ID0gZnVuYyhhcmcpO1xuICAgIGNhY2hlLnNldChhcmcsIHJldCk7XG4gICAgcmV0dXJuIHJldDtcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHdlYWtNZW1vaXplO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/core/node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/css/dist/css.browser.esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/@emotion/css/dist/css.browser.esm.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/serialize */ \"./node_modules/@emotion/css/node_modules/@emotion/serialize/dist/serialize.browser.esm.js\");\n\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_0__.serializeStyles)(args);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (css);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY3NzL2Rpc3QvY3NzLmJyb3dzZXIuZXNtLmpzIiwibWFwcGluZ3MiOiI7O0FBQXFEOztBQUVyRDtBQUNBLHNFQUFzRSxhQUFhO0FBQ25GO0FBQ0E7O0FBRUEsU0FBUyxtRUFBZTtBQUN4Qjs7QUFFQSwrREFBZSxHQUFHLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2Nzcy9kaXN0L2Nzcy5icm93c2VyLmVzbS5qcz80ZGFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlcmlhbGl6ZVN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3NlcmlhbGl6ZSc7XG5cbmZ1bmN0aW9uIGNzcygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBzZXJpYWxpemVTdHlsZXMoYXJncyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNzcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@emotion/css/dist/css.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/css/node_modules/@emotion/hash/dist/hash.browser.esm.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@emotion/css/node_modules/@emotion/hash/dist/hash.browser.esm.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (murmur2);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY3NzL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9oYXNoL2Rpc3QvaGFzaC5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7O0FBRUEsU0FBUyxVQUFVO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7OztBQUdKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwrREFBZSxPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2Nzcy9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaGFzaC9kaXN0L2hhc2guYnJvd3Nlci5lc20uanM/NjlhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL2dhcnljb3VydC9tdXJtdXJoYXNoLWpzXG4vLyBQb3J0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vYWFwcGxlYnkvc21oYXNoZXIvYmxvYi82MWEwNTMwZjI4Mjc3ZjJlODUwYmZjMzk2MDBjZTYxZDAyYjUxOGRlL3NyYy9NdXJtdXJIYXNoMi5jcHAjTDM3LUw4NlxuZnVuY3Rpb24gbXVybXVyMihzdHIpIHtcbiAgLy8gJ20nIGFuZCAncicgYXJlIG1peGluZyBjb25zdGFudHMgZ2VuZXJhdGVkIG9mZmxpbmUuXG4gIC8vIFRoZXkncmUgbm90IHJlYWxseSAnbWFnaWMnLCB0aGV5IGp1c3QgaGFwcGVuIHRvIHdvcmsgd2VsbC5cbiAgLy8gY29uc3QgbSA9IDB4NWJkMWU5OTU7XG4gIC8vIGNvbnN0IHIgPSAyNDtcbiAgLy8gSW5pdGlhbGl6ZSB0aGUgaGFzaFxuICB2YXIgaCA9IDA7IC8vIE1peCA0IGJ5dGVzIGF0IGEgdGltZSBpbnRvIHRoZSBoYXNoXG5cbiAgdmFyIGssXG4gICAgICBpID0gMCxcbiAgICAgIGxlbiA9IHN0ci5sZW5ndGg7XG5cbiAgZm9yICg7IGxlbiA+PSA0OyArK2ksIGxlbiAtPSA0KSB7XG4gICAgayA9IHN0ci5jaGFyQ29kZUF0KGkpICYgMHhmZiB8IChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgOCB8IChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgMTYgfCAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDI0O1xuICAgIGsgPVxuICAgIC8qIE1hdGguaW11bChrLCBtKTogKi9cbiAgICAoayAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChrID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICAgIGsgXj1cbiAgICAvKiBrID4+PiByOiAqL1xuICAgIGsgPj4+IDI0O1xuICAgIGggPVxuICAgIC8qIE1hdGguaW11bChrLCBtKTogKi9cbiAgICAoayAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChrID4+PiAxNikgKiAweGU5OTUgPDwgMTYpIF5cbiAgICAvKiBNYXRoLmltdWwoaCwgbSk6ICovXG4gICAgKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoaCA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgfSAvLyBIYW5kbGUgdGhlIGxhc3QgZmV3IGJ5dGVzIG9mIHRoZSBpbnB1dCBhcnJheVxuXG5cbiAgc3dpdGNoIChsZW4pIHtcbiAgICBjYXNlIDM6XG4gICAgICBoIF49IChzdHIuY2hhckNvZGVBdChpICsgMikgJiAweGZmKSA8PCAxNjtcblxuICAgIGNhc2UgMjpcbiAgICAgIGggXj0gKHN0ci5jaGFyQ29kZUF0KGkgKyAxKSAmIDB4ZmYpIDw8IDg7XG5cbiAgICBjYXNlIDE6XG4gICAgICBoIF49IHN0ci5jaGFyQ29kZUF0KGkpICYgMHhmZjtcbiAgICAgIGggPVxuICAgICAgLyogTWF0aC5pbXVsKGgsIG0pOiAqL1xuICAgICAgKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoaCA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgfSAvLyBEbyBhIGZldyBmaW5hbCBtaXhlcyBvZiB0aGUgaGFzaCB0byBlbnN1cmUgdGhlIGxhc3QgZmV3XG4gIC8vIGJ5dGVzIGFyZSB3ZWxsLWluY29ycG9yYXRlZC5cblxuXG4gIGggXj0gaCA+Pj4gMTM7XG4gIGggPVxuICAvKiBNYXRoLmltdWwoaCwgbSk6ICovXG4gIChoICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGggPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gIHJldHVybiAoKGggXiBoID4+PiAxNSkgPj4+IDApLnRvU3RyaW5nKDM2KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbXVybXVyMjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@emotion/css/node_modules/@emotion/hash/dist/hash.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/css/node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@emotion/css/node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nfunction memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (memoize);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY3NzL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9tZW1vaXplL2Rpc3QvbWVtb2l6ZS5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0RBQWUsT0FBTyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9jc3Mvbm9kZV9tb2R1bGVzL0BlbW90aW9uL21lbW9pemUvZGlzdC9tZW1vaXplLmJyb3dzZXIuZXNtLmpzPzAxOTkiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbWVtb2l6ZShmbikge1xuICB2YXIgY2FjaGUgPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICBpZiAoY2FjaGVbYXJnXSA9PT0gdW5kZWZpbmVkKSBjYWNoZVthcmddID0gZm4oYXJnKTtcbiAgICByZXR1cm4gY2FjaGVbYXJnXTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@emotion/css/node_modules/@emotion/memoize/dist/memoize.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/css/node_modules/@emotion/serialize/dist/serialize.browser.esm.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@emotion/css/node_modules/@emotion/serialize/dist/serialize.browser.esm.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeStyles: function() { return /* binding */ serializeStyles; }\n/* harmony export */ });\n/* harmony import */ var _emotion_hash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/hash */ \"./node_modules/@emotion/css/node_modules/@emotion/hash/dist/hash.browser.esm.js\");\n/* harmony import */ var _emotion_unitless__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/unitless */ \"./node_modules/@emotion/css/node_modules/@emotion/unitless/dist/unitless.browser.esm.js\");\n/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/memoize */ \"./node_modules/@emotion/css/node_modules/@emotion/memoize/dist/memoize.browser.esm.js\");\n\n\n\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = (0,_emotion_memoize__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (_emotion_unitless__WEBPACK_IMPORTED_MODULE_1__[\"default\"][key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (true) {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if ( true && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if ( true && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (true) {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (true) {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if ( true && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && \"development\" !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if ( true && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (true) {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if ( true && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if ( true && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (true) {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = (0,_emotion_hash__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(styles) + identifierName;\n\n  if (true) {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/css/node_modules/@emotion/serialize/dist/serialize.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/css/node_modules/@emotion/unitless/dist/unitless.browser.esm.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@emotion/css/node_modules/@emotion/unitless/dist/unitless.browser.esm.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nvar unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (unitlessKeys);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY3NzL25vZGVfbW9kdWxlcy9AZW1vdGlvbi91bml0bGVzcy9kaXN0L3VuaXRsZXNzLmJyb3dzZXIuZXNtLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0RBQWUsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9jc3Mvbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanM/MWFkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdW5pdGxlc3NLZXlzID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogMSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IDEsXG4gIGJvcmRlckltYWdlU2xpY2U6IDEsXG4gIGJvcmRlckltYWdlV2lkdGg6IDEsXG4gIGJveEZsZXg6IDEsXG4gIGJveEZsZXhHcm91cDogMSxcbiAgYm94T3JkaW5hbEdyb3VwOiAxLFxuICBjb2x1bW5Db3VudDogMSxcbiAgY29sdW1uczogMSxcbiAgZmxleDogMSxcbiAgZmxleEdyb3c6IDEsXG4gIGZsZXhQb3NpdGl2ZTogMSxcbiAgZmxleFNocmluazogMSxcbiAgZmxleE5lZ2F0aXZlOiAxLFxuICBmbGV4T3JkZXI6IDEsXG4gIGdyaWRSb3c6IDEsXG4gIGdyaWRSb3dFbmQ6IDEsXG4gIGdyaWRSb3dTcGFuOiAxLFxuICBncmlkUm93U3RhcnQ6IDEsXG4gIGdyaWRDb2x1bW46IDEsXG4gIGdyaWRDb2x1bW5FbmQ6IDEsXG4gIGdyaWRDb2x1bW5TcGFuOiAxLFxuICBncmlkQ29sdW1uU3RhcnQ6IDEsXG4gIG1zR3JpZFJvdzogMSxcbiAgbXNHcmlkUm93U3BhbjogMSxcbiAgbXNHcmlkQ29sdW1uOiAxLFxuICBtc0dyaWRDb2x1bW5TcGFuOiAxLFxuICBmb250V2VpZ2h0OiAxLFxuICBsaW5lSGVpZ2h0OiAxLFxuICBvcGFjaXR5OiAxLFxuICBvcmRlcjogMSxcbiAgb3JwaGFuczogMSxcbiAgdGFiU2l6ZTogMSxcbiAgd2lkb3dzOiAxLFxuICB6SW5kZXg6IDEsXG4gIHpvb206IDEsXG4gIFdlYmtpdExpbmVDbGFtcDogMSxcbiAgLy8gU1ZHLXJlbGF0ZWQgcHJvcGVydGllc1xuICBmaWxsT3BhY2l0eTogMSxcbiAgZmxvb2RPcGFjaXR5OiAxLFxuICBzdG9wT3BhY2l0eTogMSxcbiAgc3Ryb2tlRGFzaGFycmF5OiAxLFxuICBzdHJva2VEYXNob2Zmc2V0OiAxLFxuICBzdHJva2VNaXRlcmxpbWl0OiAxLFxuICBzdHJva2VPcGFjaXR5OiAxLFxuICBzdHJva2VXaWR0aDogMVxufTtcblxuZXhwb3J0IGRlZmF1bHQgdW5pdGxlc3NLZXlzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/css/node_modules/@emotion/unitless/dist/unitless.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@emotion/stylis/dist/stylis.browser.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@emotion/stylis/dist/stylis.browser.esm.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nfunction stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (stylis_min);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/stylis/dist/stylis.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/hash-sum/hash-sum.js":
/*!*******************************************!*\
  !*** ./node_modules/hash-sum/hash-sum.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nfunction pad (hash, len) {\n  while (hash.length < len) {\n    hash = '0' + hash;\n  }\n  return hash;\n}\n\nfunction fold (hash, text) {\n  var i;\n  var chr;\n  var len;\n  if (text.length === 0) {\n    return hash;\n  }\n  for (i = 0, len = text.length; i < len; i++) {\n    chr = text.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0;\n  }\n  return hash < 0 ? hash * -2 : hash;\n}\n\nfunction foldObject (hash, o, seen) {\n  return Object.keys(o).sort().reduce(foldKey, hash);\n  function foldKey (hash, key) {\n    return foldValue(hash, o[key], key, seen);\n  }\n}\n\nfunction foldValue (input, value, key, seen) {\n  var hash = fold(fold(fold(input, key), toString(value)), typeof value);\n  if (value === null) {\n    return fold(hash, 'null');\n  }\n  if (value === undefined) {\n    return fold(hash, 'undefined');\n  }\n  if (typeof value === 'object' || typeof value === 'function') {\n    if (seen.indexOf(value) !== -1) {\n      return fold(hash, '[Circular]' + key);\n    }\n    seen.push(value);\n\n    var objHash = foldObject(hash, value, seen)\n\n    if (!('valueOf' in value) || typeof value.valueOf !== 'function') {\n      return objHash;\n    }\n\n    try {\n      return fold(objHash, String(value.valueOf()))\n    } catch (err) {\n      return fold(objHash, '[valueOf exception]' + (err.stack || err.message))\n    }\n  }\n  return fold(hash, value.toString());\n}\n\nfunction toString (o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction sum (o) {\n  return pad(foldValue(0, o, '', []).toString(16), 8);\n}\n\nmodule.exports = sum;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGFzaC1zdW0vaGFzaC1zdW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLFNBQVM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2hhc2gtc3VtL2hhc2gtc3VtLmpzP2I5YzQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBwYWQgKGhhc2gsIGxlbikge1xuICB3aGlsZSAoaGFzaC5sZW5ndGggPCBsZW4pIHtcbiAgICBoYXNoID0gJzAnICsgaGFzaDtcbiAgfVxuICByZXR1cm4gaGFzaDtcbn1cblxuZnVuY3Rpb24gZm9sZCAoaGFzaCwgdGV4dCkge1xuICB2YXIgaTtcbiAgdmFyIGNocjtcbiAgdmFyIGxlbjtcbiAgaWYgKHRleHQubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIGhhc2g7XG4gIH1cbiAgZm9yIChpID0gMCwgbGVuID0gdGV4dC5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIGNociA9IHRleHQuY2hhckNvZGVBdChpKTtcbiAgICBoYXNoID0gKChoYXNoIDw8IDUpIC0gaGFzaCkgKyBjaHI7XG4gICAgaGFzaCB8PSAwO1xuICB9XG4gIHJldHVybiBoYXNoIDwgMCA/IGhhc2ggKiAtMiA6IGhhc2g7XG59XG5cbmZ1bmN0aW9uIGZvbGRPYmplY3QgKGhhc2gsIG8sIHNlZW4pIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG8pLnNvcnQoKS5yZWR1Y2UoZm9sZEtleSwgaGFzaCk7XG4gIGZ1bmN0aW9uIGZvbGRLZXkgKGhhc2gsIGtleSkge1xuICAgIHJldHVybiBmb2xkVmFsdWUoaGFzaCwgb1trZXldLCBrZXksIHNlZW4pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGZvbGRWYWx1ZSAoaW5wdXQsIHZhbHVlLCBrZXksIHNlZW4pIHtcbiAgdmFyIGhhc2ggPSBmb2xkKGZvbGQoZm9sZChpbnB1dCwga2V5KSwgdG9TdHJpbmcodmFsdWUpKSwgdHlwZW9mIHZhbHVlKTtcbiAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZvbGQoaGFzaCwgJ251bGwnKTtcbiAgfVxuICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBmb2xkKGhhc2gsICd1bmRlZmluZWQnKTtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBpZiAoc2Vlbi5pbmRleE9mKHZhbHVlKSAhPT0gLTEpIHtcbiAgICAgIHJldHVybiBmb2xkKGhhc2gsICdbQ2lyY3VsYXJdJyArIGtleSk7XG4gICAgfVxuICAgIHNlZW4ucHVzaCh2YWx1ZSk7XG5cbiAgICB2YXIgb2JqSGFzaCA9IGZvbGRPYmplY3QoaGFzaCwgdmFsdWUsIHNlZW4pXG5cbiAgICBpZiAoISgndmFsdWVPZicgaW4gdmFsdWUpIHx8IHR5cGVvZiB2YWx1ZS52YWx1ZU9mICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gb2JqSGFzaDtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGZvbGQob2JqSGFzaCwgU3RyaW5nKHZhbHVlLnZhbHVlT2YoKSkpXG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZXR1cm4gZm9sZChvYmpIYXNoLCAnW3ZhbHVlT2YgZXhjZXB0aW9uXScgKyAoZXJyLnN0YWNrIHx8IGVyci5tZXNzYWdlKSlcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZvbGQoaGFzaCwgdmFsdWUudG9TdHJpbmcoKSk7XG59XG5cbmZ1bmN0aW9uIHRvU3RyaW5nIChvKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobyk7XG59XG5cbmZ1bmN0aW9uIHN1bSAobykge1xuICByZXR1cm4gcGFkKGZvbGRWYWx1ZSgwLCBvLCAnJywgW10pLnRvU3RyaW5nKDE2KSwgOCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3VtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/hash-sum/hash-sum.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxxQ0FBcUMscUJBQU0saUZBQWlGLHFCQUFNLGtFQUFrRSxxQkFBTSxXQUFXLG1CQUFPLENBQUMsb0ZBQXdCOztBQUVyUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX2dsb2JhbF9wcm9jZXNzLCBfZ2xvYmFsX3Byb2Nlc3MxO1xubW9kdWxlLmV4cG9ydHMgPSAoKF9nbG9iYWxfcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzLmVudikgJiYgdHlwZW9mICgoX2dsb2JhbF9wcm9jZXNzMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzMS5lbnYpID09PSBcIm9iamVjdFwiID8gZ2xvYmFsLnByb2Nlc3MgOiByZXF1aXJlKFwiLi4vLi4vY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5Cdev%5Cubuntu%5Cdiscoveri%5Cpages%5Cabout.js&page=%2Fabout!":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5Cdev%5Cubuntu%5Cdiscoveri%5Cpages%5Cabout.js&page=%2Fabout! ***!
  \*********************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/about\",\n      function () {\n        return __webpack_require__(/*! ./pages/about.js */ \"./pages/about.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/about\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1DJTNBJTVDZGV2JTVDdWJ1bnR1JTVDZGlzY292ZXJpJTVDcGFnZXMlNUNhYm91dC5qcyZwYWdlPSUyRmFib3V0ISIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLDBDQUFrQjtBQUN6QztBQUNBO0FBQ0EsT0FBTyxJQUFVO0FBQ2pCLE1BQU0sVUFBVTtBQUNoQjtBQUNBLE9BQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/NTVlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgIFwiL2Fib3V0XCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwiLi9wYWdlcy9hYm91dC5qc1wiKTtcbiAgICAgIH1cbiAgICBdKTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKCkge1xuICAgICAgICB3aW5kb3cuX19ORVhUX1AucHVzaChbXCIvYWJvdXRcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5Cdev%5Cubuntu%5Cdiscoveri%5Cpages%5Cabout.js&page=%2Fabout!\n"));

/***/ }),

/***/ "./pages/about.js":
/*!************************!*\
  !*** ./pages/about.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AboutMe; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var _bcomponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bcomponent.js */ \"./pages/bcomponent.js\");\n\n\nfunction AboutMe() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_bcomponent_js__WEBPACK_IMPORTED_MODULE_1__.BComponent, {}, void 0, false, {\n        fileName: \"C:\\\\dev\\\\ubuntu\\\\discoveri\\\\pages\\\\about.js\",\n        lineNumber: 4,\n        columnNumber: 13\n    }, this);\n}\n_c = AboutMe;\nvar _c;\n$RefreshReg$(_c, \"AboutMe\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9hYm91dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBDO0FBRTNCLFNBQVNDO0lBQ3BCLHFCQUFRLDhEQUFDRCxzREFBVUE7Ozs7O0FBQ3ZCO0tBRndCQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9hYm91dC5qcz8wYzQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QkNvbXBvbmVudH0gZnJvbSAnLi9iY29tcG9uZW50LmpzJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBYm91dE1lKCkge1xuwqAgwqAgcmV0dXJuICg8QkNvbXBvbmVudCAvPilcbn0iXSwibmFtZXMiOlsiQkNvbXBvbmVudCIsIkFib3V0TWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/about.js\n"));

/***/ }),

/***/ "./pages/bcomponent.js":
/*!*****************************!*\
  !*** ./pages/bcomponent.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BComponent: function() { return /* binding */ BComponent; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var _builder_io_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @builder.io/react */ \"./node_modules/@builder.io/react/dist/builder-react.es5.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n\nvar _s = $RefreshSig$();\n\n\n_builder_io_react__WEBPACK_IMPORTED_MODULE_1__.builder.init(\"ce66862eed914e0eb93f8fd47f834273\");\nconst BComponent = ()=>{\n    _s();\n    const [builderContentJson, setBuilderContentJson] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        _builder_io_react__WEBPACK_IMPORTED_MODULE_1__.builder.get(\"page\", {\n            url: location.pathname\n        }).promise().then(setBuilderContentJson);\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_builder_io_react__WEBPACK_IMPORTED_MODULE_1__.BuilderComponent, {\n        model: \"page\",\n        content: builderContentJson\n    }, void 0, false, {\n        fileName: \"C:\\\\dev\\\\ubuntu\\\\discoveri\\\\pages\\\\bcomponent.js\",\n        lineNumber: 14,\n        columnNumber: 12\n    }, undefined);\n};\n_s(BComponent, \"q8ieQo2n+GM8Q1M9i8I5Pt9QDhk=\");\n_c = BComponent;\nvar _c;\n$RefreshReg$(_c, \"BComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9iY29tcG9uZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBNkQ7QUFDbEI7QUFFM0NDLHNEQUFPQSxDQUFDRyxJQUFJLENBQUM7QUFFTixNQUFNQyxhQUFhOztJQUN0QixNQUFNLENBQUNDLG9CQUFvQkMsc0JBQXNCLEdBQUdKLCtDQUFRQSxDQUFDO0lBRTdERCxnREFBU0EsQ0FBQztRQUNORCxzREFBT0EsQ0FBQ08sR0FBRyxDQUFDLFFBQVE7WUFBRUMsS0FBS0MsU0FBU0MsUUFBUTtRQUFDLEdBQzVDQyxPQUFPLEdBQUdDLElBQUksQ0FBQ047SUFDcEIsR0FBRyxFQUFFO0lBRUwscUJBQU8sOERBQUNQLCtEQUFnQkE7UUFBQ2MsT0FBTTtRQUFPQyxTQUFTVDs7Ozs7O0FBQ25ELEVBQUM7R0FUWUQ7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvYmNvbXBvbmVudC5qcz82OTA4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1aWxkZXJDb21wb25lbnQsIGJ1aWxkZXIgfSBmcm9tICdAYnVpbGRlci5pby9yZWFjdCdcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcblxuYnVpbGRlci5pbml0KFwiY2U2Njg2MmVlZDkxNGUwZWI5M2Y4ZmQ0N2Y4MzQyNzNcIilcblxuZXhwb3J0IGNvbnN0IEJDb21wb25lbnQgPSAoKSA9PiB7XG7CoCDCoCBjb25zdCBbYnVpbGRlckNvbnRlbnRKc29uLCBzZXRCdWlsZGVyQ29udGVudEpzb25dID0gdXNlU3RhdGUobnVsbClcblxuwqAgwqAgdXNlRWZmZWN0KCgpID0+IHsgXG7CoCDCoCDCoCDCoCBidWlsZGVyLmdldCgncGFnZScsIHsgdXJsOiBsb2NhdGlvbi5wYXRobmFtZSB9KVxuwqAgwqAgwqAgwqAgLnByb21pc2UoKS50aGVuKHNldEJ1aWxkZXJDb250ZW50SnNvbilcbsKgIMKgIH0sIFtdKVxuXG7CoCDCoCByZXR1cm4gPEJ1aWxkZXJDb21wb25lbnQgbW9kZWw9XCJwYWdlXCIgY29udGVudD17YnVpbGRlckNvbnRlbnRKc29ufSAvPlxufVxuXG4iXSwibmFtZXMiOlsiQnVpbGRlckNvbXBvbmVudCIsImJ1aWxkZXIiLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsImluaXQiLCJCQ29tcG9uZW50IiwiYnVpbGRlckNvbnRlbnRKc29uIiwic2V0QnVpbGRlckNvbnRlbnRKc29uIiwiZ2V0IiwidXJsIiwibG9jYXRpb24iLCJwYXRobmFtZSIsInByb21pc2UiLCJ0aGVuIiwibW9kZWwiLCJjb250ZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/bcomponent.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/node-fetch/browser.js":
/*!********************************************!*\
  !*** ./node_modules/node-fetch/browser.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof __webpack_require__.g !== 'undefined') { return __webpack_require__.g; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports[\"default\"] = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbm9kZS1mZXRjaC9icm93c2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEMsc0NBQXNDO0FBQ3RDLFlBQVkscUJBQU0sb0JBQW9CLE9BQU8scUJBQU07QUFDbkQ7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQyxrQkFBZTtBQUNoQjs7QUFFQSxlQUFlO0FBQ2YsZUFBZTtBQUNmLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbm9kZS1mZXRjaC9icm93c2VyLmpzPzllN2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtZ2xvYmFsXG52YXIgZ2V0R2xvYmFsID0gZnVuY3Rpb24gKCkge1xuXHQvLyB0aGUgb25seSByZWxpYWJsZSBtZWFucyB0byBnZXQgdGhlIGdsb2JhbCBvYmplY3QgaXNcblx0Ly8gYEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKClgXG5cdC8vIEhvd2V2ZXIsIHRoaXMgY2F1c2VzIENTUCB2aW9sYXRpb25zIGluIENocm9tZSBhcHBzLlxuXHRpZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7IHJldHVybiBzZWxmOyB9XG5cdGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykgeyByZXR1cm4gd2luZG93OyB9XG5cdGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykgeyByZXR1cm4gZ2xvYmFsOyB9XG5cdHRocm93IG5ldyBFcnJvcigndW5hYmxlIHRvIGxvY2F0ZSBnbG9iYWwgb2JqZWN0Jyk7XG59XG5cbnZhciBnbG9iYWxPYmplY3QgPSBnZXRHbG9iYWwoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzID0gZ2xvYmFsT2JqZWN0LmZldGNoO1xuXG4vLyBOZWVkZWQgZm9yIFR5cGVTY3JpcHQgYW5kIFdlYnBhY2suXG5pZiAoZ2xvYmFsT2JqZWN0LmZldGNoKSB7XG5cdGV4cG9ydHMuZGVmYXVsdCA9IGdsb2JhbE9iamVjdC5mZXRjaC5iaW5kKGdsb2JhbE9iamVjdCk7XG59XG5cbmV4cG9ydHMuSGVhZGVycyA9IGdsb2JhbE9iamVjdC5IZWFkZXJzO1xuZXhwb3J0cy5SZXF1ZXN0ID0gZ2xvYmFsT2JqZWN0LlJlcXVlc3Q7XG5leHBvcnRzLlJlc3BvbnNlID0gZ2xvYmFsT2JqZWN0LlJlc3BvbnNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/node-fetch/browser.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _inheritsLoose; }\n/* harmony export */ });\n/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf.js */ \"./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\");\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(subClass, superClass);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUNsQztBQUNmO0FBQ0E7QUFDQSxFQUFFLDhEQUFjO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzPzM1M2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNldFByb3RvdHlwZU9mIGZyb20gXCIuL3NldFByb3RvdHlwZU9mLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\n"));

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _setPrototypeOf; }\n/* harmony export */ });\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZi5qcz8xNmM1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIG8uX19wcm90b19fID0gcDtcbiAgICByZXR1cm4gbztcbiAgfTtcbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5Cdev%5Cubuntu%5Cdiscoveri%5Cpages%5Cabout.js&page=%2Fabout!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);